var scrollTopPosition;if(/(iPhone|iPad|iPod).*(OS 11_[0-9]_[0-9])/.test(navigator.userAgent)){function _modalShown(){"relative"!=$("#whitewrap").css("position")&&$("#whitewrap").css({position:"relative","z-index":"-1"})}function _modalClosed(){"static"!=$("#whitewrap").css("position")&&$("#whitewrap").css({position:"static"})}function ios11FBModalHack(){($(".fancybox-overlay").is(":visible")?_modalShown:_modalClosed)()}function bsModalIos11(){jQuery(document).ready(function(e){var i;e("html").append("<style>.safari-nav-force{height: 100%; overflow-y: scroll; -webkit-overflow-scrolling: touch;}</style>"),e('.modal[role="dialog"]').on("shown.bs.modal",function(){i=e(document).scrollTop(),e("html,body").addClass("safari-nav-force")}),e('.modal[role="dialog"]').on("hidden.bs.modal",function(){e("html,body").removeClass("safari-nav-force"),e(document).scrollTop(i)})})}setInterval(function(){ios11FBModalHack()},300),bsModalIos11()}var App={};function video_window_resize(){1024<jQuery(window).width()&&jQuery(document).ready(function(i){i(window).resize(function(){var e=i(this).height();i(".modfull").height(e),i("#videorow.modfull").is(":visible")||i("#videorow.modfull").show(),i(".modfull").find("#videorow.modfull").length&&i(".modfull #videorow.modfull").show()}),i(window).resize()})}function video_window_resize_offset(a){1024<jQuery(window).width()&&jQuery(document).ready(function(i){i(window).resize(function(){var e=i(this).height();i(".modfull").not("#videorow").height(e),i("#videorow.modfull, .modfull.variable").height(e-a)}),i(window).resize()})}!function(v){v.extend(App,{DEVICES:{MOBILE:768,TABLET_PORTRAIT:980,TABLET_LANDSCAPE:1200,DESKTOP:1201},getDevice:function(){var e=v(window).width();switch(!0){case e<768:return this.DEVICES.MOBILE;case 768<=e&&e<980:return this.DEVICES.TABLET_PORTRAIT;case 980<=e&&e<1200:return this.DEVICES.TABLET_LANDSCAPE;default:return this.DEVICES.DESKTOP}},getDeviceString:function(e){switch(e){case this.DEVICES.MOBILE:return"mobile";case this.DEVICES.TABLET_PORTRAIT:return"tablet-portrait";case this.DEVICES.TABLET_LANDSCAPE:return"tablet-landscape";default:return"desktop"}},isDevice:function(e){return e==this.getDevice()}}),v("#menu-main-menu ul.sub-menu li.top-level-empty").click(function(e){if(isMobile.any())return window.location.href=v(this).find("a").attr("href"),!1}),v("#menu-main-menu ul.sub-menu .column").click(function(e){if(isMobile.any()&&v(this).children(":first").is("a"))return window.location.href=v(this).children(":first").attr("href"),!1}),jQuery(window).ready(function(e){setTimeout(function(){if(1<jQuery(".gform_body .datepicker").length){jQuery(".gform_body .datepicker").datepicker("destroy"),jQuery(".gform_body .datepicker").each(function(){var e=jQuery(this),i="mm/dd/yy";e.hasClass("mdy")?i="mm/dd/yy":e.hasClass("dmy")?i="dd/mm/yy":e.hasClass("dmy_dash")?i="dd-mm-yy":e.hasClass("dmy_dot")?i="dd.mm.yy":e.hasClass("ymd_slash")?i="yy/mm/dd":e.hasClass("ymd_dash")?i="yy-mm-dd":e.hasClass("ymd_dot")&&(i="yy.mm.dd");var a="",t="focus";if(e.hasClass("datepicker_with_icon")&&(t="both",a=jQuery("#gforms_calendar_icon_"+this.id).val()),e.datepicker({yearRange:"-100:+20",showOn:t,buttonImage:a,buttonImageOnly:!0,dateFormat:i,changeMonth:!0,changeYear:!0,onSelect:function(e,i){var a=jQuery(i.input.context.form).attr("id").replace("gform","input"),t=jQuery(this).attr("name");jQuery("[name='"+t+"'][id^='"+a+"']").val(e)}}),0<jQuery(".gfield.nosundays").length&&(jQuery(".gfield.nosundays .datepicker").datepicker("destroy"),jQuery(".gfield.nosundays .datepicker").datepicker({minDate:"+1",showOn:"both",buttonImage:"/wp-content/plugins/gravityforms/images/calendar.png",buttonImageOnly:!0,beforeShowDay:function(e){return[0!=e.getDay()]}})),0<jQuery(".gfield.nosaturdays").length&&(jQuery(".gfield.nosaturdays .datepicker").datepicker("destroy"),jQuery(".gfield.nosaturdays .datepicker").datepicker({minDate:"+1",showOn:"both",buttonImage:"/wp-content/plugins/gravityforms/images/calendar.png",buttonImageOnly:!0,beforeShowDay:function(e){return[6!=e.getDay()]}})),0<jQuery(".gfield.nofridayWeekends").length&&(jQuery(".gfield.nofridayWeekends .datepicker").datepicker("destroy"),jQuery(".gfield.nofridayWeekends .datepicker").datepicker({minDate:"+1",showOn:"both",buttonImage:"/wp-content/plugins/gravityforms/images/calendar.png",buttonImageOnly:!0,beforeShowDay:function(e){var i=e.getDay();return 5==i||6==i||0==i?[!1,""]:[!0,""]}})),jQuery("li.di_past_dates .datepicker").length&&jQuery("li.di_past_dates .datepicker").datepicker("option","minDate",null),jQuery("li.di_gf_plus_1d .datepicker").length&&(jQuery("li.di_gf_plus_1d .datepicker").datepicker("option","minDate","+1d"),jQuery("li.di_gf_plus_1d").hasClass("nosundays")&&jQuery("li.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",h),jQuery("li.di_gf_plus_1d").hasClass("nosaturdays")&&jQuery("li.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",y),jQuery("li.di_gf_plus_1d").hasClass("nofridays")&&jQuery("li.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",g),jQuery("li.di_gf_plus_1d").hasClass("nofridayWeekends")&&jQuery("li.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",noFridayWeekends),jQuery("li.di_gf_plus_1d").hasClass("noweekends")&&jQuery("li.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends),jQuery("li.di_gf_plus_1d").hasClass("blackoutskipweekends"))){var o=new Date,n=[0,0,2,2,2,2,1];o.setDate(o.getDate()+1+n[o.getDay()]),v("li.di_gf_plus_1d .datepicker").datepicker("option","minDate",o),v("li.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends)}if(jQuery("li.di_gf_plus_2d .datepicker").length&&(jQuery("li.di_gf_plus_2d .datepicker").datepicker("option","minDate","+2d"),jQuery("li.di_gf_plus_2d").hasClass("nosundays")&&jQuery("li.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",h),jQuery("li.di_gf_plus_2d").hasClass("nosaturdays")&&jQuery("li.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",y),jQuery("li.di_gf_plus_2d").hasClass("nofridays")&&jQuery("li.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",g),jQuery("li.di_gf_plus_2d").hasClass("nofridayWeekends")&&jQuery("li.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",k),jQuery("li.di_gf_plus_2d").hasClass("noweekends")&&jQuery("li.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends),jQuery("li.di_gf_plus_2d").hasClass("blackoutskipweekends"))){var r=new Date;n=[0,0,2,2,2,2,1];r.setDate(r.getDate()+2+n[r.getDay()]),v("li.di_gf_plus_2d .datepicker").datepicker("option","minDate",r),v("li.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends)}if(jQuery("li.di_gf_plus_3d .datepicker").length&&(jQuery("li.di_gf_plus_3d .datepicker").datepicker("option","minDate","+3d"),jQuery("li.di_gf_plus_3d").hasClass("nosundays")&&jQuery("li.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",h),jQuery("li.di_gf_plus_3d").hasClass("nosaturdays")&&jQuery("li.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",y),jQuery("li.di_gf_plus_3d").hasClass("nofridays")&&jQuery("li.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",g),jQuery("li.di_gf_plus_3d").hasClass("nofridayWeekends")&&jQuery("li.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",k),jQuery("li.di_gf_plus_3d").hasClass("noweekends")&&jQuery("li.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends),jQuery("li.di_gf_plus_3d").hasClass("blackoutskipweekends"))){var d=new Date;n=[0,0,2,2,2,2,1];d.setDate(d.getDate()+3+n[d.getDay()]),v("li.di_gf_plus_3d .datepicker").datepicker("option","minDate",d),v("li.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends)}if(jQuery("li.di_gf_plus_4d .datepicker").length&&(jQuery("li.di_gf_plus_4d .datepicker").datepicker("option","minDate","+4d"),jQuery("li.di_gf_plus_4d").hasClass("nosundays")&&jQuery("li.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",h),jQuery("li.di_gf_plus_4d").hasClass("nosaturdays")&&jQuery("li.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",y),jQuery("li.di_gf_plus_4d").hasClass("nofridays")&&jQuery("li.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",g),jQuery("li.di_gf_plus_4d").hasClass("nofridayWeekends")&&jQuery("li.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",k),jQuery("li.di_gf_plus_4d").hasClass("noweekends")&&jQuery("li.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends),jQuery("li.di_gf_plus_4d").hasClass("blackoutskipweekends"))){var s=new Date;n=[0,0,2,2,2,2,1];s.setDate(s.getDate()+4+n[s.getDay()]),v("li.di_gf_plus_4d .datepicker").datepicker("option","minDate",s),v("li.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends)}if(jQuery("li.di_gf_plus_5d .datepicker").length&&(jQuery("li.di_gf_plus_5d .datepicker").datepicker("option","minDate","+5d"),jQuery("li.di_gf_plus_5d").hasClass("nosundays")&&jQuery("li.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",h),jQuery("li.di_gf_plus_5d").hasClass("nosaturdays")&&jQuery("li.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",y),jQuery("li.di_gf_plus_5d").hasClass("nofridays")&&jQuery("li.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",g),jQuery("li.di_gf_plus_5d").hasClass("nofridayWeekends")&&jQuery("li.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",k),jQuery("li.di_gf_plus_5d").hasClass("noweekends")&&jQuery("li.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends),jQuery("li.di_gf_plus_5d").hasClass("blackoutskipweekends"))){var l=new Date;n=[2,2,2,2,2,2,1];l.setDate(l.getDate()+5+n[l.getDay()]),v("li.di_gf_plus_5d .datepicker").datepicker("option","minDate",l),v("li.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends)}if(jQuery("li.di_gf_plus_6d .datepicker").length&&(jQuery("li.di_gf_plus_6d .datepicker").datepicker("option","minDate","+6d"),jQuery("li.di_gf_plus_6d").hasClass("nosundays")&&jQuery("li.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",h),jQuery("li.di_gf_plus_6d").hasClass("nosaturdays")&&jQuery("li.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",y),jQuery("li.di_gf_plus_6d").hasClass("nofridays")&&jQuery("li.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",g),jQuery("li.di_gf_plus_6d").hasClass("nofridayWeekends")&&jQuery("li.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",k),jQuery("li.di_gf_plus_6d").hasClass("noweekends")&&jQuery("li.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends),jQuery("li.di_gf_plus_6d").hasClass("blackoutskipweekends"))){var p=new Date;n=[2,2,2,2,2,2,1];p.setDate(p.getDate()+6+n[p.getDay()]),v("li.di_gf_plus_6d .datepicker").datepicker("option","minDate",p),v("li.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends)}if(jQuery("li.di_gf_plus_7d .datepicker").length&&(jQuery("li.di_gf_plus_7d .datepicker").datepicker("option","minDate","+7d"),jQuery("li.di_gf_plus_7d").hasClass("nosundays")&&jQuery("li.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",h),jQuery("li.di_gf_plus_7d").hasClass("nosaturdays")&&jQuery("li.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",y),jQuery("li.di_gf_plus_7d").hasClass("nofridays")&&jQuery("li.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",g),jQuery("li.di_gf_plus_7d").hasClass("nofridayWeekends")&&jQuery("li.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",k),jQuery("li.di_gf_plus_7d").hasClass("noweekends")&&jQuery("li.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends),jQuery("li.di_gf_plus_7d").hasClass("blackoutskipweekends"))){n=[2,2,2,2,2,2,1];(c=new Date).setDate(c.getDate()+7+n[c.getDay()]),v("li.di_gf_plus_7d .datepicker").datepicker("option","minDate",c),v("li.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends)}if(jQuery("li.di_gf_plus_14d .datepicker").length&&(jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","minDate","+14d"),jQuery("li.di_gf_plus_14d").hasClass("nosundays")&&jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",h),jQuery("li.di_gf_plus_14d").hasClass("nosaturdays")&&jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",y),jQuery("li.di_gf_plus_14d").hasClass("nofridays")&&jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",g),jQuery("li.di_gf_plus_14d").hasClass("nofridayWeekends")&&jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",k),jQuery("li.di_gf_plus_14d").hasClass("noweekends")&&jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends),jQuery("li.di_gf_plus_14d").hasClass("blackoutskipweekends"))){var c;n=[2,2,2,2,2,2,1];(c=new Date).setDate(c.getDate()+7+n[c.getDay()]),v("li.di_gf_plus_14d .datepicker").datepicker("option","minDate",c),v("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends)}if(jQuery("li.gfield").hasClass("noweekends")&&jQuery("li.gfield .datepicker").datepicker("option","beforeShowDay",v.datepicker.noWeekends),v('li[class*="sd|"] .datepicker').length){var u=v('li[class*="sd|"] .datepicker').parents('li[class*="sd|"]').attr("class").match(/sd\|([^\s]*)/),f=new Date(u[1]);v('li[class*="sd|"] .datepicker').datepicker("option","beforeShowDay",function(e){return f<=e?[!0,""]:[!1,""]}),v('li[class*="sd|"] .datepicker').datepicker("option","showOtherMonths",!0),v('li[class*="sd|"] .datepicker').on("click",function(){var e,t,o;e=v(this),t=f.getMonth(),o=f.getFullYear(),e.each(function(e,i){var a=v.datepicker._getInst(i);a.drawMonth=a.selectedMonth=t,a.drawYear=a.selectedYear=o,v.datepicker._notifyChange(a),v.datepicker._adjustDate(i)})})}if(v('li[class*="ed|"] .datepicker').length){u=v('li[class*="ed|"] .datepicker').parents('li[class*="ed|"]').attr("class").match(/ed\|([^\s]*)/);var _=new Date(u[1]);v('li[class*="ed|"] .datepicker').datepicker("option","beforeShowDay",function(e){if(void 0!==f&&f){if(f<=e&&e<=_)return[!0,""]}else if(e<=_)return[!0,""];return[!1,""]}),v('li[class*="ed|"] .datepicker').datepicker("option","showOtherMonths",!0)}function y(e){return[6!=e.getDay()]}function h(e){return[0<e.getDay(),""]}function g(e){return[5!=e.getDay(),""]}function k(e){var i=e.getDay();return 5==i||6==i||0==i?[!1,""]:[!0,""]}function w(e,i,a){for(var t=[],o=parseInt(e),n=parseInt(i),r="AM",d=o,s=a;o<=n;)12<o&&(d=o-12,r="PM"),o!=n&&jQuery.each(s,function(e,i){t.push(d+":"+i+" "+r)}),o++,d++;return t}function m(e){if(jQuery("form.form_times_available").length){var i=jQuery("form.form_times_available").attr("class").split(" ");jQuery.each(i,function(e,i){null!=i.match(/wd\|/i)?(n=i.replace(/wd\|/i,"").split("-"),weekdayStart=n[0],weekdayEnd=n[1]):null!=i.match(/we\|/i)&&(r=i.replace(/we\|/i,"").split("-"),weekendStart=r[0],weekendEnd=r[1])})}void 0===e&&(e=jQuery(".available_date_time input[type=text]").val());var a=new Date(e).getDay(),t=null,o=[15,45],n={open:weekdayStart,closed:weekdayEnd},r={open:weekendStart,closed:weekendEnd};switch(a){case 0:t={day:"Sunday",times:w(r.open,r.closed,o)};break;case 1:t={day:"Monday",times:w(n.open,n.closed,o)};break;case 2:t={day:"Tuesday",times:w(n.open,n.closed,o)};break;case 3:t={day:"Wednesday",times:w(n.open,n.closed,o)};break;case 4:t={day:"Thursday",times:w(n.open,n.closed,o)};break;case 5:t={day:"Friday",times:w(n.open,n.closed,o)};break;case 6:t={day:"Saturday",times:w(r.open,r.closed,o)};break;default:dayOfTheWeek=null}if(jQuery(".available_time_slots select").length){var d=jQuery(".available_time_slots select");d.find("option:not(.gf_placeholder)").remove(),t&&t.times.length&&(d.find("option:not(.gf_placeholder)").remove(),jQuery.each(t.times,function(e,i){d.append("<option class='available-time' value='"+i+"'>"+i+"</option>")}))}}jQuery(".available_date_time .datepicker").datepicker("option","onSelect",function(e,i){m(e)}),jQuery("form.form_times_available").length&&m()})}if(0<jQuery(".gfield.di_gf_enable_today").length){var e=new Date;v(".gfield.di_gf_enable_today .datepicker").datepicker("option","minDate",e)}v(window).trigger("di_gravity_forms_loaded",["application"])},500)})}(jQuery),String.prototype.underscoreToCamelCase=function(){return this.replace(/(\_[a-z])/g,function(e){return e.toUpperCase().replace("_","")})},"undefined"==typeof modfullOffset?video_window_resize():video_window_resize_offset(modfullOffset),jQuery(document).ready(function(a){a(window).width()<=1024&&a("body.page-vehicle-display-page #accordionMenu").length&&a("body.page-vehicle-display-page #accordionMenu").on("accordionactivate",function(e,i){a.isEmptyObject(i.newHeader.offset())||a("html:not(:animated), body:not(:animated)").animate({scrollTop:i.newHeader.offset().top-130},800)})}),function(t){t(document).on("click",".fancybox",function(e){if(("undefined"==typeof DealerInspireInventory||""===DealerInspireInventory.options.is_inventory_page)&&isMobile.any()){var i=t(this).data(),a=t(this).attr("href");return i.mobileUrl&&(a=i.mobileUrl),a&&(t(this).attr("target")&&"_blank"!=t(this).attr("target")?window.location.href=i.vehicle?a+"?"+t.param(i.vehicle):a:window.open(i.vehicle?a+"?"+t.param(i.vehicle):a),e.stopImmediatePropagation(),t.fancybox.close()),!1}})}(jQuery),jQuery(document).ready(function(o){var e=window.location.host,a=window.location.pathname;function i(e){var o=this;return error=function(e,i,a,t){throw new o.window[e](i,a,t)},read_until=function(e,i,a){for(var t=2,o=[],n=e.slice(i,i+1);n!=a;)t+i>e.length&&error("Error","Invalid"),o.push(n),n=e.slice(i+(t-1),i+t),t+=1;return[o.length,o.join("")]},read_chrs=function(e,i,a){var t,o,n,r;for(n=[],t=0;t<a;t++)o=e.slice(i+(t-1),i+t),n.push(o),a-=(r=o.charCodeAt(0))<128||160<=r&&r<=255||-1!=[338,339,352,353,376,402,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8226,8230,8240,8364,8482].indexOf(r)?0:r<2048?1:2;return[n.length,n.join("")]},_unserialize=function(e,i){var a,t,o,n,r,d,s,l,p,c,u,f,_,y,h,g,k,w,m=0,v=function(e){return e};switch(t=(i=i||0)+2,a=e.slice(i,i+1).toLowerCase()){case"i":v=function(e){return parseInt(e,10)},m=(p=read_until(e,t,";"))[0],l=p[1],t+=m+1;break;case"b":v=function(e){return 0!==parseInt(e,10)},m=(p=read_until(e,t,";"))[0],l=p[1],t+=m+1;break;case"d":v=function(e){return parseFloat(e)},m=(p=read_until(e,t,";"))[0],l=p[1],t+=m+1;break;case"n":l=null;break;case"s":m=(c=read_until(e,t,":"))[0],u=c[1],t+=m+2,m=(p=read_chrs(e,t+1,parseInt(u,10)))[0],l=p[1],t+=m+2,m!=parseInt(u,10)&&m!=l.length&&error("SyntaxError","String length mismatch");break;case"a":for(l={},m=(o=read_until(e,t,":"))[0],n=o[1],t+=m+2,d=parseInt(n,10),r=!0,f=0;f<d;f++)h=(y=_unserialize(e,t))[1],_=y[2],t+=h,k=(g=_unserialize(e,t))[1],w=g[2],t+=k,_!==f&&(r=!1),l[_]=w;if(r){for(s=new Array(d),f=0;f<d;f++)s[f]=l[f];l=s}t+=1;break;default:error("SyntaxError","Unknown / Unhandled data type(s): "+a)}return[a,t-i,v(l)]},_unserialize(e+"",0)[2]}if(jQuery(document).on("click",".vehicle a",function(){try{if(jQuery(this).attr("href")&&-1<jQuery(this).attr("href").search("/inventory/")){var e=jQuery.param(DealerInspireInventory.query.to_obj(null,!0)),i=window.location.host;DealerInspireCookie.CreateCookie("di_inv_bc_"+i,a+"#"+e,1)}}catch(e){"undefined"!=typeof console&&console.log(e)}}),jQuery("#bc-parent-page").length&&DealerInspireCookie.ReadCookie("di_inv_bc_"+e)&&jQuery("#bc-parent-page").attr("href",DealerInspireCookie.ReadCookie("di_inv_bc_"+e)),o("body").hasClass("page-vehicle-results-page")){o("body").on("vrp-ready vrp-ajax-complete",function(){!function(){var e=null!==typeof DealerInspireCookie.ReadCookie("di_vehicle_history")?DealerInspireCookie.ReadCookie("di_vehicle_history"):0;e&&(e=i(DealerInspireCookie.ReadCookie("di_vehicle_history"))).vins.length&&(vin_history=e.vins);var t="undefined"!=typeof _common_theme?_common_theme.di_application.already_viewed:di_application.already_viewed;o(".vehicle-overview").each(function(e,i){var a=o(this).attr("id");"undefined"!=typeof vin_history&&vin_history&&-1<o.inArray(a,vin_history)&&o("#inventory-post-"+a).addClass("vehicle-visited").find(".vehicle-leftcol").append("<span class='visited-title'>"+t+" <i class='fa fa-check-circle'></i></span>")}),o(".vehicle-wrap").each(function(e,i){var a=o(this).find("div[data-vin]").data("vin");"undefined"!=typeof vin_history&&vin_history&&-1<o.inArray(a,vin_history)&&o('div[data-vin="'+a+'"]').addClass("vehicle-visited-grid").find(".vehicle-image").append("<span class='visited-title'>"+t+" <i class='fa fa-check-circle'></i></span>")})}()})}if(o("#ask-a-question-beta").length||o(".headerwrap").length){var t=o("#ask-a-question-beta"),n=parseInt(t.data("header-height"))?t.data("header-height").replace(/[^0-9.]/g,""):0,r=o("#header").length||o(".headerwrap").length?o("#header, .headerwrap"):null,d=t.outerHeight(),s=r?r.outerHeight(!0):0,l="-"+(d+s),p=n||s;t.css("top",l),o(window).on("scroll",function(e,i){if(1024<o(window).width()){var a=o(window).scrollTop();d<=a?t.css({top:p+"px",opacity:"1"}):t.css({top:l+"px",opacity:"0"})}})}if(o(document).width()<=768&&o(".dropdown").on("shown.bs.dropdown",function(e){var i=o(e.target).offset();jQuery(this).parents("#sidr").scrollTop(i.top)}),jQuery(".inventory-owl").length&&(jQuery(".inventory-owl .grid-view-results-wrapper").owlCarousel({center:!0,autoPlay:!1,navigation:!0,items:4,itemsDesktop:[1330,4],itemsDesktopSmall:[979,3],itemsTablet:[768,2],itemsMobile:[479,1],navigationText:['<i class="fa fa-angle-left"></i>','<i class="fa fa-angle-right"></i>'],afterInit:function(){o(".inventory-owl").show()}}),jQuery(".inventory-owl #lvrp-container").length))var c=0,u=setInterval(function(){0<jQuery(".inventory-owl #lvrp-container #hits > a").length&&c<5e3&&(jQuery(".inventory-owl #lvrp-container #hits").owlCarousel({center:!0,autoPlay:!1,navigation:!0,items:4,margin:10,itemsDesktop:[1330,4],itemsDesktopSmall:[979,3],itemsTablet:[768,1],itemsMobile:[479,1],navigationText:['<i class="fa fa-angle-left"></i>','<i class="fa fa-angle-right"></i>'],afterInit:function(){o(".inventory-owl").show()}}),clearInterval(u)),c+=100},100);jQuery(".inventory-owl-small").length&&jQuery(".inventory-owl-small .grid-view-results-wrapper").owlCarousel({center:!0,autoPlay:!1,navigation:!0,items:2,itemsDesktop:[1330,2],itemsDesktopSmall:[979,2],itemsTablet:[768,2],itemsMobile:[479,1],navigationText:['<i class="fa fa-angle-left"></i>','<i class="fa fa-angle-right"></i>'],afterInit:function(){o(".inventory-owl").show()}}),o.isFunction(o.fn.matchHeight)&&(o(".staff .staff-item").matchHeight(),o(".matchable-heights").matchHeight()),o(".youtube-link").fancybox(),o("ul.slides li[data-full-slide-link]").length&&o("ul.slides li[data-full-slide-link]").on("click",function(){var e=o(this).data("full-slide-link").length?o(this).data("full-slide-link"):null,i=!(void 0===o(this).data("target")||"blank"!=o(this).data("target"));return e&&(i?window.open(e,"_blank"):window.location.href=e),!1}),o(window).width()<=1024&&o(document).on("touchstart MSPointerDown",function(e){o(".popover").each(function(){o(this).is(e.target)||0!==o(this).has(e.target).length||0!==o(".details-container .popover").has(e.target).length||(o(this).popover("hide"),o(".popover").stop().fadeOut())})})}),jQuery(function(a){a(document).on("gform_post_render",function(e,i){a("#gform_ajax_frame_"+i).attr("src","about:blank")})}),DIFancyBoxEventManager={beforeShowCallbacks:[],init:function(){void 0!==jQuery.fancybox.defaults&&(jQuery.fancybox.defaults.beforeShow=DIFancyBoxEventManager._handleBeforeShow)},registerBeforeShow:function(e,i){i=i||0,DIFancyBoxEventManager.beforeShowCallbacks.splice(i,0,e)},_handleBeforeShow:function(){var e=!1;for(e in DIFancyBoxEventManager.beforeShowCallbacks)DIFancyBoxEventManager.beforeShowCallbacks[e].apply(this)}},jQuery(function(){DIFancyBoxEventManager.init()}),function(l){if("undefined"!=typeof DIFancyBoxEventManager){DIFancyBoxEventManager.registerBeforeShow(function(){var t,o,e=this,i=l(e.element).attr("class");if("iframe"==e.type&&!i.match(/disable-iframe-delay/)&&(t=e,o=0,l.each(["dealerscience"],function(e,i){var a=new RegExp(i,"g");t.href.match(a)&&o++}),!o)){var a=l('<div class="fancybox-iframe-loading"><i class="fa fa-spinner fa-spin fa-3x fa-fw margin-bottom"></i></div>');l(e.skin).append(a),l(e.skin).find("iframe").on("load",function(){l(a).remove()}),setTimeout(function(){l(a).remove()},5e3)}},-1)}var e={initd:!1,isVRP:function(){return 0<l("#results-page").length},content:{selector:!1,parent_el:{selector:!1,index:0},hidden:!1},triggerModal:function(e){this.initd=e,this.openModal(),this.closeModal()},openModal:function(){var s=this;l("#DIModal").on("show.bs.modal",function(e){var i=this,a=l(e.relatedTarget),t=a.data("modal-title"),o=a.data("modal-content"),n=a.data("modal-class"),r=a.data("modal-footer");if(null!=t&&""!=t?l(i).find(".modal-title").html(t):l(i).find(".modal-title").html("&nbsp;"),null!=o&&""!=o&&(s.content.selector=l(o),1<s.content.selector.length&&(s.content.selector=s.content.selector[0]),"none"==l(s.content.selector).css("display")?s.content.hidden=!0:s.content.hidden=!1,s.content.parent_el.selector=l(o).parent(),s.content.parent_el.index=l(s.content.parent_el.selector).find("> *").index(s.content.selector),s.content.hidden&&l(o).show(),l(i).find(".modal-body").append(s.content.selector)),null!=n&&""!=n?l(i).find(".modal-dialog").addClass(n):l(i).find(".modal-dialog").attr("class","modal-dialog"),null!=r&&""!=r)if("false"==r||"hide"==r)l(i).find(".modal-footer").hide();else{var d=0<l(r).length?l(r).clone().show():r;l(i).find(".modal-footer").show().html(d)}else l(i).find(".modal-footer").show();l(i).parent()!=l("body")&&l(i).detach().appendTo("body")})},closeModal:function(){var t=this;l("#DIModal").on("hidden.bs.modal",function(e){var i=l(this).find(l(t.content.selector));if(!t.content.hidden&&t.content.parent_el.index<0)var a=l(t.content.parent_el.selector).find("> *").eq(t.content.parent_el.index);else a=!1;a?l(i).insertBefore(a):l(i).appendTo(l(t.content.parent_el.selector)),t.content.hidden&&l(i).hide(),l(this).find(".modal-body").html(" "),l(this).find(".modal-title").html(" ")})},init:function(){l("body").on("vrp-ready vrp-ajax-complete",function(){console.log("vrp-ready")}),this.initd||(0<l(".di_personalize_loading_message").length&&"undefined"!=typeof DI_Personalization_Site?DI_Personalization_Site.register_hook("content_ready",function(){e.triggerModal("pz")}):0<l("#results-page").length?jQuery("body").on("vrp-ready vrp-ajax-complete",function(){e.initd&&e.destroy(),e.triggerModal("vrp")}):this.triggerModal("doc"))},destroy:function(){l("#DIModal").off()}};e.init()}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwbGljYXRpb24ubWluLmpzIiwic291cmNlcyI6WyJhcHBsaWNhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBpT1MgMTEgbW9kYWwgaGFjayB3aGVyZSBtb2RhbCBjb250ZW50IGlzIG5vdCBiZWluZyBzaG93blxuLy8gTkVFRCBUTyBCRSBVUERBVEVEIGlmIG5ldyB2ZXJzaW9ucyBhcmUgYWZmZWN0ZWRcbi8vIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzQ2MzM5MDYzL2lvcy0xMS1zYWZhcmktYm9vdHN0cmFwLW1vZGFsLXRleHQtYXJlYS1vdXRzaWRlLW9mLWN1cnNvclxudmFyIHNjcm9sbFRvcFBvc2l0aW9uO1xuXG5pZiAoLyhpUGhvbmV8aVBhZHxpUG9kKS4qKE9TIDExX1swLTldX1swLTldKS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KSkge1xuICBmdW5jdGlvbiBfbW9kYWxTaG93bigpIHtcbiAgICBpZiAoJCgnI3doaXRld3JhcCcpLmNzcygncG9zaXRpb24nKSAhPSAncmVsYXRpdmUnKSB7XG4gICAgICAgICQoJyN3aGl0ZXdyYXAnKS5jc3Moe1xuICAgICAgICAgICAgJ3Bvc2l0aW9uJyA6ICdyZWxhdGl2ZScsXG4gICAgICAgICAgICAnei1pbmRleCcgOiAnLTEnXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIF9tb2RhbENsb3NlZCgpIHtcbiAgICBpZiAoJCgnI3doaXRld3JhcCcpLmNzcygncG9zaXRpb24nKSAhPSAnc3RhdGljJykge1xuICAgICAgICAkKCcjd2hpdGV3cmFwJykuY3NzKHtcbiAgICAgICAgICAgICdwb3NpdGlvbicgOiAnc3RhdGljJ1xuICAgICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBpb3MxMUZCTW9kYWxIYWNrKCkge1xuICAgIGlmICgkKCcuZmFuY3lib3gtb3ZlcmxheScpLmlzKCc6dmlzaWJsZScpKSB7XG4gICAgICBfbW9kYWxTaG93bigpXG4gICAgfSBlbHNlIHtcbiAgICAgIF9tb2RhbENsb3NlZCgpXG4gICAgfVxuICB9XG5cblxuICAvKiBiL286IEZhbmN5Ym94IGlvczExIGhhY2sgKi9cbiAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgaW9zMTFGQk1vZGFsSGFjaygpXG4gIH0sIDMwMCk7XG4gIC8qIGUvbzogRmFuY3lib3ggaW9zMTEgaGFjayAqL1xuXG4gIC8qIGIvbzogQm9vdHN0cmFwIE1vZGFsIGlvczExIGhhY2sgKi9cbiAgZnVuY3Rpb24gYnNNb2RhbElvczExKCkge1xuICAgIGpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oJCkge1xuICAgICAgdmFyIGlvc0hhY2tTdHlsZSA9ICc8c3R5bGU+LnNhZmFyaS1uYXYtZm9yY2V7aGVpZ2h0OiAxMDAlOyBvdmVyZmxvdy15OiBzY3JvbGw7IC13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOiB0b3VjaDt9PC9zdHlsZT4nLFxuICAgICAgICAgIF9zY3JvbGxQb3NpdGlvbjtcblxuICAgICAgJCgnaHRtbCcpLmFwcGVuZChpb3NIYWNrU3R5bGUpO1xuXG4gICAgICBmdW5jdGlvbiBfX2JzTW9kYWxTaG93bigpIHtcbiAgICAgICAgX3Njcm9sbFBvc2l0aW9uID0gJChkb2N1bWVudCkuc2Nyb2xsVG9wKCk7XG4gICAgICAgICQoJ2h0bWwsYm9keScpLmFkZENsYXNzKCdzYWZhcmktbmF2LWZvcmNlJyk7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIF9fYnNNb2RhbEhpZGRlbigpIHtcbiAgICAgICAgJCgnaHRtbCxib2R5JykucmVtb3ZlQ2xhc3MoJ3NhZmFyaS1uYXYtZm9yY2UnKTtcbiAgICAgICAgJChkb2N1bWVudCkuc2Nyb2xsVG9wKF9zY3JvbGxQb3NpdGlvbik7XG4gICAgICB9XG5cbiAgICAgIC8qIGIvbzogQm9vdHN0cmFwIE1vZGFsIGlvczExIGhhY2sgKi9cbiAgICAgICQoJy5tb2RhbFtyb2xlPVwiZGlhbG9nXCJdJykub24oJ3Nob3duLmJzLm1vZGFsJywgZnVuY3Rpb24oKSB7XG4gICAgICAgIF9fYnNNb2RhbFNob3duKClcbiAgICAgIH0pO1xuXG4gICAgICAkKCcubW9kYWxbcm9sZT1cImRpYWxvZ1wiXScpLm9uKCdoaWRkZW4uYnMubW9kYWwnLCBmdW5jdGlvbigpIHtcbiAgICAgICAgX19ic01vZGFsSGlkZGVuKClcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgYnNNb2RhbElvczExKCk7XG4gIC8qIGUvbzogQm9vdHN0cmFwIE1vZGFsIGlvczExIGhhY2sgKi9cbn1cblxudmFyIEFwcCA9IHt9O1xuXG4oZnVuY3Rpb24gKCQpIHtcbiAgJC5leHRlbmQoQXBwLCB7XG4gICAgREVWSUNFUzoge1xuICAgICAgTU9CSUxFOiA3NjgsXG4gICAgICBUQUJMRVRfUE9SVFJBSVQ6IDk4MCxcbiAgICAgIFRBQkxFVF9MQU5EU0NBUEU6IDEyMDAsXG4gICAgICBERVNLVE9QOiAxMjAxXG4gICAgfSxcbiAgICBnZXREZXZpY2U6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB3ID0gJCh3aW5kb3cpLndpZHRoKClcbiAgICAgIHN3aXRjaCAodHJ1ZSkge1xuICAgICAgICBjYXNlIHcgPCA3Njg6XG4gICAgICAgICAgcmV0dXJuIHRoaXMuREVWSUNFUy5NT0JJTEVcbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIHcgPj0gNzY4ICYmIHcgPCA5ODA6XG4gICAgICAgICAgcmV0dXJuIHRoaXMuREVWSUNFUy5UQUJMRVRfUE9SVFJBSVRcbiAgICAgICAgICBicmVha1xuICAgICAgICBjYXNlIHcgPj0gOTgwICYmIHcgPCAxMjAwOlxuICAgICAgICAgIHJldHVybiB0aGlzLkRFVklDRVMuVEFCTEVUX0xBTkRTQ0FQRVxuICAgICAgICAgIGJyZWFrXG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgcmV0dXJuIHRoaXMuREVWSUNFUy5ERVNLVE9QXG4gICAgICB9XG4gICAgfSxcbiAgICBnZXREZXZpY2VTdHJpbmc6IGZ1bmN0aW9uICh2YWwpIHtcbiAgICAgIHN3aXRjaCAodmFsKSB7XG4gICAgICAgIGNhc2UgdGhpcy5ERVZJQ0VTLk1PQklMRTogcmV0dXJuICdtb2JpbGUnOyBicmVha1xuICAgICAgICBjYXNlIHRoaXMuREVWSUNFUy5UQUJMRVRfUE9SVFJBSVQ6IHJldHVybiAndGFibGV0LXBvcnRyYWl0JzsgYnJlYWtcbiAgICAgICAgY2FzZSB0aGlzLkRFVklDRVMuVEFCTEVUX0xBTkRTQ0FQRTogcmV0dXJuICd0YWJsZXQtbGFuZHNjYXBlJzsgYnJlYWtcbiAgICAgICAgZGVmYXVsdDogcmV0dXJuICdkZXNrdG9wJzsgYnJlYWtcbiAgICAgIH1cbiAgICB9LFxuICAgIGlzRGV2aWNlOiBmdW5jdGlvbiAoZGV2aWNlKSB7XG4gICAgICByZXR1cm4gZGV2aWNlID09IHRoaXMuZ2V0RGV2aWNlKClcbiAgICB9XG4gIH0pXG5cbiAgLy8gR2l2ZXMgdGhlIGFiaWxpdHkgdG8gdW5zZXJpYWxpemUgUEhQIHNlcmlhbGl6ZWQgc3RyaW5ncywgZ29vZCBmb3IgcmV0cmlldmluZyBQSFAgc3RyaW5ncyB0aGF0IGhhdmUgYmVlbiBzZXJpYWxpemVkXG5cbiAgLy8gU2hvdyBuYXYgbWVudSBpdGVtcyBvbiB0b3VjaCBkZXZpY2VzXG4gICQoJyNtZW51LW1haW4tbWVudSB1bC5zdWItbWVudSBsaS50b3AtbGV2ZWwtZW1wdHknKS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgIGlmIChpc01vYmlsZS5hbnkoKSkge1xuICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYgPSAkKHRoaXMpLmZpbmQoJ2EnKS5hdHRyKCdocmVmJylcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cbiAgfSlcbiAgJCgnI21lbnUtbWFpbi1tZW51IHVsLnN1Yi1tZW51IC5jb2x1bW4nKS5jbGljayhmdW5jdGlvbiAoZSkge1xuICAgIGlmIChpc01vYmlsZS5hbnkoKSAmJiAkKHRoaXMpLmNoaWxkcmVuKCc6Zmlyc3QnKS5pcygnYScpKSB7XG4gICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9ICQodGhpcykuY2hpbGRyZW4oJzpmaXJzdCcpLmF0dHIoJ2hyZWYnKVxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9KVxuXG4gIC8vICQoXCIjbWVudS1tYWluLW1lbnUgLnRvcC1sZXZlbC1jaGlsZHJlblwiKS5jbGljayhmdW5jdGlvbihlKSB7XG4gIC8vICAgaWYoaXNNb2JpbGUuYW55KCkpe1xuICAvLyAgICAgaWYoJCh0aGlzKS5jaGlsZHJlbihcIjpmaXJzdFwiKS5pcygnYScpKXtcbiAgLy8gICAgICAgJChcIiNtZW51LW1haW4tbWVudSAudG9wLWxldmVsLWNoaWxkcmVuXCIpLm5vdCh0aGlzKS5yZW1vdmVDbGFzcygnY2xpY2tlZCcpO1xuICAvLyAgICAgICBpZigkKHRoaXMpLmhhc0NsYXNzKCdjbGlja2VkJykpe1xuICAvLyAgICAgICAgIHJldHVybiB0cnVlO1xuICAvLyAgICAgICB9ZWxzZXtcbiAgLy8gICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdjbGlja2VkJyk7XG4gIC8vICAgICAgIH1cbiAgLy8gICAgIH1cbiAgLy8gICAgIHJldHVybiBmYWxzZTtcbiAgLy8gICB9XG4gIC8vICAgfSk7XG4gIC8vXG4gIC8vXG4gIC8vICQoXCIjbWVudS1tYWluLW1lbnUgbGkgdWwuc3ViLW1lbnUgbGkgYVwiKS5vbigndG91Y2hzdGFydCcsIGZ1bmN0aW9uKGUpIHtcbiAgLy8gICAgICAgaWYoaXNNb2JpbGUuYW55KCkpe1xuICAvLyAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gJCh0aGlzKS5hdHRyKCdocmVmJyk7XG4gIC8vICAgICByZXR1cm4gZmFsc2U7XG4gIC8vICAgfVxuICAvLyAgIH0pO1xuXG4gIC8vIEZpeGVzIEdyYXZpdHkgRm9ybXMgRGF0ZVBpY2tlciB3aGVuIHdlIGhhdmUgTVVMVElQTEUgRk9STVMgV0lUSCBBIERBVEVQSUNLRVIgb24gdGhlIHNhbWUgcGFnZVxuICAvLyBUaGVyZSdzIHByb2JhYmx5IGEgYmV0dGVyIHNvbHV0aW9uLCBidXQgdGhpcyBnZXRzIHRoZSBqb2IgZG9uZSBmb3Igbm93IVxuICAvLyBPVEhFUldJU0UsIFBVVCBUSEUgREFURVBJQ0tFUiBDT0RFIElOIGN1c3RvbS1ib25vYm9zLmpzIElGIFRIRVJFIElTIE9OTFkgQSBTSU5HTEUgREFURVBJQ0tFUiBGSUVMRFxuXG4gIGpRdWVyeSh3aW5kb3cpLnJlYWR5KGZ1bmN0aW9uIChlKSB7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoalF1ZXJ5KCcuZ2Zvcm1fYm9keSAuZGF0ZXBpY2tlcicpLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgZnVuY3Rpb24gZ290b0RhdGUgKCRqLCBtb250aCwgeWVhcikge1xuICAgICAgICAgICRqLmVhY2goZnVuY3Rpb24gKGksIGVsKSB7XG4gICAgICAgICAgICB2YXIgaW5zdCA9ICQuZGF0ZXBpY2tlci5fZ2V0SW5zdChlbClcbiAgICAgICAgICAgIGluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gbW9udGhcbiAgICAgICAgICAgIGluc3QuZHJhd1llYXIgPSBpbnN0LnNlbGVjdGVkWWVhciA9IHllYXJcbiAgICAgICAgICAgICQuZGF0ZXBpY2tlci5fbm90aWZ5Q2hhbmdlKGluc3QpXG4gICAgICAgICAgICAkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZWwpXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuXG4gICAgICAgIGpRdWVyeSgnLmdmb3JtX2JvZHkgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdkZXN0cm95JylcbiAgICAgICAgalF1ZXJ5KCcuZ2Zvcm1fYm9keSAuZGF0ZXBpY2tlcicpLmVhY2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgIHZhciBlbGVtZW50ID0galF1ZXJ5KHRoaXMpXG4gICAgICAgICAgdmFyIGZvcm1hdCA9ICdtbS9kZC95eSdcblxuICAgICAgICAgIGlmIChlbGVtZW50Lmhhc0NsYXNzKCdtZHknKSkgeyBmb3JtYXQgPSAnbW0vZGQveXknIH0gZWxzZSBpZiAoZWxlbWVudC5oYXNDbGFzcygnZG15JykpIHsgZm9ybWF0ID0gJ2RkL21tL3l5JyB9IGVsc2UgaWYgKGVsZW1lbnQuaGFzQ2xhc3MoJ2RteV9kYXNoJykpIHsgZm9ybWF0ID0gJ2RkLW1tLXl5JyB9IGVsc2UgaWYgKGVsZW1lbnQuaGFzQ2xhc3MoJ2RteV9kb3QnKSkgeyBmb3JtYXQgPSAnZGQubW0ueXknIH0gZWxzZSBpZiAoZWxlbWVudC5oYXNDbGFzcygneW1kX3NsYXNoJykpIHsgZm9ybWF0ID0gJ3l5L21tL2RkJyB9IGVsc2UgaWYgKGVsZW1lbnQuaGFzQ2xhc3MoJ3ltZF9kYXNoJykpIHsgZm9ybWF0ID0gJ3l5LW1tLWRkJyB9IGVsc2UgaWYgKGVsZW1lbnQuaGFzQ2xhc3MoJ3ltZF9kb3QnKSkgeyBmb3JtYXQgPSAneXkubW0uZGQnIH1cblxuICAgICAgICAgIHZhciBpbWFnZSA9ICcnXG4gICAgICAgICAgdmFyIHNob3dPbiA9ICdmb2N1cydcbiAgICAgICAgICBpZiAoZWxlbWVudC5oYXNDbGFzcygnZGF0ZXBpY2tlcl93aXRoX2ljb24nKSkge1xuICAgICAgICAgICAgc2hvd09uID0gJ2JvdGgnXG4gICAgICAgICAgICBpbWFnZSA9IGpRdWVyeSgnI2dmb3Jtc19jYWxlbmRhcl9pY29uXycgKyB0aGlzLmlkKS52YWwoKVxuICAgICAgICAgIH1cblxuICAgICAgICAgIGVsZW1lbnQuZGF0ZXBpY2tlcih7XG4gICAgICAgICAgICB5ZWFyUmFuZ2U6ICctMTAwOisyMCcsXG4gICAgICAgICAgICBzaG93T246IHNob3dPbixcbiAgICAgICAgICAgIGJ1dHRvbkltYWdlOiBpbWFnZSxcbiAgICAgICAgICAgIGJ1dHRvbkltYWdlT25seTogdHJ1ZSxcbiAgICAgICAgICAgIGRhdGVGb3JtYXQ6IGZvcm1hdCxcbiAgICAgICAgICAgIGNoYW5nZU1vbnRoOiB0cnVlLFxuICAgICAgICAgICAgY2hhbmdlWWVhcjogdHJ1ZSxcbiAgICAgICAgICAgIG9uU2VsZWN0OiBmdW5jdGlvbiAoc2VsZWN0ZWQsIGV2ZW50KSB7XG4gICAgICAgICAgICAgIHZhciBmb3JtX2lkID0galF1ZXJ5KGV2ZW50LmlucHV0LmNvbnRleHQuZm9ybSkuYXR0cignaWQnKS5yZXBsYWNlKCdnZm9ybScsICdpbnB1dCcpXG4gICAgICAgICAgICAgIHZhciBuYW1lID0galF1ZXJ5KHRoaXMpLmF0dHIoJ25hbWUnKVxuICAgICAgICAgICAgICBqUXVlcnkoXCJbbmFtZT0nXCIgKyBuYW1lICsgXCInXVtpZF49J1wiICsgZm9ybV9pZCArIFwiJ11cIikudmFsKHNlbGVjdGVkKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pIC8vIGVPRjogZWxlbWVudC5kYXRlcGlja2VyXG5cbiAgICAgICAgICAvLyBObyBTdW5kYXlzIG9uIGRhdGVwaWNrZXJcbiAgICAgICAgICBpZiAoalF1ZXJ5KCcuZ2ZpZWxkLm5vc3VuZGF5cycpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIC8vIGRlc3Ryb3kgZGVmYXVsdCBHcmF2aXR5IEZvcm0gZGF0ZXBpY2tlclxuICAgICAgICAgICAgalF1ZXJ5KCcuZ2ZpZWxkLm5vc3VuZGF5cyAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ2Rlc3Ryb3knKVxuICAgICAgICAgICAgLy8gY3JlYXRlIG5ldyBjdXN0b20gZGF0ZXBpY2tlclxuICAgICAgICAgICAgalF1ZXJ5KCcuZ2ZpZWxkLm5vc3VuZGF5cyAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoe1xuICAgICAgICAgICAgICBtaW5EYXRlOiAnKzEnLFxuICAgICAgICAgICAgICBzaG93T246ICdib3RoJyxcbiAgICAgICAgICAgICAgYnV0dG9uSW1hZ2U6ICcvd3AtY29udGVudC9wbHVnaW5zL2dyYXZpdHlmb3Jtcy9pbWFnZXMvY2FsZW5kYXIucG5nJyxcbiAgICAgICAgICAgICAgYnV0dG9uSW1hZ2VPbmx5OiB0cnVlLFxuICAgICAgICAgICAgICBiZWZvcmVTaG93RGF5OiBmdW5jdGlvbiAoZGF0ZSkge1xuICAgICAgICAgICAgICAgIHZhciBkYXkgPSBkYXRlLmdldERheSgpXG4gICAgICAgICAgICAgICAgcmV0dXJuIFsoZGF5ICE9IDApXVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIE5vIFNhdHVyZGF5cyBvbiBkYXRlcGlja2VyXG4gICAgICAgICAgaWYgKGpRdWVyeSgnLmdmaWVsZC5ub3NhdHVyZGF5cycpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIC8vIGRlc3Ryb3kgZGVmYXVsdCBHcmF2aXR5IEZvcm0gZGF0ZXBpY2tlclxuICAgICAgICAgICAgalF1ZXJ5KCcuZ2ZpZWxkLm5vc2F0dXJkYXlzIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignZGVzdHJveScpXG4gICAgICAgICAgICAvLyBjcmVhdGUgbmV3IGN1c3RvbSBkYXRlcGlja2VyXG4gICAgICAgICAgICBqUXVlcnkoJy5nZmllbGQubm9zYXR1cmRheXMgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKHtcbiAgICAgICAgICAgICAgbWluRGF0ZTogJysxJyxcbiAgICAgICAgICAgICAgc2hvd09uOiAnYm90aCcsXG4gICAgICAgICAgICAgIGJ1dHRvbkltYWdlOiAnL3dwLWNvbnRlbnQvcGx1Z2lucy9ncmF2aXR5Zm9ybXMvaW1hZ2VzL2NhbGVuZGFyLnBuZycsXG4gICAgICAgICAgICAgIGJ1dHRvbkltYWdlT25seTogdHJ1ZSxcbiAgICAgICAgICAgICAgYmVmb3JlU2hvd0RheTogZnVuY3Rpb24gKGRhdGUpIHtcbiAgICAgICAgICAgICAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXkoKVxuICAgICAgICAgICAgICAgIHJldHVybiBbKGRheSAhPSA2KV1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBObyBGcmlkYXlzIG9uIGRhdGVwaWNrZXJcbiAgICAgICAgICBpZiAoalF1ZXJ5KCcuZ2ZpZWxkLm5vZnJpZGF5V2Vla2VuZHMnKS5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAvLyBkZXN0cm95IGRlZmF1bHQgR3Jhdml0eSBGb3JtIGRhdGVwaWNrZXJcbiAgICAgICAgICAgIGpRdWVyeSgnLmdmaWVsZC5ub2ZyaWRheVdlZWtlbmRzIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignZGVzdHJveScpXG4gICAgICAgICAgICAvLyBjcmVhdGUgbmV3IGN1c3RvbSBkYXRlcGlja2VyXG4gICAgICAgICAgICBqUXVlcnkoJy5nZmllbGQubm9mcmlkYXlXZWVrZW5kcyAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoe1xuICAgICAgICAgICAgICBtaW5EYXRlOiAnKzEnLFxuICAgICAgICAgICAgICBzaG93T246ICdib3RoJyxcbiAgICAgICAgICAgICAgYnV0dG9uSW1hZ2U6ICcvd3AtY29udGVudC9wbHVnaW5zL2dyYXZpdHlmb3Jtcy9pbWFnZXMvY2FsZW5kYXIucG5nJyxcbiAgICAgICAgICAgICAgYnV0dG9uSW1hZ2VPbmx5OiB0cnVlLFxuICAgICAgICAgICAgICBiZWZvcmVTaG93RGF5OiBmdW5jdGlvbihkYXRlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGRheSA9IGRhdGUuZ2V0RGF5KCk7XG4gICAgICAgICAgICAgICAgaWYoIChkYXkgPT0gNSkgfHwgKGRheSA9PSA2KSAgfHwgKGRheSA9PSAwKSApe1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIFtmYWxzZSwgJyddO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgICAgICByZXR1cm4gW3RydWUsICcnXTsgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8qIFdBUk5JTkcgLSBXQVJOSU5HIC0tIFRoaXMgY29kZSBpcyBhbHNvIGxvY2F0ZWQgaW4gY3VzdG9tLWJvbm9ib3MuanMgZm9yIG11bHRpcGxlIEdyYXZpdHkgRm9ybXNcbiAgICAgICAgICAqIHNvIGlmIHlvdSB1cGRhdGUgdGhlIGNvZGUgaGVyZSwgeW91IGhhdmUgdG8gcmVwbGljYXRlIGl0IGluIGFwcGxpY2F0aW9uLmpzXG4gICAgICAgICAgKlxuICAgICAgICAgICogU2V0IGN1c3RvbSBtaW5EYXRlIG9wdGlvbnMgdXNpbmcgc3RhdGljIGNsYXNzZXMgaW4gdGhlIHdwLWFkbWluID4gR0YgPiBGb3JtIGVkaXRvclxuICAgICAgICAgICogVGhpcyB3aWxsIGRpc2FibGUgdGhlIGFtb3VudCBvZiBkYXlzIGluY2x1ZGluZyB0b2RheXMgZGF0ZVxuICAgICAgICAgICogWU9VIE1VU1QgQUxTTyBBREQgZGF0ZXBpY2tlciBBUyBBIENMQVNTIEZPUiBUSEUgREFURVBJQ0tFUiBGSUVMRCwgQVMgV0VMTCBBUyBUSEUgZGlfZ2ZfcGx1c194ZFxuICAgICAgICAgICogU28gdGhlIGNsYXNzIGlucHV0IGJveCB3b3VsZCBsb29rIGxpa2UgdGhpczogZGF0ZXBpY2tlciBkaV9nZl9wbHVzXzNkXG4gICAgICAgICAgKi9cblxuICAgICAgICAgIC8vIGVuYWJsZSBwYXN0IGRhdGVzXG4gICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfcGFzdF9kYXRlcyAuZGF0ZXBpY2tlcicpLmxlbmd0aCkge1xuICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9wYXN0X2RhdGVzIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ21pbkRhdGUnLCBudWxsKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBpZiB0aGUgZGF0ZXBpY2tlciBwYXJlbnQgaGFzIHRoZSAuZGlfZ2ZfcGx1c18xZCBjbGFzcywgdGhlbiBkaXNhYmxlIHRvZGF5cyBkYXRlXG4gICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18xZCAuZGF0ZXBpY2tlcicpLmxlbmd0aCkge1xuICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzFkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ21pbkRhdGUnLCAnKzFkJylcblxuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18xZCcpLmhhc0NsYXNzKCdub3N1bmRheXMnKSkge1xuICAgICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMWQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vU3VuZGF5KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzFkJykuaGFzQ2xhc3MoJ25vc2F0dXJkYXlzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzFkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub1NhdHVyZGF5KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzFkJykuaGFzQ2xhc3MoJ25vZnJpZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18xZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9GcmlkYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMWQnKS5oYXNDbGFzcygnbm9mcmlkYXlXZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18xZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9GcmlkYXlXZWVrZW5kcylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18xZCcpLmhhc0NsYXNzKCdub3dlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzFkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCAkLmRhdGVwaWNrZXIubm9XZWVrZW5kcylcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLyogc2tpcCB3ZWVrZW5kcyBvbiBibGFja291dCBkYXRlcyAtIHNvIGlmIHRoZSAxc3QgZGF5IGZhbGxzIG9uIGEgU3VuZGF5LCBibGFja291dCBNb25kYXkgKi9cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMWQnKS5oYXNDbGFzcygnYmxhY2tvdXRza2lwd2Vla2VuZHMnKSkge1xuICAgICAgICAgICAgICB2YXIgb25lV29ya2luZ0RheSA9IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgdmFyIGFkanVzdG1lbnRzID0gWzAsIDAsIDIsIDIsIDIsIDIsIDFdIC8vIE9mZnNldHMgYnkgZGF5IG9mIHRoZSB3ZWVrXG4gICAgICAgICAgICAgIG9uZVdvcmtpbmdEYXkuc2V0RGF0ZShvbmVXb3JraW5nRGF5LmdldERhdGUoKSArIDEgKyBhZGp1c3RtZW50c1tvbmVXb3JraW5nRGF5LmdldERheSgpXSlcbiAgICAgICAgICAgICAgJCgnbGkuZGlfZ2ZfcGx1c18xZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdtaW5EYXRlJywgb25lV29ya2luZ0RheSlcbiAgICAgICAgICAgICAgJCgnbGkuZGlfZ2ZfcGx1c18xZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5JywgJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gaWYgdGhlIGRhdGVwaWNrZXIgcGFyZW50IGhhcyB0aGUgLmRpX2dmX3BsdXNfMmQgY2xhc3MsIHRoZW4gZGlzYWJsZSB0b2RheSwgYW5kIG5leHQgZGF5XG4gICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18yZCAuZGF0ZXBpY2tlcicpLmxlbmd0aCkge1xuICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzJkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ21pbkRhdGUnLCAnKzJkJylcblxuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18yZCcpLmhhc0NsYXNzKCdub3N1bmRheXMnKSkge1xuICAgICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMmQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vU3VuZGF5KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzJkJykuaGFzQ2xhc3MoJ25vc2F0dXJkYXlzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzJkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub1NhdHVyZGF5KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzJkJykuaGFzQ2xhc3MoJ25vZnJpZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18yZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9GcmlkYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMmQnKS5oYXNDbGFzcygnbm9mcmlkYXlXZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18yZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9GcmlkYXlXZWVrZW5kKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzJkJykuaGFzQ2xhc3MoJ25vd2Vla2VuZHMnKSkge1xuICAgICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMmQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsICQuZGF0ZXBpY2tlci5ub1dlZWtlbmRzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvKiBza2lwIHdlZWtlbmRzIG9uIGJsYWNrb3V0IGRhdGVzIC0gc28gaWYgdGhlIDJuZCBkYXkgZmFsbHMgb24gYSBTdW5kYXksIGJsYWNrb3V0IE1vbmRheSAqL1xuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18yZCcpLmhhc0NsYXNzKCdibGFja291dHNraXB3ZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIHZhciB0d29Xb3JraW5nRGF5cyA9IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgdmFyIGFkanVzdG1lbnRzID0gWzAsIDAsIDIsIDIsIDIsIDIsIDFdIC8vIE9mZnNldHMgYnkgZGF5IG9mIHRoZSB3ZWVrXG4gICAgICAgICAgICAgIHR3b1dvcmtpbmdEYXlzLnNldERhdGUodHdvV29ya2luZ0RheXMuZ2V0RGF0ZSgpICsgMiArIGFkanVzdG1lbnRzW3R3b1dvcmtpbmdEYXlzLmdldERheSgpXSlcbiAgICAgICAgICAgICAgJCgnbGkuZGlfZ2ZfcGx1c18yZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdtaW5EYXRlJywgdHdvV29ya2luZ0RheXMpXG4gICAgICAgICAgICAgICQoJ2xpLmRpX2dmX3BsdXNfMmQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsICQuZGF0ZXBpY2tlci5ub1dlZWtlbmRzKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIGlmIHRoZSBkYXRlcGlja2VyIHBhcmVudCBoYXMgdGhlIC5kaV9nZl9wbHVzXzNkIGNsYXNzLCB0aGVuIGRpc2FibGUgdG9kYXksIGFuZCB0aGUgbmV4dCAyIGRheXNcbiAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzNkIC5kYXRlcGlja2VyJykubGVuZ3RoKSB7XG4gICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfM2QgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnbWluRGF0ZScsICcrM2QnKVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzNkJykuaGFzQ2xhc3MoJ25vc3VuZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18zZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9TdW5kYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfM2QnKS5oYXNDbGFzcygnbm9zYXR1cmRheXMnKSkge1xuICAgICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfM2QgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vU2F0dXJkYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfM2QnKS5oYXNDbGFzcygnbm9mcmlkYXlzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzNkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub0ZyaWRheSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18zZCcpLmhhc0NsYXNzKCdub2ZyaWRheVdlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzNkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub0ZyaWRheVdlZWtlbmQpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfM2QnKS5oYXNDbGFzcygnbm93ZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18zZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5JywgJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qIHNraXAgd2Vla2VuZHMgb24gYmxhY2tvdXQgZGF0ZXMgLSBzbyBpZiB0aGUgM3JkIGRheSBmYWxscyBvbiBhIFN1bmRheSwgYmxhY2tvdXQgTW9uZGF5ICovXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzNkJykuaGFzQ2xhc3MoJ2JsYWNrb3V0c2tpcHdlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgdmFyIHRocmVlV29ya2luZ0RheXMgPSBuZXcgRGF0ZSgpXG4gICAgICAgICAgICAgIHZhciBhZGp1c3RtZW50cyA9IFswLCAwLCAyLCAyLCAyLCAyLCAxXSAvLyBPZmZzZXRzIGJ5IGRheSBvZiB0aGUgd2Vla1xuICAgICAgICAgICAgICB0aHJlZVdvcmtpbmdEYXlzLnNldERhdGUodGhyZWVXb3JraW5nRGF5cy5nZXREYXRlKCkgKyAzICsgYWRqdXN0bWVudHNbdGhyZWVXb3JraW5nRGF5cy5nZXREYXkoKV0pXG4gICAgICAgICAgICAgICQoJ2xpLmRpX2dmX3BsdXNfM2QgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnbWluRGF0ZScsIHRocmVlV29ya2luZ0RheXMpXG4gICAgICAgICAgICAgICQoJ2xpLmRpX2dmX3BsdXNfM2QgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsICQuZGF0ZXBpY2tlci5ub1dlZWtlbmRzKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIGlmIHRoZSBkYXRlcGlja2VyIHBhcmVudCBoYXMgdGhlIC5kaV9nZl9wbHVzXzRkIGNsYXNzLCB0aGVuIGRpc2FibGUgdG9kYXksIGFuZCB0aGUgbmV4dCAzIGRheXNcbiAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzRkIC5kYXRlcGlja2VyJykubGVuZ3RoKSB7XG4gICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNGQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnbWluRGF0ZScsICcrNGQnKVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzRkJykuaGFzQ2xhc3MoJ25vc3VuZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c180ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9TdW5kYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNGQnKS5oYXNDbGFzcygnbm9zYXR1cmRheXMnKSkge1xuICAgICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNGQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vU2F0dXJkYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNGQnKS5oYXNDbGFzcygnbm9mcmlkYXlzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzRkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub0ZyaWRheSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c180ZCcpLmhhc0NsYXNzKCdub2ZyaWRheVdlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzRkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub0ZyaWRheVdlZWtlbmQpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNGQnKS5oYXNDbGFzcygnbm93ZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c180ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5JywgJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qIHNraXAgd2Vla2VuZHMgb24gYmxhY2tvdXQgZGF0ZXMgLSBzbyBpZiB0aGUgNHRoIGRheSBmYWxscyBvbiBhIFN1bmRheSwgYmxhY2tvdXQgTW9uZGF5ICovXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzRkJykuaGFzQ2xhc3MoJ2JsYWNrb3V0c2tpcHdlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgdmFyIGZvdXJXb3JraW5nRGF5cyA9IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgdmFyIGFkanVzdG1lbnRzID0gWzAsIDAsIDIsIDIsIDIsIDIsIDFdIC8vIE9mZnNldHMgYnkgZGF5IG9mIHRoZSB3ZWVrXG4gICAgICAgICAgICAgIGZvdXJXb3JraW5nRGF5cy5zZXREYXRlKGZvdXJXb3JraW5nRGF5cy5nZXREYXRlKCkgKyA0ICsgYWRqdXN0bWVudHNbZm91cldvcmtpbmdEYXlzLmdldERheSgpXSlcbiAgICAgICAgICAgICAgJCgnbGkuZGlfZ2ZfcGx1c180ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdtaW5EYXRlJywgZm91cldvcmtpbmdEYXlzKVxuICAgICAgICAgICAgICAkKCdsaS5kaV9nZl9wbHVzXzRkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCAkLmRhdGVwaWNrZXIubm9XZWVrZW5kcylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBpZiB0aGUgZGF0ZXBpY2tlciBwYXJlbnQgaGFzIHRoZSAuZGlfZ2ZfcGx1c181ZCBjbGFzcywgdGhlbiBkaXNhYmxlIHRvZGF5IGFuZCB0aGUgbmV4dCA0IGRheXNcbiAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzVkIC5kYXRlcGlja2VyJykubGVuZ3RoKSB7XG4gICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNWQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnbWluRGF0ZScsICcrNWQnKVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzVkJykuaGFzQ2xhc3MoJ25vc3VuZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c181ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9TdW5kYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNWQnKS5oYXNDbGFzcygnbm9zYXR1cmRheXMnKSkge1xuICAgICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNWQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vU2F0dXJkYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNWQnKS5oYXNDbGFzcygnbm9mcmlkYXlzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzVkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub0ZyaWRheSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c181ZCcpLmhhc0NsYXNzKCdub2ZyaWRheVdlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzVkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub0ZyaWRheVdlZWtlbmQpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNWQnKS5oYXNDbGFzcygnbm93ZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c181ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5JywgJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qIHNraXAgd2Vla2VuZHMgb24gYmxhY2tvdXQgZGF0ZXMgLSBzbyBpZiB0aGUgNXRoIGRheSBmYWxscyBvbiBhIFN1bmRheSwgYmxhY2tvdXQgTW9uZGF5ICovXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzVkJykuaGFzQ2xhc3MoJ2JsYWNrb3V0c2tpcHdlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgdmFyIGZpdmVXb3JraW5nRGF5cyA9IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgdmFyIGFkanVzdG1lbnRzID0gWzIsIDIsIDIsIDIsIDIsIDIsIDFdIC8vIE9mZnNldHMgYnkgZGF5IG9mIHRoZSB3ZWVrXG4gICAgICAgICAgICAgIGZpdmVXb3JraW5nRGF5cy5zZXREYXRlKGZpdmVXb3JraW5nRGF5cy5nZXREYXRlKCkgKyA1ICsgYWRqdXN0bWVudHNbZml2ZVdvcmtpbmdEYXlzLmdldERheSgpXSlcbiAgICAgICAgICAgICAgJCgnbGkuZGlfZ2ZfcGx1c181ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdtaW5EYXRlJywgZml2ZVdvcmtpbmdEYXlzKVxuICAgICAgICAgICAgICAkKCdsaS5kaV9nZl9wbHVzXzVkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCAkLmRhdGVwaWNrZXIubm9XZWVrZW5kcylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBpZiB0aGUgZGF0ZXBpY2tlciBwYXJlbnQgaGFzIHRoZSAuZGlfZ2ZfcGx1c182ZCBjbGFzcywgdGhlbiBkaXNhYmxlIHRvZGF5IGFuZCB0aGUgbmV4dCA1IGRheXNcbiAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzZkIC5kYXRlcGlja2VyJykubGVuZ3RoKSB7XG4gICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNmQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnbWluRGF0ZScsICcrNmQnKVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzZkJykuaGFzQ2xhc3MoJ25vc3VuZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c182ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9TdW5kYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNmQnKS5oYXNDbGFzcygnbm9zYXR1cmRheXMnKSkge1xuICAgICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNmQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vU2F0dXJkYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNmQnKS5oYXNDbGFzcygnbm9mcmlkYXlzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzZkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub0ZyaWRheSlcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c182ZCcpLmhhc0NsYXNzKCdub2ZyaWRheVdlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzZkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub0ZyaWRheVdlZWtlbmQpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfNmQnKS5oYXNDbGFzcygnbm93ZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c182ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5JywgJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qIHNraXAgd2Vla2VuZHMgb24gYmxhY2tvdXQgZGF0ZXMgLSBzbyBpZiB0aGUgNnRoIGRheSBmYWxscyBvbiBhIFN1bmRheSwgYmxhY2tvdXQgTW9uZGF5ICovXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzZkJykuaGFzQ2xhc3MoJ2JsYWNrb3V0c2tpcHdlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgdmFyIHNpeFdvcmtpbmdEYXlzID0gbmV3IERhdGUoKVxuICAgICAgICAgICAgICB2YXIgYWRqdXN0bWVudHMgPSBbMiwgMiwgMiwgMiwgMiwgMiwgMV0gLy8gT2Zmc2V0cyBieSBkYXkgb2YgdGhlIHdlZWtcbiAgICAgICAgICAgICAgc2l4V29ya2luZ0RheXMuc2V0RGF0ZShzaXhXb3JraW5nRGF5cy5nZXREYXRlKCkgKyA2ICsgYWRqdXN0bWVudHNbc2l4V29ya2luZ0RheXMuZ2V0RGF5KCldKVxuICAgICAgICAgICAgICAkKCdsaS5kaV9nZl9wbHVzXzZkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ21pbkRhdGUnLCBzaXhXb3JraW5nRGF5cylcbiAgICAgICAgICAgICAgJCgnbGkuZGlfZ2ZfcGx1c182ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5JywgJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMpXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gaWYgdGhlIGRhdGVwaWNrZXIgcGFyZW50IGhhcyB0aGUgLmRpX2dmX3BsdXNfN2QgY2xhc3MsIHRoZW4gZGlzYWJsZSB0b2RheSBhbmQgdGhlIG5leHQgNiBkYXlzXG4gICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c183ZCAuZGF0ZXBpY2tlcicpLmxlbmd0aCkge1xuICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzdkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ21pbkRhdGUnLCAnKzdkJylcblxuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c183ZCcpLmhhc0NsYXNzKCdub3N1bmRheXMnKSkge1xuICAgICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfN2QgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vU3VuZGF5KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzdkJykuaGFzQ2xhc3MoJ25vc2F0dXJkYXlzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzdkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCBub1NhdHVyZGF5KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzdkJykuaGFzQ2xhc3MoJ25vZnJpZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c183ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9GcmlkYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfN2QnKS5oYXNDbGFzcygnbm9mcmlkYXlXZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c183ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9GcmlkYXlXZWVrZW5kKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzdkJykuaGFzQ2xhc3MoJ25vd2Vla2VuZHMnKSkge1xuICAgICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfN2QgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsICQuZGF0ZXBpY2tlci5ub1dlZWtlbmRzKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvKiBza2lwIHdlZWtlbmRzIG9uIGJsYWNrb3V0IGRhdGVzIC0gc28gaWYgdGhlIDd0aCBkYXkgZmFsbHMgb24gYSBTdW5kYXksIGJsYWNrb3V0IE1vbmRheSAqL1xuICAgICAgICAgICAgaWYgKGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c183ZCcpLmhhc0NsYXNzKCdibGFja291dHNraXB3ZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIHZhciBzZXZlbldvcmtpbmdEYXlzID0gbmV3IERhdGUoKVxuICAgICAgICAgICAgICB2YXIgYWRqdXN0bWVudHMgPSBbMiwgMiwgMiwgMiwgMiwgMiwgMV0gLy8gT2Zmc2V0cyBieSBkYXkgb2YgdGhlIHdlZWtcbiAgICAgICAgICAgICAgc2V2ZW5Xb3JraW5nRGF5cy5zZXREYXRlKHNldmVuV29ya2luZ0RheXMuZ2V0RGF0ZSgpICsgNyArIGFkanVzdG1lbnRzW3NldmVuV29ya2luZ0RheXMuZ2V0RGF5KCldKVxuICAgICAgICAgICAgICAkKCdsaS5kaV9nZl9wbHVzXzdkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ21pbkRhdGUnLCBzZXZlbldvcmtpbmdEYXlzKVxuICAgICAgICAgICAgICAkKCdsaS5kaV9nZl9wbHVzXzdkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ2JlZm9yZVNob3dEYXknLCAkLmRhdGVwaWNrZXIubm9XZWVrZW5kcylcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAgLy8gaWYgdGhlIGRhdGVwaWNrZXIgcGFyZW50IGhhcyB0aGUgLmRpX2dmX3BsdXNfMTRkIGNsYXNzLCB0aGVuIGRpc2FibGUgdG9kYXkgYW5kIHRoZSBuZXh0IDYgZGF5c1xuICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMTRkIC5kYXRlcGlja2VyJykubGVuZ3RoKSB7XG4gICAgICAgICAgICBqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMTRkIC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ21pbkRhdGUnLCAnKzE0ZCcpXG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMTRkJykuaGFzQ2xhc3MoJ25vc3VuZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18xNGQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vU3VuZGF5KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzE0ZCcpLmhhc0NsYXNzKCdub3NhdHVyZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18xNGQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vU2F0dXJkYXkpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2xpLmRpX2dmX3BsdXNfMTRkJykuaGFzQ2xhc3MoJ25vZnJpZGF5cycpKSB7XG4gICAgICAgICAgICAgIGpRdWVyeSgnbGkuZGlfZ2ZfcGx1c18xNGQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIG5vRnJpZGF5KVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzE0ZCcpLmhhc0NsYXNzKCdub2ZyaWRheVdlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzE0ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5Jywgbm9GcmlkYXlXZWVrZW5kKVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzE0ZCcpLmhhc0NsYXNzKCdub3dlZWtlbmRzJykpIHtcbiAgICAgICAgICAgICAgalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzE0ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5JywgJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMpXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qIHNraXAgd2Vla2VuZHMgb24gYmxhY2tvdXQgZGF0ZXMgLSBzbyBpZiB0aGUgN3RoIGRheSBmYWxscyBvbiBhIFN1bmRheSwgYmxhY2tvdXQgTW9uZGF5ICovXG4gICAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5kaV9nZl9wbHVzXzE0ZCcpLmhhc0NsYXNzKCdibGFja291dHNraXB3ZWVrZW5kcycpKSB7XG4gICAgICAgICAgICAgIHZhciBzZXZlbldvcmtpbmdEYXlzID0gbmV3IERhdGUoKVxuICAgICAgICAgICAgICB2YXIgYWRqdXN0bWVudHMgPSBbMiwgMiwgMiwgMiwgMiwgMiwgMV0gLy8gT2Zmc2V0cyBieSBkYXkgb2YgdGhlIHdlZWtcbiAgICAgICAgICAgICAgc2V2ZW5Xb3JraW5nRGF5cy5zZXREYXRlKHNldmVuV29ya2luZ0RheXMuZ2V0RGF0ZSgpICsgNyArIGFkanVzdG1lbnRzW3NldmVuV29ya2luZ0RheXMuZ2V0RGF5KCldKVxuICAgICAgICAgICAgICAkKCdsaS5kaV9nZl9wbHVzXzE0ZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdtaW5EYXRlJywgc2V2ZW5Xb3JraW5nRGF5cylcbiAgICAgICAgICAgICAgJCgnbGkuZGlfZ2ZfcGx1c18xNGQgLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsICQuZGF0ZXBpY2tlci5ub1dlZWtlbmRzKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIGRpc2FibGUgd2Vla2VuZHNcbiAgICAgICAgICBpZiAoalF1ZXJ5KCdsaS5nZmllbGQnKS5oYXNDbGFzcygnbm93ZWVrZW5kcycpKSB7XG4gICAgICAgICAgICBqUXVlcnkoJ2xpLmdmaWVsZCAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdiZWZvcmVTaG93RGF5JywgJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZnVuY3Rpb24gZ290b0RhdGUgKCRqLCBtb250aCwgeWVhcikge1xuICAgICAgICAgICAgJGouZWFjaChmdW5jdGlvbiAoaSwgZWwpIHtcbiAgICAgICAgICAgICAgdmFyIGluc3QgPSAkLmRhdGVwaWNrZXIuX2dldEluc3QoZWwpXG4gICAgICAgICAgICAgIGluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gbW9udGhcbiAgICAgICAgICAgICAgaW5zdC5kcmF3WWVhciA9IGluc3Quc2VsZWN0ZWRZZWFyID0geWVhclxuICAgICAgICAgICAgICAkLmRhdGVwaWNrZXIuX25vdGlmeUNoYW5nZShpbnN0KVxuICAgICAgICAgICAgICAkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoZWwpXG4gICAgICAgICAgICB9KVxuICAgICAgICAgIH1cblxuICAgICAgICAgIC8vIERlZmluZSBhIHN0YXJ0IGRhdGVcbiAgICAgICAgICBpZiAoJCgnbGlbY2xhc3MqPVwic2R8XCJdIC5kYXRlcGlja2VyJykubGVuZ3RoKSB7XG4gICAgICAgICAgICB2YXIgZGF0ZUNsYXNzID0gJCgnbGlbY2xhc3MqPVwic2R8XCJdIC5kYXRlcGlja2VyJykucGFyZW50cygnbGlbY2xhc3MqPVwic2R8XCJdJykuYXR0cignY2xhc3MnKSxcbiAgICAgICAgICAgICAgX2RhdGUgPSBkYXRlQ2xhc3MubWF0Y2goL3NkXFx8KFteXFxzXSopLyksXG4gICAgICAgICAgICAgIHN0YXJ0RGF0ZSA9IG5ldyBEYXRlKF9kYXRlWzFdKVxuXG4gICAgICAgICAgICAkKCdsaVtjbGFzcyo9XCJzZHxcIl0gLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICAgIGlmIChkYXRlID49IHN0YXJ0RGF0ZSkgcmV0dXJuIFt0cnVlLCAnJ11cblxuICAgICAgICAgICAgICByZXR1cm4gW2ZhbHNlLCAnJ11cbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICQoJ2xpW2NsYXNzKj1cInNkfFwiXSAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdzaG93T3RoZXJNb250aHMnLCB0cnVlKVxuXG4gICAgICAgICAgICAkKCdsaVtjbGFzcyo9XCJzZHxcIl0gLmRhdGVwaWNrZXInKS5vbignY2xpY2snLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgIGdvdG9EYXRlKCQodGhpcyksIChzdGFydERhdGUuZ2V0TW9udGgoKSksIHN0YXJ0RGF0ZS5nZXRGdWxsWWVhcigpKVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9XG4gICAgICAgICAgLy8vIC9cblxuICAgICAgICAgIC8vIERlZmluZSBhbiBlbmQgZGF0ZVxuICAgICAgICAgIGlmICgkKCdsaVtjbGFzcyo9XCJlZHxcIl0gLmRhdGVwaWNrZXInKS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHZhciBkYXRlQ2xhc3MgPSAkKCdsaVtjbGFzcyo9XCJlZHxcIl0gLmRhdGVwaWNrZXInKS5wYXJlbnRzKCdsaVtjbGFzcyo9XCJlZHxcIl0nKS5hdHRyKCdjbGFzcycpLFxuICAgICAgICAgICAgICBfZGF0ZSA9IGRhdGVDbGFzcy5tYXRjaCgvZWRcXHwoW15cXHNdKikvKSxcbiAgICAgICAgICAgICAgZW5kRGF0ZSA9IG5ldyBEYXRlKF9kYXRlWzFdKVxuXG4gICAgICAgICAgICAkKCdsaVtjbGFzcyo9XCJlZHxcIl0gLmRhdGVwaWNrZXInKS5kYXRlcGlja2VyKCdvcHRpb24nLCAnYmVmb3JlU2hvd0RheScsIGZ1bmN0aW9uIChkYXRlKSB7XG4gICAgICAgICAgICAgIGlmICh0eXBlb2Ygc3RhcnREYXRlICE9PSAndW5kZWZpbmVkJyAmJiBzdGFydERhdGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoZGF0ZSA+PSBzdGFydERhdGUgJiYgZGF0ZSA8PSBlbmREYXRlKSByZXR1cm4gW3RydWUsICcnXVxuICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGUgPD0gZW5kRGF0ZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbdHJ1ZSwgJyddXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICByZXR1cm4gW2ZhbHNlLCAnJ11cbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgICQoJ2xpW2NsYXNzKj1cImVkfFwiXSAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdzaG93T3RoZXJNb250aHMnLCB0cnVlKVxuICAgICAgICAgIH1cbiAgICAgICAgICAvLy8gL1xuXG4gICAgICAgICAgLy8gZGlzYWJsZSBzYXR1cmRheXMgYWxvbmcgd2l0aCBkaV9nZl9wbHVzX3hkXG4gICAgICAgICAgZnVuY3Rpb24gbm9TYXR1cmRheSAoZGF0ZSkge1xuICAgICAgICAgICAgdmFyIGRheSA9IGRhdGUuZ2V0RGF5KCk7IHJldHVybiBbKGRheSAhPSA2KV1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBkaXNhYmxlIHN1bmRheXMgYWxvbmcgd2l0aCBkaV9nZl9wbHVzX3hkXG4gICAgICAgICAgZnVuY3Rpb24gbm9TdW5kYXkgKGRhdGUpIHtcbiAgICAgICAgICAgIHZhciBkYXkgPSBkYXRlLmdldERheSgpOyByZXR1cm4gWyhkYXkgPiAwKSwgJyddXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLy8gZGlzYWJsZSBmcmlkYXlzIGFsb25nIHdpdGggZGlfZ2ZfcGx1c194ZFxuICAgICAgICAgIGZ1bmN0aW9uIG5vRnJpZGF5IChkYXRlKSB7XG4gICAgICAgICAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXkoKTsgcmV0dXJuIFsoZGF5ICE9IDUpLCAnJ10gICAgICAgICAgICBcbiAgICAgICAgICB9XG5cbiAgICAgICAgICAvLyBkaXNhYmxlIGZyaWRheXMgJiB3ZWVrZW5kcyBhbG9uZyB3aXRoIGRpX2dmX3BsdXNfeGRcbiAgICAgICAgICBmdW5jdGlvbiBub0ZyaWRheVdlZWtlbmQgKGRhdGUpIHtcbiAgICAgICAgICAgIHZhciBkYXkgPSBkYXRlLmdldERheSgpO1xuICAgICAgICAgICAgaWYoIChkYXkgPT0gNSkgfHwgKGRheSA9PSA2KSAgfHwgKGRheSA9PSAwKSApe1xuICAgICAgICAgICAgICByZXR1cm4gW2ZhbHNlLCAnJ107XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlXG4gICAgICAgICAgICAgIHJldHVybiBbdHJ1ZSwgJyddOyAgICAgICAgICAgICAgXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgLypcbiAgICAgICAgICAqIGVPRjogU3RhdGljIGNsYXNzZXMgZm9yIG1pbkRhdGVcbiAgICAgICAgICAqL1xuXG4gICAgICAgICAvKipcbiAgICAgICAgICAqXG4gICAgICAgICAgKiBBZGQgYXZhaWxhYmxlIFRpbWVzIGZvciBhIHRlc3Rkcml2ZVxuICAgICAgICAgICogKioqKioqKioqKioqKipcbiAgICAgICAgICAqIElmIHlvdSBlZGl0IGFueXRoaW5nIGluIHRoaXMgZmVhdHVyZSwgcGxlYXNlIG1ha2Ugc3VyZSB0byB1cGRhdGUgY3VzdG9tLWJvbm9ib3MuanMgd2l0aCB0aGUgc2FtZSBsb2dpY1xuICAgICAgICAgICogKioqKioqKioqKioqKipcbiAgICAgICAgICAqICogVXNlIHRoZSBmb2xsb3dpbmcgY2xhc3NlcyBvbiB0aGUgZm9ybSBpdHNlbGYgKHdkID0gd2Vla2RheSBmcm9tIDggdG8gNygxOSksIHdlID0gd2Vla2VuZCBmcm9tIDggdG8gOCgyMCkpIHVzZSBtaWxpdGFyeSB0aW1lIGZvciBjbG9zaW5nIHRpbWVcbiAgICAgICAgICAqICAgICAgICBmb3JtX3RpbWVzX2F2YWlsYWJsZSB3ZHw4LTE5IHdlfDgtMjBcbiAgICAgICAgICAqICogQWRkIGEgZGF0ZXBpY2tlciBmaWVsZCB3aXRoIHRoZSBmb2xsb3dpbmcgY2xhc3NlczpcbiAgICAgICAgICAqICAgICAgICBkYXRlcGlja2VyIGF2YWlsYWJsZV9kYXRlX3RpbWVcbiAgICAgICAgICAqICogQWRkIGEgZHJvcGRvd24vc2VsZWN0IGZpZWxkIHdpdGggdGhlIGZvbGxvd2luZyBjbGFzczpcbiAgICAgICAgICAqICAgICAgICBhdmFpbGFibGVfdGltZV9zbG90c1xuICAgICAgICAgICovXG4gICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICogSW5jcmVtZW50IHRpbWUgYnkgc3BlY2lmaWVkIGluY3JlbWVudHNcbiAgICAgICAgICAgICAgKiBAcGFyYW0gIGludCBzdGFydCAgICBhIHdob2xlIG51bWJlciBmcm9tIHRpbWUgc3RhcnQgKGZvbGxvd2luZyBtaWxpdGFyeSB0aW1lIHN0cnVjdHVyZSlcbiAgICAgICAgICAgICAgKiBAcGFyYW0gIGludCBlbmQgICAgICBhIHdob2xlIG51bWJlciBmcm9tIHRpbWUgZW5kIChmb2xsb3dpbmcgbWlsaXRhcnkgdGltZSBzdHJ1Y3R1cmUpXG4gICAgICAgICAgICAgICogQHJldHVybiBhcnJheSAgICAgICBhbiBhcnJheVxuICAgICAgICAgICAgICAqL1xuICAgICAgICAgIGZ1bmN0aW9uIGdldFRpbWVJbmNyZW1lbnRzIChzdGFydCwgZW5kLCBpbmNyZW1lbnRzKSB7XG4gICAgICAgICAgICB2YXIgYXZhaWxhYmxlVGltZXMgPSBbXVxuICAgICAgICAgICAgdmFyIG9wZW4gPSBwYXJzZUludChzdGFydClcbiAgICAgICAgICAgIHZhciBjbG9zZSA9IHBhcnNlSW50KGVuZClcbiAgICAgICAgICAgIHZhciB0aW1lT2ZEYXkgPSAnQU0nXG4gICAgICAgICAgICB2YXIgY3VycmVudFRpbWUgPSBvcGVuXG4gICAgICAgICAgICB2YXIgaW5jID0gaW5jcmVtZW50c1xuXG4gICAgICAgICAgICB3aGlsZSAob3BlbiA8PSBjbG9zZSkge1xuICAgICAgICAgICAgICAgICAgIC8vIGNvbnZlcnQgbWlsaXRhcnkgdGltZSB0byByZWd1bGFyIHRpbWVcbiAgICAgICAgICAgICAgaWYgKG9wZW4gPiAxMikge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRUaW1lID0gb3BlbiAtIDEyXG4gICAgICAgICAgICAgICAgdGltZU9mRGF5ID0gJ1BNJ1xuICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAvLyBzdG9wcyBmcm9tIHNlbGVjdGluZyB0aGUgZW5kIHRpbWUgKGNsb3NpbmcgdGltZSksIHNpbmNlIHRoZXkgd291bGQgY2xvc2UgYmVmb3JlIGdldHRpbmcgYSB0ZXN0IGRyaXZlIGluXG4gICAgICAgICAgICAgIGlmIChvcGVuICE9IGNsb3NlKSB7XG4gICAgICAgICAgICAgICAgalF1ZXJ5LmVhY2goaW5jLCBmdW5jdGlvbiAoaSwgdmFsKSB7XG4gICAgICAgICAgICAgICAgICBhdmFpbGFibGVUaW1lcy5wdXNoKGN1cnJlbnRUaW1lICsgJzonICsgdmFsICsgJyAnICsgdGltZU9mRGF5KVxuICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhjdXJyZW50VGltZSArIFwiOlwiICsgdmFsICsgXCIgXCIgKyB0aW1lT2ZEYXkpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBvcGVuKytcbiAgICAgICAgICAgICAgY3VycmVudFRpbWUrK1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGF2YWlsYWJsZVRpbWVzXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgalF1ZXJ5KCcuYXZhaWxhYmxlX2RhdGVfdGltZSAuZGF0ZXBpY2tlcicpLmRhdGVwaWNrZXIoJ29wdGlvbicsICdvblNlbGVjdCcsIGZ1bmN0aW9uIChkYXRlVGV4dCwgaW5zdCkge1xuICAgICAgICAgICAgcG9wdWxhdGVBdmFpbGFibGVUaW1lcyhkYXRlVGV4dClcbiAgICAgICAgICB9KVxuXG4gICAgICAgICAgaWYgKGpRdWVyeSgnZm9ybS5mb3JtX3RpbWVzX2F2YWlsYWJsZScpLmxlbmd0aCkge1xuICAgICAgICAgICAgcG9wdWxhdGVBdmFpbGFibGVUaW1lcygpXG4gICAgICAgICAgfVxuXG4gICAgICAgICAgZnVuY3Rpb24gcG9wdWxhdGVBdmFpbGFibGVUaW1lcyAoZGF0ZVRleHQpIHtcbiAgICAgICAgICAgIGlmIChqUXVlcnkoJ2Zvcm0uZm9ybV90aW1lc19hdmFpbGFibGUnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgdmFyIHRpbWVzRm9ybUNsYXNzID0galF1ZXJ5KCdmb3JtLmZvcm1fdGltZXNfYXZhaWxhYmxlJykuYXR0cignY2xhc3MnKVxuICAgICAgICAgICAgICB2YXIgZm9ybUNsYXNzZXMgPSB0aW1lc0Zvcm1DbGFzcy5zcGxpdCgnICcpXG4gICAgICAgICAgICAgIGpRdWVyeS5lYWNoKGZvcm1DbGFzc2VzLCBmdW5jdGlvbiAoaSwgZm9ybUNsYXNzKSB7XG4gICAgICAgICAgICAgICAgaWYgKGZvcm1DbGFzcy5tYXRjaCgvd2RcXHwvaSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgd2Vla2RheVRpbWVzID0gZm9ybUNsYXNzLnJlcGxhY2UoL3dkXFx8L2ksICcnKS5zcGxpdCgnLScpXG4gICAgICAgICAgICAgICAgICB3ZWVrZGF5U3RhcnQgPSB3ZWVrZGF5VGltZXNbMF1cbiAgICAgICAgICAgICAgICAgIHdlZWtkYXlFbmQgPSB3ZWVrZGF5VGltZXNbMV1cbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGZvcm1DbGFzcy5tYXRjaCgvd2VcXHwvaSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgd2Vla2VuZFRpbWVzID0gZm9ybUNsYXNzLnJlcGxhY2UoL3dlXFx8L2ksICcnKS5zcGxpdCgnLScpXG4gICAgICAgICAgICAgICAgICB3ZWVrZW5kU3RhcnQgPSB3ZWVrZW5kVGltZXNbMF1cbiAgICAgICAgICAgICAgICAgIHdlZWtlbmRFbmQgPSB3ZWVrZW5kVGltZXNbMV1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgZGF0ZVRleHQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgIGRhdGVUZXh0ID0galF1ZXJ5KCcuYXZhaWxhYmxlX2RhdGVfdGltZSBpbnB1dFt0eXBlPXRleHRdJykudmFsKClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZhciBkYXRlU2VsZWN0ZWQgPSBuZXcgRGF0ZShkYXRlVGV4dCksXG4gICAgICAgICAgICAgIF9kYXkgPSBkYXRlU2VsZWN0ZWQuZ2V0RGF5KCksXG4gICAgICAgICAgICAgIGRheU9mV2VlayA9IG51bGwsXG4gICAgICAgICAgICAgIHRpbWVJbmNyZW1lbnRzID0gWzE1LCA0NV1cblxuICAgICAgICAgICAgdmFyIHdlZWtkYXlUaW1lcyA9IHtcbiAgICAgICAgICAgICAgb3Blbjogd2Vla2RheVN0YXJ0LFxuICAgICAgICAgICAgICBjbG9zZWQ6IHdlZWtkYXlFbmRcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHdlZWtlbmRUaW1lcyA9IHtcbiAgICAgICAgICAgICAgb3Blbjogd2Vla2VuZFN0YXJ0LFxuICAgICAgICAgICAgICBjbG9zZWQ6IHdlZWtlbmRFbmRcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgc3dpdGNoIChfZGF5KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBkYXlPZldlZWsgPSB7XG4gICAgICAgICAgICAgICAgICBkYXk6ICdTdW5kYXknLFxuICAgICAgICAgICAgICAgICAgdGltZXM6IGdldFRpbWVJbmNyZW1lbnRzKHdlZWtlbmRUaW1lcy5vcGVuLCB3ZWVrZW5kVGltZXMuY2xvc2VkLCB0aW1lSW5jcmVtZW50cylcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgYnJlYWtcbiAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgIGRheU9mV2VlayA9IHtcbiAgICAgICAgICAgICAgICAgIGRheTogJ01vbmRheScsXG4gICAgICAgICAgICAgICAgICB0aW1lczogZ2V0VGltZUluY3JlbWVudHMod2Vla2RheVRpbWVzLm9wZW4sIHdlZWtkYXlUaW1lcy5jbG9zZWQsIHRpbWVJbmNyZW1lbnRzKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgZGF5T2ZXZWVrID0ge1xuICAgICAgICAgICAgICAgICAgZGF5OiAnVHVlc2RheScsXG4gICAgICAgICAgICAgICAgICB0aW1lczogZ2V0VGltZUluY3JlbWVudHMod2Vla2RheVRpbWVzLm9wZW4sIHdlZWtkYXlUaW1lcy5jbG9zZWQsIHRpbWVJbmNyZW1lbnRzKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICBjYXNlIDM6XG4gICAgICAgICAgICAgICAgZGF5T2ZXZWVrID0ge1xuICAgICAgICAgICAgICAgICAgZGF5OiAnV2VkbmVzZGF5JyxcbiAgICAgICAgICAgICAgICAgIHRpbWVzOiBnZXRUaW1lSW5jcmVtZW50cyh3ZWVrZGF5VGltZXMub3Blbiwgd2Vla2RheVRpbWVzLmNsb3NlZCwgdGltZUluY3JlbWVudHMpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgIGNhc2UgNDpcbiAgICAgICAgICAgICAgICBkYXlPZldlZWsgPSB7XG4gICAgICAgICAgICAgICAgICBkYXk6ICdUaHVyc2RheScsXG4gICAgICAgICAgICAgICAgICB0aW1lczogZ2V0VGltZUluY3JlbWVudHMod2Vla2RheVRpbWVzLm9wZW4sIHdlZWtkYXlUaW1lcy5jbG9zZWQsIHRpbWVJbmNyZW1lbnRzKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICAgICAgZGF5T2ZXZWVrID0ge1xuICAgICAgICAgICAgICAgICAgZGF5OiAnRnJpZGF5JyxcbiAgICAgICAgICAgICAgICAgIHRpbWVzOiBnZXRUaW1lSW5jcmVtZW50cyh3ZWVrZGF5VGltZXMub3Blbiwgd2Vla2RheVRpbWVzLmNsb3NlZCwgdGltZUluY3JlbWVudHMpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrXG4gICAgICAgICAgICAgIGNhc2UgNjpcbiAgICAgICAgICAgICAgICBkYXlPZldlZWsgPSB7XG4gICAgICAgICAgICAgICAgICBkYXk6ICdTYXR1cmRheScsXG4gICAgICAgICAgICAgICAgICB0aW1lczogZ2V0VGltZUluY3JlbWVudHMod2Vla2VuZFRpbWVzLm9wZW4sIHdlZWtlbmRUaW1lcy5jbG9zZWQsIHRpbWVJbmNyZW1lbnRzKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVha1xuICAgICAgICAgICAgICBkZWZhdWx0IDpcbiAgICAgICAgICAgICAgICBkYXlPZlRoZVdlZWsgPSBudWxsXG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChqUXVlcnkoJy5hdmFpbGFibGVfdGltZV9zbG90cyBzZWxlY3QnKS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgdmFyICRhdmFpbGFibGVfdGltZV9zbG90cyA9IGpRdWVyeSgnLmF2YWlsYWJsZV90aW1lX3Nsb3RzIHNlbGVjdCcpXG4gICAgICAgICAgICAgICAgICAgICAvLyByZW1vdmUgYmxhbmsgc2VsZWN0IHZhbHVlcyAoaWYgYW55KVxuICAgICAgICAgICAgICAkYXZhaWxhYmxlX3RpbWVfc2xvdHMuZmluZCgnb3B0aW9uOm5vdCguZ2ZfcGxhY2Vob2xkZXIpJykucmVtb3ZlKClcblxuICAgICAgICAgICAgICBpZiAoZGF5T2ZXZWVrICYmIGRheU9mV2Vlay50aW1lcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAvLyByZW1vdmUgYmxhbmsgc2VsZWN0IHZhbHVlcyAoaWYgYW55KVxuICAgICAgICAgICAgICAgICRhdmFpbGFibGVfdGltZV9zbG90cy5maW5kKCdvcHRpb246bm90KC5nZl9wbGFjZWhvbGRlciknKS5yZW1vdmUoKVxuICAgICAgICAgICAgICAgIGpRdWVyeS5lYWNoKGRheU9mV2Vlay50aW1lcywgZnVuY3Rpb24gKGksIHRpbWUpIHtcbiAgICAgICAgICAgICAgICAgICRhdmFpbGFibGVfdGltZV9zbG90cy5hcHBlbmQoXCI8b3B0aW9uIGNsYXNzPSdhdmFpbGFibGUtdGltZScgdmFsdWU9J1wiICsgdGltZSArIFwiJz5cIiArIHRpbWUgKyAnPC9vcHRpb24+JylcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgICAgKlxuICAgICAgICAgICAgICAgICogZS9vOiBBZGQgYXZhaWxhYmxlIFRpbWVzIGZvciBhIHRlc3Rkcml2ZVxuICAgICAgICAgICAgICAgICpcbiAgICAgICAgICAgICAgICAqL1xuICAgICAgICB9KVxuICAgICAgfVxuXG4gICAgICAvLyBFbmFibGUgdG9kYXlcbiAgICAgIGlmIChqUXVlcnkoJy5nZmllbGQuZGlfZ2ZfZW5hYmxlX3RvZGF5JykubGVuZ3RoID4gMCkge1xuICAgICAgICB2YXIgdG9kYXlzRGF0ZSA9IG5ldyBEYXRlKClcbiAgICAgICAgLy8gZGVzdHJveSBkZWZhdWx0IEdyYXZpdHkgRm9ybSBkYXRlcGlja2VyXG4gICAgICAgICQoJy5nZmllbGQuZGlfZ2ZfZW5hYmxlX3RvZGF5IC5kYXRlcGlja2VyJykuZGF0ZXBpY2tlcignb3B0aW9uJywgJ21pbkRhdGUnLCB0b2RheXNEYXRlKVxuICAgICAgfVxuICAgICAgLy8vL1xuXG5cbiAgICAgICQod2luZG93KS50cmlnZ2VyKCdkaV9ncmF2aXR5X2Zvcm1zX2xvYWRlZCcsIFsnYXBwbGljYXRpb24nXSlcbiAgICB9LCA1MDApXG4gIH0pO1xufSkoalF1ZXJ5KVxuXG5TdHJpbmcucHJvdG90eXBlLnVuZGVyc2NvcmVUb0NhbWVsQ2FzZSA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMucmVwbGFjZSgvKFxcX1thLXpdKS9nLCBmdW5jdGlvbiAoJDEpIHsgcmV0dXJuICQxLnRvVXBwZXJDYXNlKCkucmVwbGFjZSgnXycsICcnKSB9KVxufVxuXG5mdW5jdGlvbiB2aWRlb193aW5kb3dfcmVzaXplICgpIHtcbiAgaWYgKGpRdWVyeSh3aW5kb3cpLndpZHRoKCkgPiAxMDI0KSB7XG4gICAgalF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoJCkge1xuICAgICAgJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBoZWlnaHQgPSAkKHRoaXMpLmhlaWdodCgpXG4gICAgICAgICQoJy5tb2RmdWxsJykuaGVpZ2h0KGhlaWdodClcblxuICAgICAgICAvLyBmb3IgcGFnZXNwZWVkLCB3ZSBoaWRlIG1vZGZ1bGwgdXNpbmcgYm9vdHN0cmFwIGFuZCBzaG93IGl0IHdoZW4gbW9kZnVsbCBraWNrcyBpbiAodGhlIGhlaWdodCBvZiB0aGUgdmlkZW9yb3cgaXMgY2F1c2luZyBmYWxzZS1wb3NpdGl2ZSByZW5kZXItYmxvY2tpbmcgc3R5bGUvc2NyaXB0cyB0byBzaG93IHVwIGluIFBhZ2VTcGVlZClcbiAgICAgICAgaWYgKCEkKCcjdmlkZW9yb3cubW9kZnVsbCcpLmlzKCc6dmlzaWJsZScpKSB7XG4gICAgICAgICAgJCgnI3ZpZGVvcm93Lm1vZGZ1bGwnKS5zaG93KClcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIHNvbWV0aW1lcyB0aGVyZSdzIGEgbW9kZnVsbCBpbnNpZGUgYSBtb2RmdWxsLCB0aGlzIGZpeGVzIGl0XG4gICAgICAgIGlmICgkKCcubW9kZnVsbCcpLmZpbmQoJyN2aWRlb3Jvdy5tb2RmdWxsJykubGVuZ3RoKSB7XG4gICAgICAgICAgJCgnLm1vZGZ1bGwgI3ZpZGVvcm93Lm1vZGZ1bGwnKS5zaG93KClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICAgICQod2luZG93KS5yZXNpemUoKSAvLyBvbiBwYWdlIGxvYWRcbiAgICB9KVxuICB9XG59XG5cbmZ1bmN0aW9uIHZpZGVvX3dpbmRvd19yZXNpemVfb2Zmc2V0IChvZmZzZXQpIHtcbiAgaWYgKGpRdWVyeSh3aW5kb3cpLndpZHRoKCkgPiAxMDI0KSB7XG4gICAgalF1ZXJ5KGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbiAoJCkge1xuICAgICAgJCh3aW5kb3cpLnJlc2l6ZShmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBoZWlnaHQgPSAkKHRoaXMpLmhlaWdodCgpXG4gICAgICAgICQoJy5tb2RmdWxsJykubm90KCcjdmlkZW9yb3cnKS5oZWlnaHQoaGVpZ2h0KVxuICAgICAgICAkKCcjdmlkZW9yb3cubW9kZnVsbCwgLm1vZGZ1bGwudmFyaWFibGUnKS5oZWlnaHQoaGVpZ2h0IC0gb2Zmc2V0KVxuICAgICAgfSlcbiAgICAgICQod2luZG93KS5yZXNpemUoKSAvLyBvbiBwYWdlIGxvYWRcbiAgICB9KVxuICB9XG59XG5cbmlmICh0eXBlb2YgbW9kZnVsbE9mZnNldCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgdmlkZW9fd2luZG93X3Jlc2l6ZSgpXG59IGVsc2Uge1xuICB2aWRlb193aW5kb3dfcmVzaXplX29mZnNldChtb2RmdWxsT2Zmc2V0KVxufVxuXG4vLyBiL286IFNjcm9sbCB0byBWRFAgQWNjb3JkaW9uIGZlYXR1cmVzIHdoZW4gY2xpY2tlZCBvbiwgb24gdGFibGV0IGFuZCBtb2JpbGVcbmpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24gKCQpIHtcbiAgaWYgKCQod2luZG93KS53aWR0aCgpIDw9IDEwMjQgJiYgJCgnYm9keS5wYWdlLXZlaGljbGUtZGlzcGxheS1wYWdlICNhY2NvcmRpb25NZW51JykubGVuZ3RoKSB7XG4gICAgJCgnYm9keS5wYWdlLXZlaGljbGUtZGlzcGxheS1wYWdlICNhY2NvcmRpb25NZW51Jykub24oJ2FjY29yZGlvbmFjdGl2YXRlJywgZnVuY3Rpb24gKGV2ZW50LCB1aSkge1xuICAgICAgaWYgKCEkLmlzRW1wdHlPYmplY3QodWkubmV3SGVhZGVyLm9mZnNldCgpKSkge1xuICAgICAgICAkKCdodG1sOm5vdCg6YW5pbWF0ZWQpLCBib2R5Om5vdCg6YW5pbWF0ZWQpJykuYW5pbWF0ZSh7XG4gICAgICAgICAgc2Nyb2xsVG9wOiAodWkubmV3SGVhZGVyLm9mZnNldCgpLnRvcCAtIDEzMClcbiAgICAgICAgfSwgODAwKVxuICAgICAgfVxuICAgIH0pXG4gIH1cbn0pO1xuLy8gZS9vOiBTY3JvbGwgdG8gVkRQIEFjY29yZGlvbiBmZWF0dXJlcyB3aGVuIGNsaWNrZWQgb24sIG9uIHRhYmxldCBhbmQgbW9iaWxlXG5cbi8vIG9wZW4gZmFuY3lib3ggZGF0YS1tb2JpbGUtdXJsIGxpbmtzIGluIHNlcGFyYXRlIHdpbmRvdywgYW5kIGNhbmNlbCB0aGUgaW5pdGlhbCBmYW5jeWJveCBvbiBjdXJyZW50IHdpbmRvd1xuKGZ1bmN0aW9uICgkKSB7XG4gICQoZG9jdW1lbnQpLm9uKCdjbGljaycsICcuZmFuY3lib3gnLCBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICBpZiAodHlwZW9mIERlYWxlckluc3BpcmVJbnZlbnRvcnkgIT09ICd1bmRlZmluZWQnICYmIERlYWxlckluc3BpcmVJbnZlbnRvcnkub3B0aW9ucy5pc19pbnZlbnRvcnlfcGFnZSAhPT0gJycpIHsgcmV0dXJuIH1cblxuICAgIGlmIChpc01vYmlsZS5hbnkoKSkge1xuICAgICAgdmFyIGRhdGEgPSAkKHRoaXMpLmRhdGEoKVxuICAgICAgdmFyIHVybCA9ICQodGhpcykuYXR0cignaHJlZicpXG5cbiAgICAgIGlmIChkYXRhLm1vYmlsZVVybCkgeyB1cmwgPSBkYXRhLm1vYmlsZVVybCB9XG5cbiAgICAgIGlmICh1cmwpIHtcbiAgICAgICAgLy8gTmVlZCB0byBoYW5kbGUgVmVoaWNsZSBkYXRhIGlmIGl0J3MgYXZhaWxhYmxlLlxuICAgICAgICBpZiAoISQodGhpcykuYXR0cigndGFyZ2V0JykgfHwgJCh0aGlzKS5hdHRyKCd0YXJnZXQnKSA9PSAnX2JsYW5rJykge1xuICAgICAgICAgIHdpbmRvdy5vcGVuKGRhdGEudmVoaWNsZSA/IHVybCArICc/JyArICQucGFyYW0oZGF0YS52ZWhpY2xlKSA6IHVybClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGRhdGEudmVoaWNsZSA/IHVybCArICc/JyArICQucGFyYW0oZGF0YS52ZWhpY2xlKSA6IHVybFxuICAgICAgICB9XG4gICAgICAgIGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXG4gICAgICAgIC8vICQuZmFuY3lib3guY2FuY2VsKCk7XG4gICAgICAgIC8vIGZhbmN5Ym94LmNsb3NlIHdvcmtlZCBiZXR0ZXIgdGhhbiBjYW5jZWwgZm9yIHNvbWUgb2RkIHJlYXNvbiwgc28gd2UnbGwganVzdCBrZWVwIGl0IGFjdGl2YXRlZFxuICAgICAgICAkLmZhbmN5Ym94LmNsb3NlKClcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuICB9KVxufSkoalF1ZXJ5KVxuXG5qUXVlcnkoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgkKSB7XG4gIC8qXG4gICogTW9kaWZ5IHRoZSBicmVhZGNydW1iIGxpbmsgdG8gZ28gYmFjayB0byB0aGUgcHJldmlvdXMgaW52ZW50b3J5IGluc3RhbmNlIHdpdGhcbiAgKiB1c2VyIHNlbGVjdGVkIGZpbHRlcnMgYnkgc2V0dGluZyBhIGNvb2tpZVxuICAqL1xuICAvKiBiT0Y6IEhpc3RvcmljIGJyZWFkY3J1bWJzICovXG4gIHZhciAkaG9zdCA9IHdpbmRvdy5sb2NhdGlvbi5ob3N0XG4gIHZhciAkcGF0aCA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZVxuXG4gIGpRdWVyeShkb2N1bWVudCkub24oJ2NsaWNrJywgJy52ZWhpY2xlIGEnLCBmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmIChqUXVlcnkodGhpcykuYXR0cignaHJlZicpICYmIGpRdWVyeSh0aGlzKS5hdHRyKCdocmVmJykuc2VhcmNoKCcvaW52ZW50b3J5LycpID4gLTEpIHtcbiAgICAgICAgdmFyIHF1ZXJ5X3N0cmluZyA9IGpRdWVyeS5wYXJhbShEZWFsZXJJbnNwaXJlSW52ZW50b3J5LnF1ZXJ5LnRvX29iaihudWxsLCB0cnVlKSlcbiAgICAgICAgdmFyIGhvc3QgPSB3aW5kb3cubG9jYXRpb24uaG9zdFxuICAgICAgICBEZWFsZXJJbnNwaXJlQ29va2llLkNyZWF0ZUNvb2tpZSgnZGlfaW52X2JjXycgKyBob3N0LCAkcGF0aCArICcjJyArIHF1ZXJ5X3N0cmluZywgMSlcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBpZiAodHlwZW9mIGNvbnNvbGUgIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgICB9XG4gICAgfVxuICB9KVxuICBpZiAoalF1ZXJ5KCcjYmMtcGFyZW50LXBhZ2UnKS5sZW5ndGggJiYgRGVhbGVySW5zcGlyZUNvb2tpZS5SZWFkQ29va2llKCdkaV9pbnZfYmNfJyArICRob3N0KSkge1xuICAgIGpRdWVyeSgnI2JjLXBhcmVudC1wYWdlJykuYXR0cignaHJlZicsIERlYWxlckluc3BpcmVDb29raWUuUmVhZENvb2tpZSgnZGlfaW52X2JjXycgKyAkaG9zdCkpXG4gIH1cbiAgLyogZU9GOiBIaXN0b3JpYyBicmVhZGNydW1icyAqL1xuXG4gIC8qIGJPRjogQWxyZWFkeSB2aWV3ZWQgdmVoaWNsZXMgKi9cbiAgLy8gVXNlZCBmb3IgXCJWZWhpY2xlIFZpZXdlZCBGZWF0dXJlIC0gUEhQSlMgVW5zZXJpYWxpemUgdG8gdW5zZXJpYWxpemUgUEhQIGdlbmVyYXRlZCBzZXJpYWwgc3RyaW5ncyAtIE5vIG5hdGl2ZSBqYXZhc2NyaXB0IGZ1bmN0aW9uIHRvIGRvIHRoaXNcbiAgZnVuY3Rpb24gdW5zZXJpYWxpemUgKHIpIHsgdmFyIGUgPSB0aGlzLCBuID0gZnVuY3Rpb24gKHIpIHsgdmFyIGUgPSByLmNoYXJDb2RlQXQoMCk7IHJldHVybiBlIDwgMTI4IHx8IGUgPj0gMTYwICYmIGUgPD0gMjU1IHx8IFszMzgsIDMzOSwgMzUyLCAzNTMsIDM3NiwgNDAyLCA4MjExLCA4MjEyLCA4MjE2LCA4MjE3LCA4MjE4LCA4MjIwLCA4MjIxLCA4MjIyLCA4MjI0LCA4MjI1LCA4MjI2LCA4MjMwLCA4MjQwLCA4MzY0LCA4NDgyXS5pbmRleE9mKGUpICE9IC0xID8gMCA6IGUgPCAyMDQ4ID8gMSA6IDIgfTsgcmV0dXJuIGVycm9yID0gZnVuY3Rpb24gKHIsIG4sIGEsIHQpIHsgdGhyb3cgbmV3IGUud2luZG93W3JdKG4sIGEsIHQpIH0sIHJlYWRfdW50aWwgPSBmdW5jdGlvbiAociwgZSwgbikgeyBmb3IgKHZhciBhID0gMiwgdCA9IFtdLCBpID0gci5zbGljZShlLCBlICsgMSk7IGkgIT0gbjspYSArIGUgPiByLmxlbmd0aCAmJiBlcnJvcignRXJyb3InLCAnSW52YWxpZCcpLCB0LnB1c2goaSksIGkgPSByLnNsaWNlKGUgKyAoYSAtIDEpLCBlICsgYSksIGEgKz0gMTsgcmV0dXJuIFt0Lmxlbmd0aCwgdC5qb2luKCcnKV0gfSwgcmVhZF9jaHJzID0gZnVuY3Rpb24gKHIsIGUsIGEpIHsgdmFyIHQsIGksIHU7IGZvciAodSA9IFtdLCB0ID0gMDsgYSA+IHQ7IHQrKylpID0gci5zbGljZShlICsgKHQgLSAxKSwgZSArIHQpLCB1LnB1c2goaSksIGEgLT0gbihpKTsgcmV0dXJuIFt1Lmxlbmd0aCwgdS5qb2luKCcnKV0gfSwgX3Vuc2VyaWFsaXplID0gZnVuY3Rpb24gKHIsIGUpIHsgdmFyIG4sIGEsIHQsIGksIHUsIHMsIG8sIGwsIGMsIGQsIGYsIGgsIF8sIHAsIHcsIGIsIGssIGcsIHYgPSAwLCBJID0gZnVuY3Rpb24gKHIpIHsgcmV0dXJuIHIgfTsgc3dpdGNoIChlIHx8IChlID0gMCksIG4gPSByLnNsaWNlKGUsIGUgKyAxKS50b0xvd2VyQ2FzZSgpLCBhID0gZSArIDIsIG4pIHsgY2FzZSAnaSc6SSA9IGZ1bmN0aW9uIChyKSB7IHJldHVybiBwYXJzZUludChyLCAxMCkgfSwgYyA9IHJlYWRfdW50aWwociwgYSwgJzsnKSwgdiA9IGNbMF0sIGwgPSBjWzFdLCBhICs9IHYgKyAxOyBicmVhazsgY2FzZSAnYic6SSA9IGZ1bmN0aW9uIChyKSB7IHJldHVybiBwYXJzZUludChyLCAxMCkgIT09IDAgfSwgYyA9IHJlYWRfdW50aWwociwgYSwgJzsnKSwgdiA9IGNbMF0sIGwgPSBjWzFdLCBhICs9IHYgKyAxOyBicmVhazsgY2FzZSAnZCc6SSA9IGZ1bmN0aW9uIChyKSB7IHJldHVybiBwYXJzZUZsb2F0KHIpIH0sIGMgPSByZWFkX3VudGlsKHIsIGEsICc7JyksIHYgPSBjWzBdLCBsID0gY1sxXSwgYSArPSB2ICsgMTsgYnJlYWs7IGNhc2UgJ24nOmwgPSBudWxsOyBicmVhazsgY2FzZSAncyc6ZCA9IHJlYWRfdW50aWwociwgYSwgJzonKSwgdiA9IGRbMF0sIGYgPSBkWzFdLCBhICs9IHYgKyAyLCBjID0gcmVhZF9jaHJzKHIsIGEgKyAxLCBwYXJzZUludChmLCAxMCkpLCB2ID0gY1swXSwgbCA9IGNbMV0sIGEgKz0gdiArIDIsIHYgIT0gcGFyc2VJbnQoZiwgMTApICYmIHYgIT0gbC5sZW5ndGggJiYgZXJyb3IoJ1N5bnRheEVycm9yJywgJ1N0cmluZyBsZW5ndGggbWlzbWF0Y2gnKTsgYnJlYWs7IGNhc2UgJ2EnOmZvciAobCA9IHt9LCB0ID0gcmVhZF91bnRpbChyLCBhLCAnOicpLCB2ID0gdFswXSwgaSA9IHRbMV0sIGEgKz0gdiArIDIsIHMgPSBwYXJzZUludChpLCAxMCksIHUgPSAhMCwgaCA9IDA7IHMgPiBoOyBoKyspcCA9IF91bnNlcmlhbGl6ZShyLCBhKSwgdyA9IHBbMV0sIF8gPSBwWzJdLCBhICs9IHcsIGIgPSBfdW5zZXJpYWxpemUociwgYSksIGsgPSBiWzFdLCBnID0gYlsyXSwgYSArPSBrLCBfICE9PSBoICYmICh1ID0gITEpLCBsW19dID0gZzsgaWYgKHUpIHsgZm9yIChvID0gbmV3IEFycmF5KHMpLCBoID0gMDsgcyA+IGg7IGgrKylvW2hdID0gbFtoXTsgbCA9IG8gfWEgKz0gMTsgYnJlYWs7IGRlZmF1bHQ6ZXJyb3IoJ1N5bnRheEVycm9yJywgJ1Vua25vd24gLyBVbmhhbmRsZWQgZGF0YSB0eXBlKHMpOiAnICsgbikgfSByZXR1cm4gW24sIGEgLSBlLCBJKGwpXSB9LCBfdW5zZXJpYWxpemUociArICcnLCAwKVsyXSB9XG5cbiAgLy8gaWYgY3VycmVudCBwYWdlIGlzIHRoZSB2ZWhpY2xlIHJlc3VsdHMgcGFnZSBhbmQgdGhlIGRpX3Zpbl9oaXN0b3J5IGNvb2tpZSBoYXMgYmVlbiBmb3VuZCwgYW5kIGhhcyBkYXRhLCB0aGVuIGdvIHRocm91Z2ggZWFjaCB2ZWhpY2xlIGFuZCBhZGQgYW4gYWxyZWFkeSB2aWV3ZWQgY2xhc3NcbiAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygncGFnZS12ZWhpY2xlLXJlc3VsdHMtcGFnZScpKSB7XG4gICAgZnVuY3Rpb24gYXBwbHlWaXNpdGVkQ2xhc3NlcyAoKSB7XG4gICAgICAvLyB2YXIgdmVoaWNsZV9oaXN0b3J5ID0gKCB0eXBlb2YgRGVhbGVySW5zcGlyZUNvb2tpZS5SZWFkQ29va2llKCdkaV92aW5faGlzdG9yeScpICE9PSBudWxsICkgPyBEZWFsZXJJbnNwaXJlQ29va2llLlJlYWRDb29raWUoJ2RpX3Zpbl9oaXN0b3J5JykgOiAwO1xuICAgICAgdmFyIHZlaGljbGVfaGlzdG9yeSA9ICh0eXBlb2YgRGVhbGVySW5zcGlyZUNvb2tpZS5SZWFkQ29va2llKCdkaV92ZWhpY2xlX2hpc3RvcnknKSAhPT0gbnVsbCkgPyBEZWFsZXJJbnNwaXJlQ29va2llLlJlYWRDb29raWUoJ2RpX3ZlaGljbGVfaGlzdG9yeScpIDogMFxuICAgICAgaWYgKHZlaGljbGVfaGlzdG9yeSkge1xuICAgICAgICB2ZWhpY2xlX2hpc3RvcnkgPSB1bnNlcmlhbGl6ZShEZWFsZXJJbnNwaXJlQ29va2llLlJlYWRDb29raWUoJ2RpX3ZlaGljbGVfaGlzdG9yeScpKVxuICAgICAgICBpZiAodmVoaWNsZV9oaXN0b3J5LnZpbnMubGVuZ3RoKSB7XG4gICAgICAgICAgdmluX2hpc3RvcnkgPSB2ZWhpY2xlX2hpc3Rvcnkudmluc1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHZhciBhdlRleHQgPSAodHlwZW9mIF9jb21tb25fdGhlbWUgIT09ICd1bmRlZmluZWQnKSA/IF9jb21tb25fdGhlbWUuZGlfYXBwbGljYXRpb24uYWxyZWFkeV92aWV3ZWQgOiBkaV9hcHBsaWNhdGlvbi5hbHJlYWR5X3ZpZXdlZFxuXG4gICAgICAkKCcudmVoaWNsZS1vdmVydmlldycpLmVhY2goZnVuY3Rpb24gKGksIGVsKSB7XG4gICAgICAgIHZhciBjdXJyZW50X3ZpbiA9ICQodGhpcykuYXR0cignaWQnKVxuICAgICAgICBpZiAodHlwZW9mIHZpbl9oaXN0b3J5ICE9PSAndW5kZWZpbmVkJyAmJiB2aW5faGlzdG9yeSkge1xuICAgICAgICAgIGlmICgkLmluQXJyYXkoY3VycmVudF92aW4sIHZpbl9oaXN0b3J5KSA+IC0xKSB7XG4gICAgICAgICAgICAkKCcjaW52ZW50b3J5LXBvc3QtJyArIGN1cnJlbnRfdmluKVxuICAgICAgICAgICAgLmFkZENsYXNzKCd2ZWhpY2xlLXZpc2l0ZWQnKVxuICAgICAgICAgICAgLmZpbmQoJy52ZWhpY2xlLWxlZnRjb2wnKVxuICAgICAgICAgICAgLmFwcGVuZChcIjxzcGFuIGNsYXNzPSd2aXNpdGVkLXRpdGxlJz5cIiArIGF2VGV4dCArIFwiIDxpIGNsYXNzPSdmYSBmYS1jaGVjay1jaXJjbGUnPjwvaT48L3NwYW4+XCIpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgICAkKCcudmVoaWNsZS13cmFwJykuZWFjaChmdW5jdGlvbiAoaSwgZWwpIHtcbiAgICAgICAgdmFyIGN1cnJlbnRfdmluID0gJCh0aGlzKS5maW5kKCdkaXZbZGF0YS12aW5dJykuZGF0YSgndmluJylcbiAgICAgICAgaWYgKHR5cGVvZiB2aW5faGlzdG9yeSAhPT0gJ3VuZGVmaW5lZCcgJiYgdmluX2hpc3RvcnkpIHtcbiAgICAgICAgICBpZiAoJC5pbkFycmF5KGN1cnJlbnRfdmluLCB2aW5faGlzdG9yeSkgPiAtMSkge1xuICAgICAgICAgICAgJCgnZGl2W2RhdGEtdmluPVwiJyArIGN1cnJlbnRfdmluICsgJ1wiXScpXG4gICAgICAgICAgICAuYWRkQ2xhc3MoJ3ZlaGljbGUtdmlzaXRlZC1ncmlkJylcbiAgICAgICAgICAgIC5maW5kKCcudmVoaWNsZS1pbWFnZScpXG4gICAgICAgICAgICAuYXBwZW5kKFwiPHNwYW4gY2xhc3M9J3Zpc2l0ZWQtdGl0bGUnPlwiICsgYXZUZXh0ICsgXCIgPGkgY2xhc3M9J2ZhIGZhLWNoZWNrLWNpcmNsZSc+PC9pPjwvc3Bhbj5cIilcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICAgICQoJ2JvZHknKS5vbigndnJwLXJlYWR5IHZycC1hamF4LWNvbXBsZXRlJywgZnVuY3Rpb24gKCkge1xuICAgICAgYXBwbHlWaXNpdGVkQ2xhc3NlcygpXG4gICAgfSlcbiAgfVxuICAvKiBlT0Y6IEFscmVhZHkgdmlld2VkIHZlaGljbGVzICovXG5cbiAgLy8gYk9GOiBhc2sgYSBxdWVzdGlvblxuICBpZiAoJCgnI2Fzay1hLXF1ZXN0aW9uLWJldGEnKS5sZW5ndGggfHwgJCgnLmhlYWRlcndyYXAnKS5sZW5ndGgpIHtcbiAgICB2YXIgaSA9IDEwXG4gICAgLy8gc3RvcmUgdGhlIGFzay1hLXF1ZXN0aW9uIGJhclxuICAgIHZhciAkYXNrX3F1ZXN0aW9uID0gJCgnI2Fzay1hLXF1ZXN0aW9uLWJldGEnKVxuICAgIC8vIGdldCB0aGUgaGVpZ2h0IGZyb20gdGhlIGludmVudG9yeSBhZG1pbiBvbiB0aGUgQXNrIGEgUXVlc3Rpb24gdGFiIGlmIGl0J3Mgc2V0LiBSZW1vdmUgYWxsIGNoYXJhY3RlcnMgYnV0IG51bWJlcnMsIHdpbGwgYmUgZm9ybWF0dGVkIHRvIHBpeGVscyBsYXRlclxuICAgIHZhciBzcGVjaWZpZWRfaGVpZ2h0ID0gKHBhcnNlSW50KCRhc2tfcXVlc3Rpb24uZGF0YSgnaGVhZGVyLWhlaWdodCcpKSkgPyAkYXNrX3F1ZXN0aW9uLmRhdGEoJ2hlYWRlci1oZWlnaHQnKS5yZXBsYWNlKC9bXjAtOS5dL2csICcnKSA6IDBcbiAgICAvLyBjaGVjayBpZiB0aGUgdmFyaW91cyBoZWFkZXJzIGV4aXN0XG4gICAgdmFyICRoZWFkZXIgPSAoJCgnI2hlYWRlcicpLmxlbmd0aCB8fCAkKCcuaGVhZGVyd3JhcCcpLmxlbmd0aCkgPyAkKCcjaGVhZGVyLCAuaGVhZGVyd3JhcCcpIDogbnVsbFxuICAgIC8vIGdldCB0aGUgaGVpZ2h0IG9mIHRoZSBhc2sgYSBxdWVzdGlvbiBiYXJcbiAgICB2YXIgYXNrX3F1ZXN0aW9uX2hlaWdodCA9ICRhc2tfcXVlc3Rpb24ub3V0ZXJIZWlnaHQoKVxuICAgIC8vIGlmICNoZWFkZXIgb3IgLmhlYWRlcndyYXAgZXhpc3RzLCB0aGVuIGdldCB0aGUgaGVpZ2h0IG9mIHRoZSAjaGVhZGVyIG9yIC5oZWFkZXJ3cmFwLCBlbHNlIGhlaWdodCBpcyAwXG4gICAgdmFyIGhlYWRlcl9oZWlnaHQgPSAoJGhlYWRlcikgPyAkaGVhZGVyLm91dGVySGVpZ2h0KHRydWUpIDogMFxuICAgIC8vIGhpZGUgdGhlIGFzayBhIHF1ZXN0aW9uIGJhciBhbmQgbWFrZSBzdXJlIGl0J3MgcG9zaXRpb24gaXMgYWJvdmUgdGhlIHRvcCBicm93c2VyIHdpbmRvdywgYW5kIHBhc3QgdGhlIGhlYWRlclxuICAgIHZhciBuZWdhdGl2ZV9wb3MgPSAnLScgKyAoYXNrX3F1ZXN0aW9uX2hlaWdodCArIGhlYWRlcl9oZWlnaHQpXG4gICAgLy8gaWYgdGhlIHNwZWNpZmllZCBoZWlnaHQgaGFzIGJlZW4gZW50ZXJlZCBpbiBhZG1pbiwgdGhlblxuICAgIHZhciB0b3AgPSAoc3BlY2lmaWVkX2hlaWdodCkgfHwgaGVhZGVyX2hlaWdodFxuICAgIC8vIHNldCB0aGUgaW5pdGlhbCBwb3NpdGlvbmluZyBvZiB0aGUgYXNrIGEgcXVlc3Rpb24gYmFyICh3aGVuIHRoZSBwYWdlIGxvYWRzLCB0aGlzIGxpbmUgcHV0cyB0aGUgYXNrIGEgcXVlc3Rpb24gYmFyIGluIHRoZSBoaWdoIGhlYXZlbnMgb2YgdGhlIGJyb3dzZXIgdW50aWwgaXQncyByZWFkeSB0byBkcm9wKVxuICAgICRhc2tfcXVlc3Rpb24uY3NzKCd0b3AnLCBuZWdhdGl2ZV9wb3MpXG5cbiAgICAkKHdpbmRvdykub24oJ3Njcm9sbCcsIGZ1bmN0aW9uIChpLCBlbCkge1xuICAgICAgLy8gY2hlY2sgaWYgZGV2aWNlIGlzIG1vYmlsZSBvciBub3RcbiAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA+IDEwMjQpIHtcbiAgICAgICAgdmFyIHNjcm9sbFBvcyA9ICQod2luZG93KS5zY3JvbGxUb3AoKVxuXG4gICAgICAgIGlmIChzY3JvbGxQb3MgPj0gYXNrX3F1ZXN0aW9uX2hlaWdodCkge1xuICAgICAgICAgICRhc2tfcXVlc3Rpb24uY3NzKHtcbiAgICAgICAgICAgICd0b3AnOiB0b3AgKyAncHgnLFxuICAgICAgICAgICAgJ29wYWNpdHknOiAnMSdcbiAgICAgICAgICB9KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICRhc2tfcXVlc3Rpb24uY3NzKHtcbiAgICAgICAgICAgICd0b3AnOiBuZWdhdGl2ZV9wb3MgKyAncHgnLFxuICAgICAgICAgICAgJ29wYWNpdHknOiAnMCdcbiAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgICB9Ly8gZTppZlxuICAgIH0pXG4gIH1cbiAgLy8gZU9GOiBhc2sgYSBxdWVzdGlvblxuXG4gIC8vIHNjcm9sbCB1cCBhdXRvbWF0aWNhbGx5IG9uIG1vYmlsZSBkcm9wZG93biBpdGVtcyBjbGlja2VkIHRvIGtlZXAgdGhlbSBpbiB0aGUgdmlld3BvcnRcbiAgaWYgKCQoZG9jdW1lbnQpLndpZHRoKCkgPD0gNzY4KSB7XG4gICAgJCgnLmRyb3Bkb3duJykub24oJ3Nob3duLmJzLmRyb3Bkb3duJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICB2YXIgc2Nyb2xsID0gJChldmVudC50YXJnZXQpLm9mZnNldCgpIC8vIEdldCB0aGUgdGV4dCBvZiB0aGUgZWxlbWVudFxuICAgICAgalF1ZXJ5KHRoaXMpLnBhcmVudHMoJyNzaWRyJykuc2Nyb2xsVG9wKHNjcm9sbC50b3ApXG4gICAgfSlcbiAgfVxuXG4gIC8vIGludmVudG9yeS1vd2wgZm9yIG1vZGVsIGZlYXR1cmUgcGFnZXNcbiAgaWYgKGpRdWVyeSgnLmludmVudG9yeS1vd2wnKS5sZW5ndGgpIHtcbiAgICBqUXVlcnkoJy5pbnZlbnRvcnktb3dsIC5ncmlkLXZpZXctcmVzdWx0cy13cmFwcGVyJykub3dsQ2Fyb3VzZWwoe1xuICAgICAgY2VudGVyOiB0cnVlLFxuICAgICAgYXV0b1BsYXk6IGZhbHNlLFxuICAgICAgbmF2aWdhdGlvbjogdHJ1ZSxcbiAgICAgIGl0ZW1zOiA0LFxuICAgICAgaXRlbXNEZXNrdG9wOiBbMTMzMCwgNF0sXG4gICAgICBpdGVtc0Rlc2t0b3BTbWFsbDogWzk3OSwgM10sXG4gICAgICBpdGVtc1RhYmxldDogWzc2OCwgMl0sXG4gICAgICBpdGVtc01vYmlsZTogWzQ3OSwgMV0sXG4gICAgICBuYXZpZ2F0aW9uVGV4dDogWyc8aSBjbGFzcz1cImZhIGZhLWFuZ2xlLWxlZnRcIj48L2k+JywgJzxpIGNsYXNzPVwiZmEgZmEtYW5nbGUtcmlnaHRcIj48L2k+J10sXG4gICAgICBhZnRlckluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJCgnLmludmVudG9yeS1vd2wnKS5zaG93KClcbiAgICAgIH1cbiAgICB9KVxuXG4gICAgLy8gYi9vIEludmVudG9yeSBvd2wgZm9yIG1vZGVsIGZlYXR1cmUgcGFnZXMgdGhhdCB1c2UgbGlnaHRuaW5nIHNob3J0Y29kZSBbaW52ZW50b3J5X3ZlaGljbGVfY2FyZHNdXG4gICAgaWYoalF1ZXJ5KCcuaW52ZW50b3J5LW93bCAjbHZycC1jb250YWluZXInKS5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGludmVudG9yeV92ZWhpY2xlX2NhcmRzX2xvYWRfdGltZXIgPSAwO1xuICAgICAgICAvLyBuZWVkIHRvIHVzZSBzZXQgaW50ZXJ2YWwgdW50aWwgYW4gZXZlbnQgdHJpZ2dlciBpcyBhZGRlZCB0byB0aGUganMgZm9yIHRoZSBzaG9ydGNvZGVcbiAgICAgICAgdmFyIGludmVudG9yeV92ZWhpY2xlX2NhcmRzX2ludGVydmFsID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgaWYgKCBqUXVlcnkoJy5pbnZlbnRvcnktb3dsICNsdnJwLWNvbnRhaW5lciAjaGl0cyA+IGEnKS5sZW5ndGggPiAwICYmIGludmVudG9yeV92ZWhpY2xlX2NhcmRzX2xvYWRfdGltZXIgPCA1MDAwICkge1xuICAgICAgICAgICAgalF1ZXJ5KCcuaW52ZW50b3J5LW93bCAjbHZycC1jb250YWluZXIgI2hpdHMnKS5vd2xDYXJvdXNlbCh7XG4gICAgICAgICAgICAgIGNlbnRlcjogdHJ1ZSxcbiAgICAgICAgICAgICAgYXV0b1BsYXk6IGZhbHNlLFxuICAgICAgICAgICAgICBuYXZpZ2F0aW9uOiB0cnVlLFxuICAgICAgICAgICAgICBpdGVtczogNCxcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMCxcbiAgICAgICAgICAgICAgaXRlbXNEZXNrdG9wOiBbMTMzMCwgNF0sXG4gICAgICAgICAgICAgIGl0ZW1zRGVza3RvcFNtYWxsOiBbOTc5LCAzXSxcbiAgICAgICAgICAgICAgaXRlbXNUYWJsZXQ6IFs3NjgsIDFdLFxuICAgICAgICAgICAgICBpdGVtc01vYmlsZTogWzQ3OSwgMV0sXG4gICAgICAgICAgICAgIG5hdmlnYXRpb25UZXh0OiBbJzxpIGNsYXNzPVwiZmEgZmEtYW5nbGUtbGVmdFwiPjwvaT4nLCAnPGkgY2xhc3M9XCJmYSBmYS1hbmdsZS1yaWdodFwiPjwvaT4nXSxcbiAgICAgICAgICAgICAgYWZ0ZXJJbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgJCgnLmludmVudG9yeS1vd2wnKS5zaG93KClcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW52ZW50b3J5X3ZlaGljbGVfY2FyZHNfaW50ZXJ2YWwpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBpbnZlbnRvcnlfdmVoaWNsZV9jYXJkc19sb2FkX3RpbWVyICs9IDEwMDtcbiAgICAgIH0sIDEwMCApXG4gICAgfVxuICAgIC8vIGUvbyBJbnZlbnRvcnkgb3dsIGZvciBtb2RlbCBmZWF0dXJlIHBhZ2VzIHRoYXQgdXNlIGxpZ2h0bmluZyBzaG9ydGNvZGUgW2ludmVudG9yeV92ZWhpY2xlX2NhcmRzXVxuICB9XG5cbiAgaWYgKGpRdWVyeSgnLmludmVudG9yeS1vd2wtc21hbGwnKS5sZW5ndGgpIHtcbiAgICBqUXVlcnkoJy5pbnZlbnRvcnktb3dsLXNtYWxsIC5ncmlkLXZpZXctcmVzdWx0cy13cmFwcGVyJykub3dsQ2Fyb3VzZWwoe1xuICAgICAgY2VudGVyOiB0cnVlLFxuICAgICAgYXV0b1BsYXk6IGZhbHNlLFxuICAgICAgbmF2aWdhdGlvbjogdHJ1ZSxcbiAgICAgIGl0ZW1zOiAyLFxuICAgICAgaXRlbXNEZXNrdG9wOiBbMTMzMCwgMl0sXG4gICAgICBpdGVtc0Rlc2t0b3BTbWFsbDogWzk3OSwgMl0sXG4gICAgICBpdGVtc1RhYmxldDogWzc2OCwgMl0sXG4gICAgICBpdGVtc01vYmlsZTogWzQ3OSwgMV0sXG4gICAgICBuYXZpZ2F0aW9uVGV4dDogWyc8aSBjbGFzcz1cImZhIGZhLWFuZ2xlLWxlZnRcIj48L2k+JywgJzxpIGNsYXNzPVwiZmEgZmEtYW5nbGUtcmlnaHRcIj48L2k+J10sXG4gICAgICBhZnRlckluaXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgJCgnLmludmVudG9yeS1vd2wnKS5zaG93KClcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgaWYgKCQuaXNGdW5jdGlvbigkLmZuLm1hdGNoSGVpZ2h0KSkge1xuICAgICQoJy5zdGFmZiAuc3RhZmYtaXRlbScpLm1hdGNoSGVpZ2h0KClcbiAgICAkKCcubWF0Y2hhYmxlLWhlaWdodHMnKS5tYXRjaEhlaWdodCgpXG4gIH1cblxuICAkKCcueW91dHViZS1saW5rJykuZmFuY3lib3goKVxuXG4gIC8qXG4gICogZnVsbCBzbGlkZSBsaW5rIG9uIGZsZXhzbGlkZXItSEdcbiAgKiBJZiBzbGlkZSBoYXMgZGF0YSBhdHRyaWJ1dGUgZGF0YS1mdWxsLXNsaWRlLWxpbmsgdGhlbiBtYWtlIHRoZSB3aG9sZSBzbGlkZSBjbGlja2FibGUgKG1vc3RseSBmb3IgRkogc2l0ZXMpXG4gICogQWFyb24gT2xpblxuICAqICovXG5cbiAgaWYgKCQoJ3VsLnNsaWRlcyBsaVtkYXRhLWZ1bGwtc2xpZGUtbGlua10nKS5sZW5ndGgpIHtcbiAgICAkKCd1bC5zbGlkZXMgbGlbZGF0YS1mdWxsLXNsaWRlLWxpbmtdJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgLy8gZ2V0IHRoZSBVUkwgZnJvbSB0aGUgZnVsbCBzbGlkZSBsaW5rIGVsZW1lbnRcbiAgICAgIHZhciB1cmwgPSAoJCh0aGlzKS5kYXRhKCdmdWxsLXNsaWRlLWxpbmsnKS5sZW5ndGgpID8gJCh0aGlzKS5kYXRhKCdmdWxsLXNsaWRlLWxpbmsnKSA6IG51bGxcbiAgICAgIC8vIGNoZWNrIGlmIGl0J3MgdGFyZ2V0IGJsYW5rIG9yIG5vdFxuICAgICAgdmFyIHRhcmdldF9ibGFuayA9ICEhKCh0eXBlb2YgJCh0aGlzKS5kYXRhKCd0YXJnZXQnKSAhPT0gJ3VuZGVmaW5lZCcgJiYgJCh0aGlzKS5kYXRhKCd0YXJnZXQnKSA9PSAnYmxhbmsnKSlcbiAgICAgIC8vIGlmIGZ1bGwgc2xpZGUgVVJMIGlzIGZvdW5kLCB0aGVuIG9wZW4gdGhlIGxpbmsgZWl0aGVyIGluIHRoZSBzYW1lIHdpbmRvdyBvciBhIG5ldyB0YWJcbiAgICAgIGlmICh1cmwpIHtcbiAgICAgICAgKHRhcmdldF9ibGFuaykgPyB3aW5kb3cub3Blbih1cmwsICdfYmxhbmsnKSA6IHdpbmRvdy5sb2NhdGlvbi5ocmVmID0gdXJsXG4gICAgICB9XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9KVxuICB9XG5cbiAgLypcbiAgKiBIaWRlIHBvcG92ZXIgd2hlbiB0aGUgdXNlciB0YXBzIGFueXdoZXJlIG9uIHRoZSBzY3JlZW4gaW4gdGhlIGRldGFpbHMgY29udGFpbmVyIG9mIHRoZSBWRFAuXG4gICogaHR0cDovL3N1cHBvcnQuZGVhbGVyaW5zcGlyZS5jb20vaGVscGRlc2svdGlja2V0cy8xNDk2NFxuICAqL1xuICBpZiAoJCh3aW5kb3cpLndpZHRoKCkgPD0gMTAyNCkge1xuICAgICQoZG9jdW1lbnQpLm9uKCd0b3VjaHN0YXJ0IE1TUG9pbnRlckRvd24nLCBmdW5jdGlvbiAoZSkge1xuICAgICAgJCgnLnBvcG92ZXInKS5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgLy8gaGlkZSBhbnkgb3BlbiBwb3BvdmVycyB3aGVuIHRoZSBhbnl3aGVyZSBlbHNlIGluIHRoZSBib2R5IGlzIGNsaWNrZWRcbiAgICAgICAgaWYgKCEkKHRoaXMpLmlzKGUudGFyZ2V0KSAmJiAkKHRoaXMpLmhhcyhlLnRhcmdldCkubGVuZ3RoID09PSAwICYmICQoJy5kZXRhaWxzLWNvbnRhaW5lciAucG9wb3ZlcicpLmhhcyhlLnRhcmdldCkubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgJCh0aGlzKS5wb3BvdmVyKCdoaWRlJylcbiAgICAgICAgICAkKCcucG9wb3ZlcicpLnN0b3AoKS5mYWRlT3V0KClcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KVxuICB9XG59KVxuXG4vKlxuICBUaGUgZm9sbG93aW5nIGFjdGlvbiByZXNldHMgdGhlIGlGcmFtZSBpbiBHcmF2aXR5IEZvcm1zIGFmdGVyIHN1Ym1pc3Npb24uXG4gIFRoaXMgYWxsb3dzIHVzZXJzIHRvIGhpdCB0aGUgXCJiYWNrXCIgYnV0dG9uIGluIENocm9tZSBmcm9tIHRoZSBjb25maXJtYXRpb24gcGFnZS5cbiovXG5qUXVlcnkoZnVuY3Rpb24gKCQpIHtcbiAgJChkb2N1bWVudCkub24oJ2dmb3JtX3Bvc3RfcmVuZGVyJywgZnVuY3Rpb24gKGUsIGZvcm1faWQpIHtcbiAgICAkKCcjZ2Zvcm1fYWpheF9mcmFtZV8nICsgZm9ybV9pZCkuYXR0cignc3JjJywgJ2Fib3V0OmJsYW5rJylcbiAgfSlcbn0pXG5cbkRJRmFuY3lCb3hFdmVudE1hbmFnZXIgPSB7XG4gIGJlZm9yZVNob3dDYWxsYmFja3M6IFtdLFxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHR5cGVvZiBqUXVlcnkuZmFuY3lib3guZGVmYXVsdHMgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBqUXVlcnkuZmFuY3lib3guZGVmYXVsdHMuYmVmb3JlU2hvdyA9IERJRmFuY3lCb3hFdmVudE1hbmFnZXIuX2hhbmRsZUJlZm9yZVNob3dcbiAgICB9XG4gIH0sXG4gIHJlZ2lzdGVyQmVmb3JlU2hvdzogZnVuY3Rpb24gKGNhbGxiYWNrLCBwcmlvcml0eSkge1xuICAgIGlmICghcHJpb3JpdHkpIHtcbiAgICAgIHByaW9yaXR5ID0gMFxuICAgIH1cblxuICAgIERJRmFuY3lCb3hFdmVudE1hbmFnZXIuYmVmb3JlU2hvd0NhbGxiYWNrcy5zcGxpY2UocHJpb3JpdHksIDAsIGNhbGxiYWNrKVxuICB9LFxuICBfaGFuZGxlQmVmb3JlU2hvdzogZnVuY3Rpb24gKCkge1xuICAgIHZhciBpbmRleCA9IGZhbHNlXG4gICAgdmFyIGNhbGxiYWNrID0gZmFsc2VcbiAgICB2YXIgc2VsZiA9IHRoaXNcblxuICAgIGZvciAoaW5kZXggaW4gRElGYW5jeUJveEV2ZW50TWFuYWdlci5iZWZvcmVTaG93Q2FsbGJhY2tzKSB7XG4gICAgICBjYWxsYmFjayA9IERJRmFuY3lCb3hFdmVudE1hbmFnZXIuYmVmb3JlU2hvd0NhbGxiYWNrc1tpbmRleF1cbiAgICAgIGNhbGxiYWNrLmFwcGx5KHNlbGYpXG4gICAgfVxuICB9XG59XG5cbmpRdWVyeShmdW5jdGlvbiAoKSB7XG4gIERJRmFuY3lCb3hFdmVudE1hbmFnZXIuaW5pdCgpXG59KTtcblxuKGZ1bmN0aW9uICgkKSB7XG4gIGlmICh0eXBlb2YgRElGYW5jeUJveEV2ZW50TWFuYWdlciAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAvKipcbiAgICAgKiBTb21lIDNyZCBwYXJ0aWVzIHJlZ2lzdGVyIHRoZWlyIG93biBmYW5jeWJveCB0aGF0IHBsYXlzIG9mZiBvZiBvdXJzLFxuICAgICAqIHNvIHdlIGhhdmUgbm8gd2F5IHRvIGRpcmVjdGx5IGFkZCB0aGUgZGlzYWJsZS1pZnJhbWUtZGVsYXkgY2xhc3MsIHNvIHdlIHdoaXRlbGlzdCB0aGVtXG4gICAgICogQHBhcmFtICBvYmplY3QgZWxlbWVudCAgIHRoZSBmYW5jeWJveCBvYmplY3RcbiAgICAgKiBAcmV0dXJuIGludCAgICAgICAgICAgICAgaWYgYSBkb21haW4gbWF0Y2ggd2FzIGZvdW5kLCB0aGVuIHJldHVybiB0aGUgY291bnRcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBkb21haW5XaGl0ZWxpc3RlZChlbGVtZW50KVxuICAgIHtcbiAgICAgIHZhciBtYXRjaGVzID0gMCxcbiAgICAgICAgICBkb21haW5zID0gWydkZWFsZXJzY2llbmNlJ107XG5cbiAgICAgICQuZWFjaChkb21haW5zLCBmdW5jdGlvbihpLCBkb21haW4pIHtcbiAgICAgICAgdmFyIHJlID0gbmV3IFJlZ0V4cChkb21haW4sICdnJyk7XG4gICAgICAgIGlmIChlbGVtZW50LmhyZWYubWF0Y2gocmUpKSB7XG4gICAgICAgICAgbWF0Y2hlcysrO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIG1hdGNoZXM7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaUZyYW1lTG9hZGluZ1N0YXR1cyAoKSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXMsXG4gICAgICAgICAgZWxlbWVudENsYXNzID0gJChzZWxmLmVsZW1lbnQpLmF0dHIoJ2NsYXNzJyk7XG5cbiAgICAgIGlmIChzZWxmLnR5cGUgPT0gJ2lmcmFtZScgJiYgKCEgZWxlbWVudENsYXNzLm1hdGNoKC9kaXNhYmxlLWlmcmFtZS1kZWxheS8pICYmICEgZG9tYWluV2hpdGVsaXN0ZWQoc2VsZikpKSB7XG5cbiAgICAgICAgdmFyIGxvYWRlciA9ICQoJzxkaXYgY2xhc3M9XCJmYW5jeWJveC1pZnJhbWUtbG9hZGluZ1wiPjxpIGNsYXNzPVwiZmEgZmEtc3Bpbm5lciBmYS1zcGluIGZhLTN4IGZhLWZ3IG1hcmdpbi1ib3R0b21cIj48L2k+PC9kaXY+JylcblxuICAgICAgICAkKHNlbGYuc2tpbikuYXBwZW5kKGxvYWRlcilcblxuICAgICAgICAkKHNlbGYuc2tpbikuZmluZCgnaWZyYW1lJykub24oJ2xvYWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgJChsb2FkZXIpLnJlbW92ZSgpXG4gICAgICAgIH0pXG5cbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgJChsb2FkZXIpLnJlbW92ZSgpXG4gICAgICAgIH0sIDUwMDApXG4gICAgICB9XG4gICAgfVxuXG4gICAgRElGYW5jeUJveEV2ZW50TWFuYWdlci5yZWdpc3RlckJlZm9yZVNob3coaUZyYW1lTG9hZGluZ1N0YXR1cywgLTEpXG4gIH1cblxuICAvLyBHbG9iYWwgdmFyIHRvIHN0b3JlIERJTW9kYWwgZGF0YSBhbmQgc2VsZWN0b3JzIGZvciB0aGUgb3Blbi9jbG9zZSBmdW5jdGlvbmFsaXR5XG4gIHZhciAkRElNb2RhbCA9IHtcbiAgICBpbml0ZDogZmFsc2UsXG4gICAgaXNWUlA6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiAkKCcjcmVzdWx0cy1wYWdlJykubGVuZ3RoID4gMFxuICAgIH0sXG4gICAgY29udGVudDoge1xuICAgICAgc2VsZWN0b3I6IGZhbHNlLFxuICAgICAgcGFyZW50X2VsOiB7XG4gICAgICAgIHNlbGVjdG9yOiBmYWxzZSxcbiAgICAgICAgaW5kZXg6IDBcbiAgICAgIH0sXG4gICAgICBoaWRkZW46IGZhbHNlXG4gICAgfSxcbiAgICB0cmlnZ2VyTW9kYWw6IGZ1bmN0aW9uIChsb2NhdGlvbikge1xuICAgICAgdGhpcy5pbml0ZCA9IGxvY2F0aW9uXG4gICAgICB0aGlzLm9wZW5Nb2RhbCgpXG4gICAgICB0aGlzLmNsb3NlTW9kYWwoKVxuICAgIH0sXG4gICAgb3Blbk1vZGFsOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgc2VsZiA9IHRoaXNcbiAgICAgICAgICAgIC8vIE5hcnJvdyBkb3duIHRoZSBpbnRlbmRlZCBjb250ZW50IGZvciBzaG93aW5nLCBhbmQgc2V0dXAgdGhlIG1vZGFsIGZvciBkaXNwbGF5XG4gICAgICAkKCcjRElNb2RhbCcpLm9uKCdzaG93LmJzLm1vZGFsJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIHZhciBtb2RhbCA9IHRoaXNcbiAgICAgICAgdmFyIHNvdXJjZSA9ICQoZXZlbnQucmVsYXRlZFRhcmdldClcbiAgICAgICAgdmFyIHRpdGxlID0gc291cmNlLmRhdGEoJ21vZGFsLXRpdGxlJylcbiAgICAgICAgdmFyIGNvbnRlbnQgPSBzb3VyY2UuZGF0YSgnbW9kYWwtY29udGVudCcpXG4gICAgICAgIHZhciBhZGRDbGFzcyA9IHNvdXJjZS5kYXRhKCdtb2RhbC1jbGFzcycpXG4gICAgICAgIHZhciBmb290ZXIgPSBzb3VyY2UuZGF0YSgnbW9kYWwtZm9vdGVyJylcblxuICAgICAgICAgICAgICAgIC8vIEhhbmRsZSB0aGUgdGl0bGVcbiAgICAgICAgaWYgKHRpdGxlICE9IG51bGwgJiYgdGl0bGUgIT0gJycpIHsgJChtb2RhbCkuZmluZCgnLm1vZGFsLXRpdGxlJykuaHRtbCh0aXRsZSkgfSBlbHNlIHsgJChtb2RhbCkuZmluZCgnLm1vZGFsLXRpdGxlJykuaHRtbCgnJm5ic3A7JykgfVxuXG4gICAgICAgICAgICAgICAgLy8gSGFuZGxlIHRoZSBjb250ZW50XG4gICAgICAgIGlmIChjb250ZW50ICE9IG51bGwgJiYgY29udGVudCAhPSAnJykge1xuICAgICAgICAgICAgICAgICAgICAvLyBTdG9yZSB0aGUgb3JpZ2luYWwgc2VsZWN0ZWQgZWxlbWVudFxuICAgICAgICAgIHNlbGYuY29udGVudC5zZWxlY3RvciA9ICQoY29udGVudClcbiAgICAgICAgICBpZiAoc2VsZi5jb250ZW50LnNlbGVjdG9yLmxlbmd0aCA+IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIElmIG1vcmUgdGhhbiBvbmUgZWxlbWVudCBtYXRjaGVzIHRoZSBzZWxlY3Rvciwgb25seSBnZXQgdGhlIGZpcnN0IG9uZVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gSW1wbGllcyBzcGVjaWZpY2l0eSB3aXRoIHRhcmdldGluZ1xuICAgICAgICAgICAgc2VsZi5jb250ZW50LnNlbGVjdG9yID0gc2VsZi5jb250ZW50LnNlbGVjdG9yWzBdXG4gICAgICAgICAgfVxuICAgICAgICAgIGlmICgkKHNlbGYuY29udGVudC5zZWxlY3RvcikuY3NzKCdkaXNwbGF5JykgPT0gJ25vbmUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBUaGUgY29udGVudCB0YXJnZXQgd2FzIGhpZGRlbiwgc28gbGV0J3MgbWFrZSBhIG5vdGUgb2YgdGhhdFxuICAgICAgICAgICAgc2VsZi5jb250ZW50LmhpZGRlbiA9IHRydWVcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGNvbnRlbnQgdGFyZ2V0IGlzIGFscmVhZHkgc2hvd2luZywgbGV0J3MgbWFrZSBhIG5vdGVcbiAgICAgICAgICAgIHNlbGYuY29udGVudC5oaWRkZW4gPSBmYWxzZVxuICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gRmluZCB0aGUgaW1tZWRpYXRlIHBhcmVudCBlbGVtZW50LCBzdG9yZSBpdFxuICAgICAgICAgIHNlbGYuY29udGVudC5wYXJlbnRfZWwuc2VsZWN0b3IgPSAkKGNvbnRlbnQpLnBhcmVudCgpXG4gICAgICAgICAgICAgICAgICAgIC8vIEZpbmQgdGhlIGluZGV4IG9mIHRoZSBjb250ZW50IHRhcmdldCBpbiBhc3NvY2lhdGlvbiB0byBpdHMgcGFyZW50IHNvIHdlIGNhbiByZS1pbnNlcnQgaXQgbmF0dXJhbGx5XG4gICAgICAgICAgc2VsZi5jb250ZW50LnBhcmVudF9lbC5pbmRleCA9ICQoc2VsZi5jb250ZW50LnBhcmVudF9lbC5zZWxlY3RvcikuZmluZCgnPiAqJykuaW5kZXgoc2VsZi5jb250ZW50LnNlbGVjdG9yKVxuXG4gICAgICAgICAgaWYgKHNlbGYuY29udGVudC5oaWRkZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFNob3cgdGhlIGNvbnRlbnQgaWYgaXQgaXMgaGlkZGVuXG4gICAgICAgICAgICAkKGNvbnRlbnQpLnNob3coKVxuICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgLy8gIEFwcGVuZCB0aGUgZmluYWxseS1kZXRlcm1pbmVkIGNvbnRlbnQgdGFyZ2V0IHRvIHRoZSBtb2RhbCBib2R5XG4gICAgICAgICAgJChtb2RhbCkuZmluZCgnLm1vZGFsLWJvZHknKS5hcHBlbmQoc2VsZi5jb250ZW50LnNlbGVjdG9yKVxuICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvLyBIYW5kbGUgbW9kYWwgc2l6ZSBjbGFzc2VzIGFuZCBjdXN0b20gY2xhc3Nlc1xuICAgICAgICBpZiAoYWRkQ2xhc3MgIT0gbnVsbCAmJiBhZGRDbGFzcyAhPSAnJykgeyAkKG1vZGFsKS5maW5kKCcubW9kYWwtZGlhbG9nJykuYWRkQ2xhc3MoYWRkQ2xhc3MpIH0gZWxzZSB7ICQobW9kYWwpLmZpbmQoJy5tb2RhbC1kaWFsb2cnKS5hdHRyKCdjbGFzcycsICdtb2RhbC1kaWFsb2cnKSB9XG5cbiAgICAgICAgICAgICAgICAvLyBIYW5kbGUgdGhlIGZvb3RlciAoc2hvdy9oaWRlKVxuICAgICAgICBpZiAoZm9vdGVyICE9IG51bGwgJiYgZm9vdGVyICE9ICcnKSB7XG4gICAgICAgICAgaWYgKGZvb3RlciA9PSAnZmFsc2UnIHx8IGZvb3RlciA9PSAnaGlkZScpIHtcbiAgICAgICAgICAgICQobW9kYWwpLmZpbmQoJy5tb2RhbC1mb290ZXInKS5oaWRlKClcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdmFyIGZpbGxlciA9ICQoZm9vdGVyKS5sZW5ndGggPiAwID8gJChmb290ZXIpLmNsb25lKCkuc2hvdygpIDogZm9vdGVyXG4gICAgICAgICAgICAkKG1vZGFsKS5maW5kKCcubW9kYWwtZm9vdGVyJykuc2hvdygpLmh0bWwoZmlsbGVyKVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gUmVzdG9yZSB0aGUgZGVmYXVsdCB2aWV3IG9mIHRoZSBmb290ZXIgc2hvd2luZ1xuICAgICAgICAgICQobW9kYWwpLmZpbmQoJy5tb2RhbC1mb290ZXInKS5zaG93KClcbiAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgLy8gTWFrZSBkYW1uIHN1cmUgdGhpcyBtb2RhbCBET00gaXMgc2l0dGluZyBkaXJlY3RseSB1bmRlciB0aGUgPGJvZHk+IGF0IGhpZ2hlc3QgdHJlZSBsZXZlbFxuICAgICAgICBpZiAoJChtb2RhbCkucGFyZW50KCkgIT0gJCgnYm9keScpKSB7ICQobW9kYWwpLmRldGFjaCgpLmFwcGVuZFRvKCdib2R5JykgfVxuXG4gICAgICAgICAgICAgICAgLy8gRGVidWcgdGhlIHNhdmVkIG9wdGlvbnMgb2JqZWN0OlxuICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHNlbGYpO1xuICAgICAgfSlcbiAgICB9LFxuICAgIGNsb3NlTW9kYWw6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpc1xuICAgICAgICAgICAgLy8gUmVzZXQgdGhlIG1vZGFsIGFuZCBpdHMgc2hvd2Nhc2VkIGNvbnRlbnQgb24gbW9kYWwgY2xvc2VcbiAgICAgICQoJyNESU1vZGFsJykub24oJ2hpZGRlbi5icy5tb2RhbCcsIGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICB2YXIgbW9kYWwgPSB0aGlzXG4gICAgICAgIHZhciBjb250ZW50ID0gJChtb2RhbCkuZmluZCgkKHNlbGYuY29udGVudC5zZWxlY3RvcikpXG4gICAgICAgIGlmICghc2VsZi5jb250ZW50LmhpZGRlbiAmJiBzZWxmLmNvbnRlbnQucGFyZW50X2VsLmluZGV4IDwgMCkge1xuICAgICAgICAgIHZhciBwbGFjZW1lbnQgPSAkKHNlbGYuY29udGVudC5wYXJlbnRfZWwuc2VsZWN0b3IpLmZpbmQoJz4gKicpLmVxKHNlbGYuY29udGVudC5wYXJlbnRfZWwuaW5kZXgpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdmFyIHBsYWNlbWVudCA9IGZhbHNlXG4gICAgICAgIH1cblxuICAgICAgICBpZiAocGxhY2VtZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIElmIHBsYWNlbWVudCBpcyBzcGVjaWZpYywgbGV0J3MgbWFrZSBzdXJlIHdlIGdldCBpdCByaWdodFxuICAgICAgICAgICQoY29udGVudCkuaW5zZXJ0QmVmb3JlKHBsYWNlbWVudClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlIGVsZW1lbnQgaXMgaGlkZGVuLCBzbyBwbGFjZW1lbnQgZG9lc24ndCBtYXR0ZXI7IGp1c3QgYXBwZW5kIGJhY2sgdG8gcGFyZW50XG4gICAgICAgICAgJChjb250ZW50KS5hcHBlbmRUbygkKHNlbGYuY29udGVudC5wYXJlbnRfZWwuc2VsZWN0b3IpKVxuICAgICAgICB9XG4gICAgICAgIGlmIChzZWxmLmNvbnRlbnQuaGlkZGVuKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEhpZGUgdGhlIGNvbnRlbnQgYWdhaW4gaWYgaXQgd2FzIGhpZGRlblxuICAgICAgICAgICQoY29udGVudCkuaGlkZSgpXG4gICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBSZXNldCB0aGUgbW9kZWwgdGl0bGUgYW5kIGNvbnRlbnQgKHNvIHZpZGVvIGVtYmVkcyBzdG9wIHBsYXlpbmcsIGV0YylcbiAgICAgICAgJChtb2RhbCkuZmluZCgnLm1vZGFsLWJvZHknKS5odG1sKCcgJylcbiAgICAgICAgJChtb2RhbCkuZmluZCgnLm1vZGFsLXRpdGxlJykuaHRtbCgnICcpXG4gICAgICB9KVxuICAgIH0sXG4gICAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHNlbGYgPSB0aGlzXG5cbiAgICAgICQoJ2JvZHknKS5vbigndnJwLXJlYWR5IHZycC1hamF4LWNvbXBsZXRlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICBjb25zb2xlLmxvZygndnJwLXJlYWR5JylcbiAgICAgIH0pO1xuXG4gICAgICAvLyBDaGVjayBpZiB0aGlzIG9iamVjdCBoYXMgYWxyZWFkeSBiZWVuIGluaXRpYWxpemVkXG4gICAgICBpZiAoIXNlbGYuaW5pdGQpIHtcbiAgICAgICAgaWYgKCQoJy5kaV9wZXJzb25hbGl6ZV9sb2FkaW5nX21lc3NhZ2UnKS5sZW5ndGggPiAwICYmIHR5cGVvZiBESV9QZXJzb25hbGl6YXRpb25fU2l0ZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICBESV9QZXJzb25hbGl6YXRpb25fU2l0ZS5yZWdpc3Rlcl9ob29rKCdjb250ZW50X3JlYWR5JywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgJERJTW9kYWwudHJpZ2dlck1vZGFsKCdweicpXG4gICAgICAgICAgfSlcbiAgICAgICAgfSBlbHNlIGlmICgkKCcjcmVzdWx0cy1wYWdlJykubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgalF1ZXJ5KCdib2R5Jykub24oJ3ZycC1yZWFkeSB2cnAtYWpheC1jb21wbGV0ZScsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgaWYgKCEkRElNb2RhbC5pbml0ZCkge1xuICAgICAgICAgICAgICAgICRESU1vZGFsLnRyaWdnZXJNb2RhbCgndnJwJylcbiAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBCZWNhdXNlIHRoaXMgdHJpZ2dlciBjYW4gZmlyZSBtdWx0aXBsZSB0aW1lcyBvbiB0aGUgc2FtZSBwYWdlIGxvYWQsXG4gICAgICAgICAgICAgICAgLy8gd2UgaGF2ZSB0byByZW1vdmUgZXZlbnRzIG9uICNESU1vZGFsIGFuZCByZS1zZXQgdGhlbSB0byBhdm9pZCBkdXBsaWNhdGUgYmVoYXZpb3JcbiAgICAgICAgICAgICAgICAkRElNb2RhbC5kZXN0cm95KClcbiAgICAgICAgICAgICAgICAkRElNb2RhbC50cmlnZ2VyTW9kYWwoJ3ZycCcpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc2VsZi50cmlnZ2VyTW9kYWwoJ2RvYycpXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9LFxuICAgIGRlc3Ryb3k6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBzZWxmID0gdGhpc1xuICAgICAgJCgnI0RJTW9kYWwnKS5vZmYoKVxuICAgIH1cbiAgfVxuXG4gICRESU1vZGFsLmluaXQoKVxuXG59KGpRdWVyeSkpXG4iXSwibmFtZXMiOlsic2Nyb2xsVG9wUG9zaXRpb24iLCJ0ZXN0IiwibmF2aWdhdG9yIiwidXNlckFnZW50IiwiX21vZGFsU2hvd24iLCIkIiwiY3NzIiwicG9zaXRpb24iLCJ6LWluZGV4IiwiX21vZGFsQ2xvc2VkIiwiaW9zMTFGQk1vZGFsSGFjayIsImlzIiwiYnNNb2RhbElvczExIiwialF1ZXJ5IiwiZG9jdW1lbnQiLCJyZWFkeSIsIl9zY3JvbGxQb3NpdGlvbiIsImFwcGVuZCIsIm9uIiwic2Nyb2xsVG9wIiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsInNldEludGVydmFsIiwiQXBwIiwidmlkZW9fd2luZG93X3Jlc2l6ZSIsIndpbmRvdyIsIndpZHRoIiwicmVzaXplIiwiaGVpZ2h0IiwidGhpcyIsInNob3ciLCJmaW5kIiwibGVuZ3RoIiwidmlkZW9fd2luZG93X3Jlc2l6ZV9vZmZzZXQiLCJvZmZzZXQiLCJub3QiLCJleHRlbmQiLCJERVZJQ0VTIiwiTU9CSUxFIiwiVEFCTEVUX1BPUlRSQUlUIiwiVEFCTEVUX0xBTkRTQ0FQRSIsIkRFU0tUT1AiLCJnZXREZXZpY2UiLCJ3IiwiZ2V0RGV2aWNlU3RyaW5nIiwidmFsIiwiaXNEZXZpY2UiLCJkZXZpY2UiLCJjbGljayIsImUiLCJpc01vYmlsZSIsImFueSIsImxvY2F0aW9uIiwiaHJlZiIsImF0dHIiLCJjaGlsZHJlbiIsInNldFRpbWVvdXQiLCJkYXRlcGlja2VyIiwiZWFjaCIsImVsZW1lbnQiLCJmb3JtYXQiLCJoYXNDbGFzcyIsImltYWdlIiwic2hvd09uIiwiaWQiLCJ5ZWFyUmFuZ2UiLCJidXR0b25JbWFnZSIsImJ1dHRvbkltYWdlT25seSIsImRhdGVGb3JtYXQiLCJjaGFuZ2VNb250aCIsImNoYW5nZVllYXIiLCJvblNlbGVjdCIsInNlbGVjdGVkIiwiZXZlbnQiLCJmb3JtX2lkIiwiaW5wdXQiLCJjb250ZXh0IiwiZm9ybSIsInJlcGxhY2UiLCJuYW1lIiwibWluRGF0ZSIsImJlZm9yZVNob3dEYXkiLCJkYXRlIiwiZ2V0RGF5IiwiZGF5Iiwibm9TdW5kYXkiLCJub1NhdHVyZGF5Iiwibm9GcmlkYXkiLCJub0ZyaWRheVdlZWtlbmRzIiwibm9XZWVrZW5kcyIsIm9uZVdvcmtpbmdEYXkiLCJEYXRlIiwiYWRqdXN0bWVudHMiLCJzZXREYXRlIiwiZ2V0RGF0ZSIsIm5vRnJpZGF5V2Vla2VuZCIsInR3b1dvcmtpbmdEYXlzIiwidGhyZWVXb3JraW5nRGF5cyIsImZvdXJXb3JraW5nRGF5cyIsImZpdmVXb3JraW5nRGF5cyIsInNpeFdvcmtpbmdEYXlzIiwic2V2ZW5Xb3JraW5nRGF5cyIsIl9kYXRlIiwicGFyZW50cyIsIm1hdGNoIiwic3RhcnREYXRlIiwiJGoiLCJtb250aCIsInllYXIiLCJnZXRNb250aCIsImdldEZ1bGxZZWFyIiwiaSIsImVsIiwiaW5zdCIsIl9nZXRJbnN0IiwiZHJhd01vbnRoIiwic2VsZWN0ZWRNb250aCIsImRyYXdZZWFyIiwic2VsZWN0ZWRZZWFyIiwiX25vdGlmeUNoYW5nZSIsIl9hZGp1c3REYXRlIiwiZW5kRGF0ZSIsImdldFRpbWVJbmNyZW1lbnRzIiwic3RhcnQiLCJlbmQiLCJpbmNyZW1lbnRzIiwiYXZhaWxhYmxlVGltZXMiLCJvcGVuIiwicGFyc2VJbnQiLCJjbG9zZSIsInRpbWVPZkRheSIsImN1cnJlbnRUaW1lIiwiaW5jIiwicHVzaCIsInBvcHVsYXRlQXZhaWxhYmxlVGltZXMiLCJkYXRlVGV4dCIsImZvcm1DbGFzc2VzIiwic3BsaXQiLCJmb3JtQ2xhc3MiLCJ3ZWVrZGF5VGltZXMiLCJ3ZWVrZGF5U3RhcnQiLCJ3ZWVrZGF5RW5kIiwid2Vla2VuZFRpbWVzIiwid2Vla2VuZFN0YXJ0Iiwid2Vla2VuZEVuZCIsIl9kYXkiLCJkYXlPZldlZWsiLCJ0aW1lSW5jcmVtZW50cyIsImNsb3NlZCIsInRpbWVzIiwiZGF5T2ZUaGVXZWVrIiwiJGF2YWlsYWJsZV90aW1lX3Nsb3RzIiwicmVtb3ZlIiwidGltZSIsInRvZGF5c0RhdGUiLCJ0cmlnZ2VyIiwiU3RyaW5nIiwicHJvdG90eXBlIiwidW5kZXJzY29yZVRvQ2FtZWxDYXNlIiwiJDEiLCJ0b1VwcGVyQ2FzZSIsIm1vZGZ1bGxPZmZzZXQiLCJ1aSIsImlzRW1wdHlPYmplY3QiLCJuZXdIZWFkZXIiLCJhbmltYXRlIiwidG9wIiwiRGVhbGVySW5zcGlyZUludmVudG9yeSIsIm9wdGlvbnMiLCJpc19pbnZlbnRvcnlfcGFnZSIsImRhdGEiLCJ1cmwiLCJtb2JpbGVVcmwiLCJ2ZWhpY2xlIiwicGFyYW0iLCJzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24iLCJmYW5jeWJveCIsIiRob3N0IiwiaG9zdCIsIiRwYXRoIiwicGF0aG5hbWUiLCJ1bnNlcmlhbGl6ZSIsInIiLCJlcnJvciIsIm4iLCJhIiwidCIsInJlYWRfdW50aWwiLCJzbGljZSIsImpvaW4iLCJyZWFkX2NocnMiLCJ1IiwiY2hhckNvZGVBdCIsImluZGV4T2YiLCJfdW5zZXJpYWxpemUiLCJzIiwibyIsImwiLCJjIiwiZCIsImYiLCJoIiwiXyIsInAiLCJiIiwiayIsImciLCJ2IiwiSSIsInRvTG93ZXJDYXNlIiwicGFyc2VGbG9hdCIsIkFycmF5Iiwic2VhcmNoIiwicXVlcnlfc3RyaW5nIiwicXVlcnkiLCJ0b19vYmoiLCJEZWFsZXJJbnNwaXJlQ29va2llIiwiQ3JlYXRlQ29va2llIiwiY29uc29sZSIsImxvZyIsIlJlYWRDb29raWUiLCJ2ZWhpY2xlX2hpc3RvcnkiLCJ2aW5zIiwidmluX2hpc3RvcnkiLCJhdlRleHQiLCJfY29tbW9uX3RoZW1lIiwiZGlfYXBwbGljYXRpb24iLCJhbHJlYWR5X3ZpZXdlZCIsImN1cnJlbnRfdmluIiwiaW5BcnJheSIsImFwcGx5VmlzaXRlZENsYXNzZXMiLCIkYXNrX3F1ZXN0aW9uIiwic3BlY2lmaWVkX2hlaWdodCIsIiRoZWFkZXIiLCJhc2tfcXVlc3Rpb25faGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJoZWFkZXJfaGVpZ2h0IiwibmVnYXRpdmVfcG9zIiwic2Nyb2xsUG9zIiwib3BhY2l0eSIsInNjcm9sbCIsInRhcmdldCIsIm93bENhcm91c2VsIiwiY2VudGVyIiwiYXV0b1BsYXkiLCJuYXZpZ2F0aW9uIiwiaXRlbXMiLCJpdGVtc0Rlc2t0b3AiLCJpdGVtc0Rlc2t0b3BTbWFsbCIsIml0ZW1zVGFibGV0IiwiaXRlbXNNb2JpbGUiLCJuYXZpZ2F0aW9uVGV4dCIsImFmdGVySW5pdCIsImludmVudG9yeV92ZWhpY2xlX2NhcmRzX2xvYWRfdGltZXIiLCJpbnZlbnRvcnlfdmVoaWNsZV9jYXJkc19pbnRlcnZhbCIsIm1hcmdpbiIsImNsZWFySW50ZXJ2YWwiLCJpc0Z1bmN0aW9uIiwiZm4iLCJtYXRjaEhlaWdodCIsInRhcmdldF9ibGFuayIsImhhcyIsInBvcG92ZXIiLCJzdG9wIiwiZmFkZU91dCIsIkRJRmFuY3lCb3hFdmVudE1hbmFnZXIiLCJiZWZvcmVTaG93Q2FsbGJhY2tzIiwiaW5pdCIsImRlZmF1bHRzIiwiYmVmb3JlU2hvdyIsIl9oYW5kbGVCZWZvcmVTaG93IiwicmVnaXN0ZXJCZWZvcmVTaG93IiwiY2FsbGJhY2siLCJwcmlvcml0eSIsInNwbGljZSIsImluZGV4IiwiYXBwbHkiLCJtYXRjaGVzIiwic2VsZiIsImVsZW1lbnRDbGFzcyIsInR5cGUiLCJkb21haW4iLCJyZSIsIlJlZ0V4cCIsImxvYWRlciIsInNraW4iLCIkRElNb2RhbCIsImluaXRkIiwiaXNWUlAiLCJjb250ZW50Iiwic2VsZWN0b3IiLCJwYXJlbnRfZWwiLCJoaWRkZW4iLCJ0cmlnZ2VyTW9kYWwiLCJvcGVuTW9kYWwiLCJjbG9zZU1vZGFsIiwibW9kYWwiLCJzb3VyY2UiLCJyZWxhdGVkVGFyZ2V0IiwidGl0bGUiLCJmb290ZXIiLCJodG1sIiwicGFyZW50IiwiaGlkZSIsImZpbGxlciIsImNsb25lIiwiZGV0YWNoIiwiYXBwZW5kVG8iLCJwbGFjZW1lbnQiLCJlcSIsImluc2VydEJlZm9yZSIsIkRJX1BlcnNvbmFsaXphdGlvbl9TaXRlIiwicmVnaXN0ZXJfaG9vayIsImRlc3Ryb3kiLCJvZmYiXSwibWFwcGluZ3MiOiJBQUdBLElBQUlBLGtCQUVKLEdBQUksMENBQTBDQyxLQUFLQyxVQUFVQyxXQUFZLENBQ3ZFLFNBQVNDLGNBQ2dDLFlBQW5DQyxFQUFFLGNBQWNDLElBQUksYUFDcEJELEVBQUUsY0FBY0MsSUFBSSxDQUNoQkMsU0FBYSxXQUNiQyxVQUFZLE9BS3RCLFNBQVNDLGVBQ2dDLFVBQW5DSixFQUFFLGNBQWNDLElBQUksYUFDcEJELEVBQUUsY0FBY0MsSUFBSSxDQUNoQkMsU0FBYSxXQUt2QixTQUFTRyxvQkFDSEwsRUFBRSxxQkFBcUJNLEdBQUcsWUFDNUJQLFlBRUFLLGdCQVlKLFNBQVNHLGVBQ1BDLE9BQU9DLFVBQVVDLE1BQU0sU0FBU1YsR0FDOUIsSUFDSVcsRUFFSlgsRUFBRSxRQUFRWSxPQUhTLDBHQWdCbkJaLEVBQUUseUJBQXlCYSxHQUFHLGlCQUFrQixXQVY5Q0YsRUFBa0JYLEVBQUVTLFVBQVVLLFlBQzlCZCxFQUFFLGFBQWFlLFNBQVMsc0JBYTFCZixFQUFFLHlCQUF5QmEsR0FBRyxrQkFBbUIsV0FUL0NiLEVBQUUsYUFBYWdCLFlBQVksb0JBQzNCaEIsRUFBRVMsVUFBVUssVUFBVUgsT0FwQjVCTSxZQUFZLFdBQ1ZaLG9CQUNDLEtBZ0NIRSxlQUlGLElB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
