jQuery.fn.equalHeights=function(e){return $(this).each(function(){var t=0;$(this).children().each(function(e){$(this).height()>t&&(t=$(this).height())}),e&&Number.prototype.pxToEm||(t=t.pxToEm()),$.browser.msie&&6==$.browser.version&&$(this).children().css({height:t}),$(this).children().css({"min-height":t})}),this},jQuery.fn.equalWidths=function(e){return $(this).each(function(){var t=0;$(this).children().each(function(e){$(this).width()>t&&(t=$(this).width())}),e&&Number.prototype.pxToEm||(t=t.pxToEm()),$.browser.msie&&6==$.browser.version&&$(this).children().css({width:t}),$(this).children().css({"min-width":t})}),this},Number.prototype.pxToEm=String.prototype.pxToEm=function(e){e=jQuery.extend({scope:"body",reverse:!1},e);function t(){var e=document.documentElement;return self.innerWidth||e&&e.clientWidth||document.body.clientWidth}var i,s=""==this?0:parseFloat(this);if("body"==e.scope&&$.browser.msie&&0<(parseFloat($("body").css("font-size"))/t()).toFixed(1)){i=16*(parseFloat($("body").css("font-size"))/t()).toFixed(3)}else i=parseFloat(jQuery(e.scope).css("font-size"));return 1==e.reverse?(s*i).toFixed(2)+"px":(s/i).toFixed(2)+"em"};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
