var vrpFilterShowing=!1,skrollrInstance=!1;function formatPhone(e){var t=e.value,i=new String,a=0,d=new RegExp("[(]\\d\\d\\d[)][ ]\\d\\d\\d[-]\\d{4}$");for(2<t.length&&(i="("),t=(t=(t=(t=t.replace(/[(]/g,"")).replace(/[)]/g,"")).replace(/-/g,"")).replace("(1","");0==t.indexOf("1");)for(t=t.replace("1","");0==t.indexOf("-");)t=t.replace("-","");if(1==d.test(t))return!0;for(var n=0;n<t.length;++n)"0"!=t.charAt(n)&&"1"!=t.charAt(n)&&"2"!=t.charAt(n)&&"3"!=t.charAt(n)&&"4"!=t.charAt(n)&&"5"!=t.charAt(n)&&"6"!=t.charAt(n)&&"7"!=t.charAt(n)&&"8"!=t.charAt(n)&&"9"!=t.charAt(n)||(4==(a+=1)&&(i+=") "),7==a&&(i+="-"),a<11&&(i+=t.charAt(n)));return 1==(e.value=i).length&&(e.value=""),14==i.length}jQuery(function(h){if(isMobile={Android:function(){return!!navigator.userAgent.match(/Android/i)},BlackBerry:function(){return!!navigator.userAgent.match(/BlackBerry/i)},iOS:function(){return!!navigator.userAgent.match(/iPhone|iPad|iPod/i)},Windows:function(){return!!navigator.userAgent.match(/IEMobile/i)},any:function(){return isMobile.Android()||isMobile.BlackBerry()||isMobile.iOS()||isMobile.Windows()||h(window).width()<767},tablet:function(){return(isMobile.Android()||isMobile.BlackBerry()||isMobile.iOS()||isMobile.Windows())&&767<h(window).width()}},0<h(".sidebar-navigation-enabled").length){var t=isMobile.tablet()?"240":"260",i=h(".mobile-menu-toggle").data("side")||"left",a=h("#mobile-menu-toggle").data("side")||"left",d=h("#desktop-menu-toggle").data("side")||"left",e=h(".mobile-menu-toggle").data("container")||"sidr",n=h("#mobile-menu-toggle").data("container")||"sidr",o=h("#desktop-menu-toggle").data("container")||"sidr",r=h(".contentcontainer,.close-mobile-nav,.close-mobile-wrap,#mobile-advanced-search");h(".mobile-menu-toggle").sidr({name:e,side:i,onOpen:function(){var e={};e[i]="+="+t,h(".menu-top").animate(e,200),"right"==i&&h(".menu-top").css({left:"auto"})},onClose:function(){var e={};e[i]="-="+t,h(".menu-top").animate(e,200),"right"==i&&h(".menu-top").css({left:"auto"})}}),r.bind("click",function(){h.sidr("close",e)}),h("#mobile-menu-toggle").sidr({name:n,side:a,onOpen:function(){var e={};e[a]="+="+t,h(".menu-top").animate(e,200),"right"==a&&h(".menu-top").css({left:"auto"})},onClose:function(){var e={};e[a]="-="+t,h(".menu-top").animate(e,200),"right"==a&&h(".menu-top").css({left:"auto"})}}),r.bind("click",function(){h.sidr("close",n)}),h("#desktop-menu-toggle").sidr({name:o,side:d,onOpen:function(){var e={};e[d]="+="+t,h(".menu-top").animate(e,200),"right"==d&&h(".menu-top").css({left:"auto"})},onClose:function(){var e={};e[d]="-="+t,h(".menu-top").animate(e,200),"right"==d&&h(".menu-top").css({left:"auto"})}}),r.bind("click",function(){h.sidr("close",o)})}else h(document).on("click tab","#mobile-menu-toggle",function(e){e.preventDefault();var t=h("body").css("overflow");h(".mobile-nav-menu").toggle({easing:"easeInOutBack"}),"hidden"==t?h("body").css("overflow","visible"):h("body").css("overflow","hidden")});h("input, textarea").placehold(),h.fn.cleardefault=function(){return this.focus(function(){this.value===this.defaultValue&&(this.value="")}).blur(function(){this.value.length||(this.value=this.defaultValue)})},h(".clearit input:not(:input[type=submit]), .clearit textarea").cleardefault();var s=document.title;if(h("li.apply a, li.rebates a, li.value a, a.preApproved,a.testDrive,a.reserveVehicle,a.emailicon,a.smallgreenbutton,input#searchsubmit").each(function(){var e=h(this).text();h(this).attr({onclick:"clicky.log(this.href,'"+s+"-"+e+"');"})}),isMobile.any()||h("#searchform #s").focus(),0<h("#modelcarousel.five").length)h("#modelcarousel").owlCarousel({autoPlay:7e3,navigation:!0,items:5,itemsDesktop:[1024,4],itemsDesktopSmall:[979,4],itemsTablet:[768,3],itemsMobile:[320,2]});else if(0<h("#modelcarousel").length)h("#modelcarousel").owlCarousel({autoPlay:7e3,navigation:!0,items:6,itemsDesktop:[1024,5],itemsDesktopSmall:[979,5],itemsTablet:[768,4],itemsMobile:[320,2]});isMobile.any()&&!isMobile.tablet()||h(".lightbox").fancybox({maxWidth:800,maxHeight:600,fitToView:!1,width:"70%",height:"70%",autoSize:!1,closeClick:!1,openEffect:"none",closeEffect:"none"}),isMobile.any()&&!isMobile.tablet()||h(".lightbox-form").fancybox({maxWidth:800,maxHeight:600,fitToView:!1,width:"70%",height:"70%",autoSize:!1,closeClick:!1,openEffect:"none",closeEffect:"none",beforeLoad:function(){var e=h(this.element).attr("id"),t=h("#"+e+" span.stocknum").text(),i=h("#"+e+" span.model").text(),a=h("#"+e+" span.make").text(),d=h("#"+e+" span.year").text();h("li.stocknum input").attr("value",t),h("li.model input").attr("value",i),h("li.year input").attr("value",d),h("li.make input").attr("value",a)}}),h(".fancy_print").click(function(){var e=h(this).parents(".printSection").attr("data-attribute-printid");!function(e){var t="toolbar=yes,location=no,directories=yes,menubar=yes,scrollbars=yes,width=800, height=800, left=50, top=25,_blank";"Microsoft Internet Explorer"!=navigator.appName&&(t="");var i="object"==typeof dealer_custom&&(dealer_custom.printStyles,1)?dealer_custom.printStyles:"",a="body{ font-family: Arial; font-size: 12pt;} .expires {font-style: italic; margin: 5px 0;} .modelName {color:blue;font-size:16pt;margin: 5px 0;} .disclaimer {font-size:10pt; font-style: italic;color: gray;}"+i,d=window.open("","",t);d.document.open(),d.document.write('<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'),d.document.write("<head><title></title>"),d.document.write("<head><style>"),d.document.write(a),d.document.write("</style>"),d.document.write('</head><body onLoad="self.print();">'),d.document.write(e),d.document.write("</body></html>"),d.document.close(),d.focus()}(document.getElementById(e).innerHTML)});function l(){h("#menu-main-menu ul.sub-menu").each(function(){var e=h(this);e.offset().left+e.width()<=h("#whitewrap").width()?h(this).removeClass("edge"):h(this).addClass("edge")})}h("button.print").click(function(){window.focus(),window.print()}),isMobile.any()&&!isMobile.tablet()&&h(".cta-box").hide(),h("#flexslider_hg_homepage ul.slides li a").each(function(){var e=h(this).attr("href");e&&1<=e.indexOf("youtube.com")&&(h(this).addClass("youtube-lightbox"),h(this).click(function(e){return e.preventDefault(),h.fancybox({padding:0,autoScale:!1,transitionIn:"none",transitionOut:"none",title:this.title,width:680,height:495,href:this.href.replace(new RegExp("watch\\?v=","i"),"v/"),type:"swf",swf:{wmode:"transparent",allowfullscreen:"true"}}),!1}))}),l();var p=h(".header-container").outerHeight();if(h(window).scroll(function(){h(window).scrollTop()>p&&!h(window).width()<767?h(".navigation-container:not(#nostick)").addClass("fixed").css("top","0").next().css("padding-top","40px"):h(".navigation-container:not(#nostick)").removeClass("fixed").next().css("padding-top","0")}),h(".accordion, #accordionMenu").accordion({active:!1,collapsible:!0,heightStyle:"content",icons:c,beforeActivate:function(e,t){try{if($e=jQuery(t.newHeader.context).find("a"),0<$e.length&&!0===$e.is(".fancy,.fancy_iframe,.fancybox,.lightbox"))return!1}catch(e){return"undefined"!=typeof console&&console.log(e.stack),!0}}}),isMobile.any()){h("body").css({overflowX:"hidden"}),h("#model-listing-toggle").click(function(e){h(".model-listing").toggle()}),h("#brands-listing-toggle").click(function(e){h(".brand-listing").toggle()});var c={header:"ui-icon-plus",activeHeader:"ui-icon-minus"};h("#cta-mobile-button").on("click",function(){h(".mobile-action-form.open").removeClass("open"),h(this).parent().find(".mobile-action-form").addClass("open")}),h(".mobile-action-close").on("click",function(){h(".mobile-action-form.open").removeClass("open")}),jQuery("#main-action-form-mobile").find("label").each(function(e,i){jQuery(i).parent().find("input,textarea").each(function(e,t){jQuery(t).attr("placeholder",jQuery(i).text())})}),0<h(".vrp-listing").length&&(jQuery("a.vrp-incentives").fancybox(),jQuery("#vrp-filter-menu").show(),jQuery(".filters").click(function(e){e.stopPropagation()}))}function l(){h("#menu-main-menu ul.sub-menu").each(function(){var e=h(this);e.offset().left+e.width()<=h("#whitewrap").width()?h(this).removeClass("edge"):h(this).addClass("edge")})}h("#view-desktop-site").click(function(e){e.preventDefault();document.cookie="view-desktop=yes; expires=3600000; path=/";var t=window.location.search;t+=(""===t?"?":"&")+"view-desktop=yes",window.location.search=t}),h(".maincardetails .more-action div").popover({placement:"top",trigger:"hover"}),isMobile.tablet()&&(h("#whitewrap").addClass("tablet"),h(".touch-header .menu-top").css("top","0px"),h(".touch-header .menu-top").removeAttr("data-0"),h(".touch-header .menu-top").removeAttr("data-40")),jQuery(function(){function i(e){jQuery(e).attr("readonly","readonly"),jQuery(e).parent().find(".gf-date-clear").length||jQuery(e).parent().append('<p class="gf-date-clear" style="margin-top:-10px;margin-left:5px;"><a href="#">clear date</small></p>'),jQuery(e).parents(".gfield").find(".gf-date-clear a").on("click",function(){return h(this).parents(".ginput_container_date").find(".datepicker").val(""),h(this).parents(".ginput_container_date").find(".gf-date-clear").remove(),!1})}if(0<jQuery(".gfield.noweekends").length)jQuery(".gfield.noweekends .datepicker").datepicker("destroy"),jQuery(".gfield.noweekends .datepicker").datepicker({minDate:"+1",showOn:"both",buttonImage:"/wp-content/plugins/gravityforms/images/calendar.png",buttonImageOnly:!0,beforeShow:function(e,t){i(e)},beforeShowDay:jQuery.datepicker.noWeekends});else if(0<jQuery(".gfield.nosundays").length)jQuery(".gfield.nosundays .datepicker").datepicker("destroy"),jQuery(".gfield.nosundays .datepicker").datepicker({minDate:"+1",showOn:"both",buttonImage:"/wp-content/plugins/gravityforms/images/calendar.png",buttonImageOnly:!0,beforeShow:function(e,t){i(e)},beforeShowDay:function(e){return[0!=e.getDay()]}});else if(0<jQuery(".gfield.nosaturdays").length)jQuery(".gfield.nosaturdays .datepicker").datepicker("destroy"),jQuery(".gfield.nosaturdays .datepicker").datepicker({minDate:"+1",showOn:"both",buttonImage:"/wp-content/plugins/gravityforms/images/calendar.png",buttonImageOnly:!0,beforeShow:function(e,t){i(e)},beforeShowDay:function(e){return[6!=e.getDay()]}}),jQuery(".gfield.nosaturdays .datepicker").attr("readonly","readonly"),jQuery(".gfield.nosaturdays .datepicker").after('<p class="gf-date-clear" style="margin-top:-10px;margin-left:5px;"><a href="#">clear date</small></p>'),jQuery(".gfield.nosaturdays .gf-date-clear a").on("click",function(){return h(this).parents(".ginput_container_date").find(".datepicker").val(""),!1});else if(0<jQuery(".gfield.di_gf_enable_today").length){var e=new Date;jQuery(".gfield.di_gf_enable_today .datepicker").datepicker("destroy"),jQuery(".gfield.di_gf_enable_today .datepicker").datepicker({minDate:e,showOn:"both",buttonImage:"/wp-content/plugins/gravityforms/images/calendar.png",buttonImageOnly:!0})}else if(0<jQuery(".gfield.nofridayWeekends").length)jQuery(".gfield.nofridayWeekends .datepicker").datepicker("destroy"),jQuery(".gfield.nofridayWeekends .datepicker").datepicker({minDate:"+1",showOn:"both",buttonImage:"/wp-content/plugins/gravityforms/images/calendar.png",buttonImageOnly:!0,beforeShow:function(e,t){i(e)},beforeShowDay:function(e){var t=e.getDay();return 5==t||6==t||0==t?[!1,""]:[!0,""]}});else{if(jQuery(".gfield .datepicker").parents(".gform_page").length||(jQuery(".gfield .datepicker").datepicker("destroy"),jQuery(".gfield .datepicker").datepicker({minDate:"+1",showOn:"both",buttonImage:"/wp-content/plugins/gravityforms/images/calendar.png",buttonImageOnly:!0})),jQuery(".gfield.di_past_dates .datepicker").length&&jQuery(".gfield.di_past_dates .datepicker").datepicker("option","minDate",null),jQuery(".gfield.di_gf_plus_1d .datepicker").length&&(jQuery(".gfield.di_gf_plus_1d .datepicker").datepicker("option","minDate","+1d"),jQuery(".gfield.di_gf_plus_1d").hasClass("nosundays")&&jQuery(".gfield.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",g),jQuery(".gfield.di_gf_plus_1d").hasClass("nosaturdays")&&jQuery(".gfield.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",f),jQuery(".gfield.di_gf_plus_1d").hasClass("nofridayWeekends")&&jQuery(".gfield.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",_),jQuery(".gfield.di_gf_plus_1d").hasClass("noweekends")&&jQuery(".gfield.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends),jQuery(".gfield.di_gf_plus_1d").hasClass("blackoutskipweekends"))){var t=new Date,a=[0,0,2,2,2,2,1];t.setDate(t.getDate()+1+a[t.getDay()]),h(".gfield.di_gf_plus_1d .datepicker").datepicker("option","minDate",t),h(".gfield.di_gf_plus_1d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends)}if(jQuery(".gfield.di_gf_plus_2d .datepicker").length&&(jQuery(".gfield.di_gf_plus_2d .datepicker").datepicker("option","minDate","+2d"),jQuery(".gfield.di_gf_plus_2d").hasClass("nosundays")&&jQuery(".gfield.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",g),jQuery(".gfield.di_gf_plus_2d").hasClass("nosaturdays")&&jQuery(".gfield.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",f),jQuery(".gfield.di_gf_plus_2d").hasClass("nofridayWeekends")&&jQuery(".gfield.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",_),jQuery(".gfield.di_gf_plus_2d").hasClass("noweekends")&&jQuery(".gfield.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends),jQuery(".gfield.di_gf_plus_2d").hasClass("blackoutskipweekends"))){var d=new Date;a=[0,0,2,2,2,2,1];d.setDate(d.getDate()+2+a[d.getDay()]),h(".gfield.di_gf_plus_2d .datepicker").datepicker("option","minDate",d),h(".gfield.di_gf_plus_2d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends)}if(jQuery(".gfield.di_gf_plus_3d .datepicker").length&&(jQuery(".gfield.di_gf_plus_3d .datepicker").datepicker("option","minDate","+3d"),jQuery(".gfield.di_gf_plus_3d").hasClass("nosundays")&&jQuery(".gfield.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",g),jQuery(".gfield.di_gf_plus_3d").hasClass("nosaturdays")&&jQuery(".gfield.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",f),jQuery(".gfield.di_gf_plus_3d").hasClass("nofridayWeekends")&&jQuery(".gfield.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",_),jQuery(".gfield.di_gf_plus_3d").hasClass("noweekends")&&jQuery(".gfield.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends),jQuery(".gfield.di_gf_plus_3d").hasClass("blackoutskipweekends"))){var n=new Date;a=[0,0,2,2,2,2,1];n.setDate(n.getDate()+3+a[n.getDay()]),h(".gfield.di_gf_plus_3d .datepicker").datepicker("option","minDate",n),h(".gfield.di_gf_plus_3d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends)}if(jQuery(".gfield.di_gf_plus_4d .datepicker").length&&(jQuery(".gfield.di_gf_plus_4d .datepicker").datepicker("option","minDate","+4d"),jQuery(".gfield.di_gf_plus_4d").hasClass("nosundays")&&jQuery(".gfield.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",g),jQuery(".gfield.di_gf_plus_4d").hasClass("nosaturdays")&&jQuery(".gfield.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",f),jQuery(".gfield.di_gf_plus_4d").hasClass("nofridayWeekends")&&jQuery(".gfield.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",_),jQuery(".gfield.di_gf_plus_4d").hasClass("noweekends")&&jQuery(".gfield.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends),jQuery(".gfield.di_gf_plus_4d").hasClass("blackoutskipweekends"))){var o=new Date;a=[0,0,2,2,2,2,1];o.setDate(o.getDate()+4+a[o.getDay()]),h(".gfield.di_gf_plus_4d .datepicker").datepicker("option","minDate",o),h(".gfield.di_gf_plus_4d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends)}if(jQuery(".gfield.di_gf_plus_5d .datepicker").length&&(jQuery(".gfield.di_gf_plus_5d .datepicker").datepicker("option","minDate","+5d"),jQuery(".gfield.di_gf_plus_5d").hasClass("nosundays")&&jQuery(".gfield.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",g),jQuery(".gfield.di_gf_plus_5d").hasClass("nosaturdays")&&jQuery(".gfield.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",f),jQuery(".gfield.di_gf_plus_5d").hasClass("nofridayWeekends")&&jQuery(".gfield.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",_),jQuery(".gfield.di_gf_plus_5d").hasClass("noweekends")&&jQuery(".gfield.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends),jQuery(".gfield.di_gf_plus_5d").hasClass("blackoutskipweekends"))){var r=new Date;a=[2,2,2,2,2,2,1];r.setDate(r.getDate()+5+a[r.getDay()]),h(".gfield.di_gf_plus_5d .datepicker").datepicker("option","minDate",r),h(".gfield.di_gf_plus_5d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends)}if(jQuery(".gfield.di_gf_plus_6d .datepicker").length&&(jQuery(".gfield.di_gf_plus_6d .datepicker").datepicker("option","minDate","+6d"),jQuery(".gfield.di_gf_plus_6d").hasClass("nosundays")&&jQuery(".gfield.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",g),jQuery(".gfield.di_gf_plus_6d").hasClass("nosaturdays")&&jQuery(".gfield.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",f),jQuery(".gfield.di_gf_plus_6d").hasClass("nofridayWeekends")&&jQuery(".gfield.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",_),jQuery(".gfield.di_gf_plus_6d").hasClass("noweekends")&&jQuery(".gfield.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends),jQuery(".gfield.di_gf_plus_6d").hasClass("blackoutskipweekends"))){var s=new Date;a=[2,2,2,2,2,2,1];s.setDate(s.getDate()+6+a[s.getDay()]),h(".gfield.di_gf_plus_6d .datepicker").datepicker("option","minDate",s),h(".gfield.di_gf_plus_6d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends)}if(jQuery(".gfield.di_gf_plus_7d .datepicker").length&&(jQuery(".gfield.di_gf_plus_7d .datepicker").datepicker("option","minDate","+7d"),jQuery(".gfield.di_gf_plus_7d").hasClass("nosundays")&&jQuery(".gfield.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",g),jQuery(".gfield.di_gf_plus_7d").hasClass("nosaturdays")&&jQuery(".gfield.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",f),jQuery(".gfield.di_gf_plus_7d").hasClass("nofridayWeekends")&&jQuery(".gfield.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",_),jQuery(".gfield.di_gf_plus_7d").hasClass("noweekends")&&jQuery(".gfield.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends),jQuery(".gfield.di_gf_plus_7d").hasClass("blackoutskipweekends"))){a=[2,2,2,2,2,2,1];(l=new Date).setDate(l.getDate()+7+a[l.getDay()]),h(".gfield.di_gf_plus_7d .datepicker").datepicker("option","minDate",l),h(".gfield.di_gf_plus_7d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends)}if(jQuery("li.di_gf_plus_14d .datepicker").length&&(jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","minDate","+14d"),jQuery("li.di_gf_plus_14d").hasClass("nosundays")&&jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",g),jQuery("li.di_gf_plus_14d").hasClass("nosaturdays")&&jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",f),jQuery("li.di_gf_plus_14d").hasClass("nofridayWeekends")&&jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",_),jQuery("li.di_gf_plus_14d").hasClass("noweekends")&&jQuery("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends),jQuery("li.di_gf_plus_14d").hasClass("blackoutskipweekends"))){var l;a=[2,2,2,2,2,2,1];(l=new Date).setDate(l.getDate()+7+a[l.getDay()]),h("li.di_gf_plus_14d .datepicker").datepicker("option","minDate",l),h("li.di_gf_plus_14d .datepicker").datepicker("option","beforeShowDay",h.datepicker.noWeekends)}if(h('li[class*="sd|"] .datepicker').length){var p=h('li[class*="sd|"] .datepicker').parents('li[class*="sd|"]').attr("class").match(/sd\|([^\s]*)/),c=new Date(p[1]);h('li[class*="sd|"] .datepicker').datepicker("option","beforeShowDay",function(e){return c<=e?[!0,""]:[!1,""]}),h('li[class*="sd|"] .datepicker').datepicker("option","showOtherMonths",!0),h('li[class*="sd|"] .datepicker').on("click",function(){var e,a,d;e=h(this),a=c.getMonth(),d=c.getFullYear(),e.each(function(e,t){var i=h.datepicker._getInst(t);i.drawMonth=i.selectedMonth=a,i.drawYear=i.selectedYear=d,h.datepicker._notifyChange(i),h.datepicker._adjustDate(t)})})}if(h('li[class*="ed|"] .datepicker').length){p=h('li[class*="ed|"] .datepicker').parents('li[class*="ed|"]').attr("class").match(/ed\|([^\s]*)/);var u=new Date(p[1]);h('li[class*="ed|"] .datepicker').datepicker("option","beforeShowDay",function(e){if(void 0!==c&&c){if(c<=e&&e<=u)return[!0,""]}else if(e<=u)return[!0,""];return[!1,""]}),h('li[class*="ed|"] .datepicker').datepicker("option","showOtherMonths",!0)}function f(e){return[6!=e.getDay()]}function g(e){return[0<e.getDay(),""]}function _(e){var t=e.getDay();return 5==t||6==t||0==t?[!1,""]:[!0,""]}jQuery(window).on("di_gravity_forms_loaded",function(){jQuery(".gfield .datepicker").length&&jQuery(".gfield .datepicker").datepicker("option","firstDay",0)}),h(window).trigger("di_gravity_forms_loaded",["bonobos"])}function y(e,t,i){for(var a=[],d=parseInt(e),n=parseInt(t),o="AM",r=d,s=i;d<=n;)12<d&&(r=d-12,o="PM"),d!=n&&jQuery.each(s,function(e,t){a.push(r+":"+t+" "+o)}),d++,r++;return a}function k(e){if(jQuery("form.form_times_available").length){var t=jQuery("form.form_times_available").attr("class").split(" ");jQuery.each(t,function(e,t){null!=t.match(/wd\|/i)?(n=t.replace(/wd\|/i,"").split("-"),weekdayStart=n[0],weekdayEnd=n[1]):null!=t.match(/we\|/i)&&(o=t.replace(/we\|/i,"").split("-"),weekendStart=o[0],weekendEnd=o[1])})}void 0===e&&(e=jQuery(".available_date_time input[type=text]").val());var i=new Date(e).getDay(),a=null,d=[15,45],n={open:weekdayStart,closed:weekdayEnd},o={open:weekendStart,closed:weekendEnd};switch(i){case 0:a={day:"Sunday",times:y(o.open,o.closed,d)};break;case 1:a={day:"Monday",times:y(n.open,n.closed,d)};break;case 2:a={day:"Tuesday",times:y(n.open,n.closed,d)};break;case 3:a={day:"Wednesday",times:y(n.open,n.closed,d)};break;case 4:a={day:"Thursday",times:y(n.open,n.closed,d)};break;case 5:a={day:"Friday",times:y(n.open,n.closed,d)};break;case 6:a={day:"Saturday",times:y(o.open,o.closed,d)};break;default:dayOfTheWeek=null}if(jQuery(".available_time_slots select").length){var r=jQuery(".available_time_slots select");r.find("option:not(.gf_placeholder)").remove(),a&&a.times.length&&(r.find("option:not(.gf_placeholder)").remove(),jQuery.each(a.times,function(e,t){r.append("<option class='available-time' value='"+t+"'>"+t+"</option>")}))}}jQuery(window).on("di_gravity_forms_loaded",function(e,t){var i=!!jQuery(".gfield .datepicker").length&&jQuery(".gfield .datepicker");if(format="mm/dd/yy",i&&(i.hasClass("mdy")?format="mm/dd/yy":i.hasClass("dmy")?format="dd/mm/yy":i.hasClass("dmy_dash")?format="dd-mm-yy":i.hasClass("dmy_dot")?format="dd.mm.yy":i.hasClass("ymd_slash")?format="yy/mm/dd":i.hasClass("ymd_dash")?format="yy-mm-dd":i.hasClass("ymd_dot")&&(format="yy.mm.dd"),i.datepicker("option","dateFormat",format),0<jQuery(".gfield.di_gf_enable_today .datepicker").length)){var a=new Date;h(".gfield.di_gf_enable_today .datepicker").datepicker("option","minDate",a)}}),jQuery(".available_date_time .datepicker").datepicker("option","onSelect",function(e,t){k(e)}),jQuery("form.form_times_available").length&&k()}),l(),jQuery(".vEdge").each(function(){var e="";if(h(".dropdown-menu").length)e=".dropdown-menu";else e=".sub-menu";var t=jQuery(this).children(e),i=-100*(t.children("li").length-1)+"%";t.css("top",i)})}),jQuery(document).ready(function(e){e(".ginput_container_phone input[type=tel]").length&&e(window).width()<=1024&&e(".ginput_container_phone input[type=tel]").attr("onBlur","formatPhone(this)")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
